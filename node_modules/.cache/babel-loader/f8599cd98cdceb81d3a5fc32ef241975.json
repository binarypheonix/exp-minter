{"ast":null,"code":"import{createSlice}from'@reduxjs/toolkit';import{getMarketplaceNftsQuery,loadMoreMarketplaceNftsQuery}from'../async/queries';import config from'../../config.json';//// State\n// Types\n// Data\nvar globalMarketplaceAddress=config.contracts.marketplace.fixedPrice.tez;export var initialState={marketplace:{address:globalMarketplaceAddress,tokens:null,loaded:false}};//// Reducers & Slice\nvar populateMarketplaceR=function populateMarketplaceR(state,_ref){var payload=_ref.payload;state.marketplace.tokens=payload.tokens;state.marketplace.loaded=true;};var slice=createSlice({name:'marketplace',initialState:initialState,reducers:{populateMarketplace:populateMarketplaceR},extraReducers:function extraReducers(_ref2){var addCase=_ref2.addCase;addCase(getMarketplaceNftsQuery.fulfilled,populateMarketplaceR);addCase(loadMoreMarketplaceNftsQuery.fulfilled,populateMarketplaceR);}});var populateMarketplace=slice.actions.populateMarketplace;export{populateMarketplace};export default slice;","map":{"version":3,"sources":["/Users/frankenstein/projects/minter/src/reducer/slices/marketplace.ts"],"names":["createSlice","getMarketplaceNftsQuery","loadMoreMarketplaceNftsQuery","config","globalMarketplaceAddress","contracts","marketplace","fixedPrice","tez","initialState","address","tokens","loaded","populateMarketplaceR","state","payload","slice","name","reducers","populateMarketplace","extraReducers","addCase","fulfilled","actions"],"mappings":"AAAA,OAASA,WAAT,KAAwD,kBAAxD,CACA,OACEC,uBADF,CAEEC,4BAFF,KAGO,kBAHP,CAMA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CAEA;AAEA;AAgBA;AAEA,GAAMC,CAAAA,wBAAwB,CAAGD,MAAM,CAACE,SAAP,CAAiBC,WAAjB,CAA6BC,UAA7B,CAAwCC,GAAzE,CAEA,MAAO,IAAMC,CAAAA,YAA8B,CAAG,CAC5CH,WAAW,CAAE,CACXI,OAAO,CAAEN,wBADE,CAEXO,MAAM,CAAE,IAFG,CAGXC,MAAM,CAAE,KAHG,CAD+B,CAAvC,CAQP;AAIA,GAAMC,CAAAA,oBAAyC,CAAG,QAA5CA,CAAAA,oBAA4C,CAACC,KAAD,MAAwB,IAAdC,CAAAA,OAAc,MAAdA,OAAc,CACxED,KAAK,CAACR,WAAN,CAAkBK,MAAlB,CAA2BI,OAAO,CAACJ,MAAnC,CACAG,KAAK,CAACR,WAAN,CAAkBM,MAAlB,CAA2B,IAA3B,CACD,CAHD,CAKA,GAAMI,CAAAA,KAAK,CAAGhB,WAAW,CAAC,CACxBiB,IAAI,CAAE,aADkB,CAExBR,YAAY,CAAZA,YAFwB,CAGxBS,QAAQ,CAAE,CACRC,mBAAmB,CAAEN,oBADb,CAHc,CAMxBO,aAAa,CAAE,6BAAiB,IAAdC,CAAAA,OAAc,OAAdA,OAAc,CAC9BA,OAAO,CAACpB,uBAAuB,CAACqB,SAAzB,CAAoCT,oBAApC,CAAP,CACAQ,OAAO,CAACnB,4BAA4B,CAACoB,SAA9B,CAAyCT,oBAAzC,CAAP,CACD,CATuB,CAAD,CAAzB,CAYO,GAAQM,CAAAA,mBAAR,CAAgCH,KAAK,CAACO,OAAtC,CAAQJ,mBAAR,C,4BAEP,cAAeH,CAAAA,KAAf","sourcesContent":["import { createSlice, PayloadAction, CaseReducer } from '@reduxjs/toolkit';\nimport {\n  getMarketplaceNftsQuery,\n  loadMoreMarketplaceNftsQuery\n} from '../async/queries';\nimport { Nft } from '../../lib/nfts/decoders';\nimport { MarketplaceNftLoadingData } from '../../lib/nfts/queries';\nimport config from '../../config.json';\n\n//// State\n\n// Types\n\nexport type Token = Nft;\n\nexport interface Marketplace {\n  address: string;\n  tokens: MarketplaceNftLoadingData[] | null;\n  loaded: boolean;\n}\n\nexport interface MarketplaceState {\n  marketplace: Marketplace;\n}\n\ntype Reducer<A> = CaseReducer<MarketplaceState, PayloadAction<A>>;\n\n// Data\n\nconst globalMarketplaceAddress = config.contracts.marketplace.fixedPrice.tez;\n\nexport const initialState: MarketplaceState = {\n  marketplace: {\n    address: globalMarketplaceAddress,\n    tokens: null,\n    loaded: false\n  }\n};\n\n//// Reducers & Slice\n\ntype PopulateMarketplace = Reducer<{ tokens: MarketplaceNftLoadingData[] }>;\n\nconst populateMarketplaceR: PopulateMarketplace = (state, { payload }) => {\n  state.marketplace.tokens = payload.tokens;\n  state.marketplace.loaded = true;\n};\n\nconst slice = createSlice({\n  name: 'marketplace',\n  initialState,\n  reducers: {\n    populateMarketplace: populateMarketplaceR\n  },\n  extraReducers: ({ addCase }) => {\n    addCase(getMarketplaceNftsQuery.fulfilled, populateMarketplaceR);\n    addCase(loadMoreMarketplaceNftsQuery.fulfilled, populateMarketplaceR);\n  }\n});\n\nexport const { populateMarketplace } = slice.actions;\n\nexport default slice;\n"]},"metadata":{},"sourceType":"module"}