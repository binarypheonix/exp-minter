{"ast":null,"code":"import _regeneratorRuntime from \"/Users/frankenstein/projects/minter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n/* eslint-disable prefer-arrow/prefer-arrow-functions */\n\n\nimport * as sodium from 'libsodium-wrappers';\n/**\n * Generate a random GUID\n */\n\nexport function generateGUID() {\n  return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var buf;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return sodium.ready;\n\n          case 2:\n            buf = sodium.randombytes_buf(16);\n            return _context.abrupt(\"return\", [buf.slice(0, 4), buf.slice(4, 6), buf.slice(6, 8), buf.slice(8, 10), buf.slice(10, 16)].map(function (subbuf) {\n              return Buffer.from(subbuf).toString('hex');\n            }).join('-'));\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n}\n/* eslint-enable prefer-arrow/prefer-arrow-functions */","map":{"version":3,"sources":["../../../src/utils/generate-uuid.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AACA,OAAO,KAAK,MAAZ,MAAwB,oBAAxB;AAEA;;AAEG;;AACH,OAAM,SAAgB,YAAhB,GAA4B;;;;;;;;AAChC,mBAAM,MAAM,CAAC,KAAb;;;AACM,YAAA,G,GAAM,MAAM,CAAC,eAAP,CAAuB,EAAvB,C;6CAEL,CAAC,GAAG,CAAC,KAAJ,CAAU,CAAV,EAAa,CAAb,CAAD,EAAkB,GAAG,CAAC,KAAJ,CAAU,CAAV,EAAa,CAAb,CAAlB,EAAmC,GAAG,CAAC,KAAJ,CAAU,CAAV,EAAa,CAAb,CAAnC,EAAoD,GAAG,CAAC,KAAJ,CAAU,CAAV,EAAa,EAAb,CAApD,EAAsE,GAAG,CAAC,KAAJ,CAAU,EAAV,EAAc,EAAd,CAAtE,EACJ,GADI,CACA,UAAU,MAAV,EAAgB;AACnB,qBAAO,MAAM,CAAC,IAAP,CAAY,MAAZ,EAAoB,QAApB,CAA6B,KAA7B,CAAP;AACD,aAHI,EAIJ,IAJI,CAIC,GAJD,C;;;;;;;;;AAKR;AAED","sourceRoot":"","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n/* eslint-disable prefer-arrow/prefer-arrow-functions */\nimport * as sodium from 'libsodium-wrappers';\n/**\n * Generate a random GUID\n */\nexport function generateGUID() {\n    return __awaiter(this, void 0, void 0, function* () {\n        yield sodium.ready;\n        const buf = sodium.randombytes_buf(16);\n        return [buf.slice(0, 4), buf.slice(4, 6), buf.slice(6, 8), buf.slice(8, 10), buf.slice(10, 16)]\n            .map(function (subbuf) {\n            return Buffer.from(subbuf).toString('hex');\n        })\n            .join('-');\n    });\n}\n/* eslint-enable prefer-arrow/prefer-arrow-functions */\n//# sourceMappingURL=generate-uuid.js.map"]},"metadata":{},"sourceType":"module"}