{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fieldNumber = exports.lcm = exports.gcd = void 0; // -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n\n/**\n * The *greatest common divisor* of two values\n *\n * @since 2.0.0\n */\n\nfunction gcd(E, field) {\n  var zero = field.zero;\n\n  var f = function f(x, y) {\n    return E.equals(y, zero) ? x : f(y, field.mod(x, y));\n  };\n\n  return f;\n}\n\nexports.gcd = gcd;\n/**\n * The *least common multiple* of two values\n *\n * @since 2.0.0\n */\n\nfunction lcm(E, F) {\n  var zero = F.zero;\n  var gcdSF = gcd(E, F);\n  return function (x, y) {\n    return E.equals(x, zero) || E.equals(y, zero) ? zero : F.div(F.mul(x, y), gcdSF(x, y));\n  };\n}\n\nexports.lcm = lcm; // -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n\n/**\n * Use [`Field`](./number.ts.html#Field) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\n\nexports.fieldNumber = {\n  add: function add(x, y) {\n    return x + y;\n  },\n  zero: 0,\n  mul: function mul(x, y) {\n    return x * y;\n  },\n  one: 1,\n  sub: function sub(x, y) {\n    return x - y;\n  },\n  degree: function degree(_) {\n    return 1;\n  },\n  div: function div(x, y) {\n    return x / y;\n  },\n  mod: function mod(x, y) {\n    return x % y;\n  }\n};","map":{"version":3,"sources":["/Users/frankenstein/projects/minter/node_modules/fp-ts/lib/Field.js"],"names":["Object","defineProperty","exports","value","fieldNumber","lcm","gcd","E","field","zero","f","x","y","equals","mod","F","gcdSF","div","mul","add","one","sub","degree","_"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,WAAR,GAAsBF,OAAO,CAACG,GAAR,GAAcH,OAAO,CAACI,GAAR,GAAc,KAAK,CAAvD,C,CACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AACA,SAASA,GAAT,CAAaC,CAAb,EAAgBC,KAAhB,EAAuB;AACnB,MAAIC,IAAI,GAAGD,KAAK,CAACC,IAAjB;;AACA,MAAIC,CAAC,GAAG,SAAJA,CAAI,CAAUC,CAAV,EAAaC,CAAb,EAAgB;AAAE,WAAQL,CAAC,CAACM,MAAF,CAASD,CAAT,EAAYH,IAAZ,IAAoBE,CAApB,GAAwBD,CAAC,CAACE,CAAD,EAAIJ,KAAK,CAACM,GAAN,CAAUH,CAAV,EAAaC,CAAb,CAAJ,CAAjC;AAAyD,GAAnF;;AACA,SAAOF,CAAP;AACH;;AACDR,OAAO,CAACI,GAAR,GAAcA,GAAd;AACA;AACA;AACA;AACA;AACA;;AACA,SAASD,GAAT,CAAaE,CAAb,EAAgBQ,CAAhB,EAAmB;AACf,MAAIN,IAAI,GAAGM,CAAC,CAACN,IAAb;AACA,MAAIO,KAAK,GAAGV,GAAG,CAACC,CAAD,EAAIQ,CAAJ,CAAf;AACA,SAAO,UAAUJ,CAAV,EAAaC,CAAb,EAAgB;AAAE,WAAQL,CAAC,CAACM,MAAF,CAASF,CAAT,EAAYF,IAAZ,KAAqBF,CAAC,CAACM,MAAF,CAASD,CAAT,EAAYH,IAAZ,CAArB,GAAyCA,IAAzC,GAAgDM,CAAC,CAACE,GAAF,CAAMF,CAAC,CAACG,GAAF,CAAMP,CAAN,EAASC,CAAT,CAAN,EAAmBI,KAAK,CAACL,CAAD,EAAIC,CAAJ,CAAxB,CAAxD;AAA2F,GAApH;AACH;;AACDV,OAAO,CAACG,GAAR,GAAcA,GAAd,C,CACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAH,OAAO,CAACE,WAAR,GAAsB;AAClBe,EAAAA,GAAG,EAAE,aAAUR,CAAV,EAAaC,CAAb,EAAgB;AAAE,WAAOD,CAAC,GAAGC,CAAX;AAAe,GADpB;AAElBH,EAAAA,IAAI,EAAE,CAFY;AAGlBS,EAAAA,GAAG,EAAE,aAAUP,CAAV,EAAaC,CAAb,EAAgB;AAAE,WAAOD,CAAC,GAAGC,CAAX;AAAe,GAHpB;AAIlBQ,EAAAA,GAAG,EAAE,CAJa;AAKlBC,EAAAA,GAAG,EAAE,aAAUV,CAAV,EAAaC,CAAb,EAAgB;AAAE,WAAOD,CAAC,GAAGC,CAAX;AAAe,GALpB;AAMlBU,EAAAA,MAAM,EAAE,gBAAUC,CAAV,EAAa;AAAE,WAAO,CAAP;AAAW,GANhB;AAOlBN,EAAAA,GAAG,EAAE,aAAUN,CAAV,EAAaC,CAAb,EAAgB;AAAE,WAAOD,CAAC,GAAGC,CAAX;AAAe,GAPpB;AAQlBE,EAAAA,GAAG,EAAE,aAAUH,CAAV,EAAaC,CAAb,EAAgB;AAAE,WAAOD,CAAC,GAAGC,CAAX;AAAe;AARpB,CAAtB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fieldNumber = exports.lcm = exports.gcd = void 0;\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * The *greatest common divisor* of two values\n *\n * @since 2.0.0\n */\nfunction gcd(E, field) {\n    var zero = field.zero;\n    var f = function (x, y) { return (E.equals(y, zero) ? x : f(y, field.mod(x, y))); };\n    return f;\n}\nexports.gcd = gcd;\n/**\n * The *least common multiple* of two values\n *\n * @since 2.0.0\n */\nfunction lcm(E, F) {\n    var zero = F.zero;\n    var gcdSF = gcd(E, F);\n    return function (x, y) { return (E.equals(x, zero) || E.equals(y, zero) ? zero : F.div(F.mul(x, y), gcdSF(x, y))); };\n}\nexports.lcm = lcm;\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use [`Field`](./number.ts.html#Field) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.fieldNumber = {\n    add: function (x, y) { return x + y; },\n    zero: 0,\n    mul: function (x, y) { return x * y; },\n    one: 1,\n    sub: function (x, y) { return x - y; },\n    degree: function (_) { return 1; },\n    div: function (x, y) { return x / y; },\n    mod: function (x, y) { return x % y; }\n};\n"]},"metadata":{},"sourceType":"script"}