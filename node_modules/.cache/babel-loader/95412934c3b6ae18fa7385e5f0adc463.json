{"ast":null,"code":"import _regeneratorRuntime from\"/Users/frankenstein/projects/minter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/frankenstein/projects/minter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/frankenstein/projects/minter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Box,Text,Modal,ModalOverlay,ModalContent,Spinner,Flex,Heading}from'@chakra-ui/react';import{CheckCircle,AlertCircle,X}from'react-feather';import{MinterButton}from'../../common';import{useSelector,useDispatch}from'../../../reducer';import{clearError,setStatus}from'../../../reducer/slices/status';function Content(props){var status=props.status,onClose=props.onClose,onRetry=props.onRetry,onCancel=props.onCancel;if(status.error){return/*#__PURE__*/React.createElement(Flex,{flexDir:\"column\",align:\"center\",px:4,py:10},/*#__PURE__*/React.createElement(Box,{color:\"brand.blue\",mb:6},/*#__PURE__*/React.createElement(AlertCircle,{size:\"70px\"})),/*#__PURE__*/React.createElement(Heading,{size:\"lg\",textAlign:\"center\",color:\"gray.500\",mb:6},props.errorMessage||'Operation failed'),/*#__PURE__*/React.createElement(Flex,{flexDir:\"row\",justify:\"center\"},/*#__PURE__*/React.createElement(MinterButton,{variant:\"primaryAction\",onClick:function onClick(){return onRetry();}},\"Retry\"),/*#__PURE__*/React.createElement(MinterButton,{variant:\"tertiaryAction\",onClick:function onClick(){return onCancel();},display:\"flex\",alignItems:\"center\",ml:4},/*#__PURE__*/React.createElement(Box,{color:\"currentcolor\"},/*#__PURE__*/React.createElement(X,{size:16,strokeWidth:\"3\"})),/*#__PURE__*/React.createElement(Text,{fontSize:16,ml:1,fontWeight:\"600\"},\"Close\"))));}if(status.status==='in_transit'){return/*#__PURE__*/React.createElement(Flex,{flexDir:\"column\",align:\"center\",px:4,py:10},/*#__PURE__*/React.createElement(Spinner,{size:\"xl\",mb:6,color:\"gray.300\"}),/*#__PURE__*/React.createElement(Heading,{size:\"lg\",textAlign:\"center\",color:\"gray.500\"},props.sync?props.pendingMessage||'Operation pending...':props.pendingAsyncMessage||'Opening wallet...'));}if(status.status==='complete'){return/*#__PURE__*/React.createElement(Flex,{flexDir:\"column\",align:\"center\",px:4,py:10},/*#__PURE__*/React.createElement(Box,{color:\"brand.blue\",mb:6},/*#__PURE__*/React.createElement(CheckCircle,{size:\"70px\"})),/*#__PURE__*/React.createElement(Heading,{size:\"lg\",textAlign:\"center\",color:\"gray.500\",mb:6},props.completeMessage||'Operation complete'),/*#__PURE__*/React.createElement(MinterButton,{variant:\"primaryAction\",onClick:function onClick(){return onClose();}},\"Close\"));}return null;}export default function FormModal(props){var _props$sync=props.sync,sync=_props$sync===void 0?false:_props$sync,_props$dispatchOnOpen=props.dispatchOnOpen,dispatchOnOpen=_props$dispatchOnOpen===void 0?false:_props$dispatchOnOpen,onComplete=props.onComplete,method=props.method;var _props$disclosure=props.disclosure,isOpen=_props$disclosure.isOpen,onOpen=_props$disclosure.onOpen,onClose=_props$disclosure.onClose;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),requestId=_useState2[0],setRequestId=_useState2[1];var status=useSelector(function(s){return s.status[props.method];});var dispatch=useDispatch();var notification=useSelector(function(s){return s.notifications.find(function(n){return n.requestId===requestId&&n.status==='pending'&&!n.delivered;});});// eslint-disable-next-line react-hooks/exhaustive-deps\nvar onSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var result,requestStatus;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:result=props.dispatchThunk();setRequestId(result.requestId);dispatch(setStatus({method:method,status:'in_transit'}));_context.next=5;return result;case 5:requestStatus=_context.sent.meta.requestStatus;if(requestStatus==='fulfilled'){dispatch(setStatus({method:method,status:sync?'complete':'ready'}));onComplete===null||onComplete===void 0?void 0:onComplete.call(null);}case 7:case\"end\":return _context.stop();}}},_callee);}));return function onSubmit(){return _ref.apply(this,arguments);};}();var hasError=status.error!==null;useEffect(function(){if(!requestId&&isOpen&&dispatchOnOpen&&!hasError){onSubmit();}},[isOpen,dispatchOnOpen,hasError,onSubmit,requestId]);var closeAndReset=function closeAndReset(){var withCallback=arguments.length>0&&arguments[0]!==undefined?arguments[0]:true;onClose();setRequestId(null);dispatch(clearError({method:props.method}));withCallback&&props.afterClose&&props.afterClose();};var closeIfReadyOrComplete=function closeIfReadyOrComplete(){if(status.status!=='in_transit'||hasError){closeAndReset();}};useEffect(function(){if(!sync&&isOpen&&!hasError&&notification){return closeAndReset();}else if(!isOpen&&hasError){return onOpen();}});return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Modal,{isOpen:isOpen,onClose:function onClose(){return closeIfReadyOrComplete();},initialFocusRef:props.initialRef,closeOnEsc:false,closeOnOverlayClick:false,onEsc:function onEsc(){return closeIfReadyOrComplete();},onOverlayClick:function onOverlayClick(){return closeIfReadyOrComplete();}},/*#__PURE__*/React.createElement(ModalOverlay,null),/*#__PURE__*/React.createElement(ModalContent,{mt:40},status.status==='ready'?props.body?props.body(onSubmit):null:/*#__PURE__*/React.createElement(Content,{sync:sync,isOpen:isOpen,status:status,onClose:function onClose(){return closeIfReadyOrComplete();},onCancel:function onCancel(){return closeAndReset(false);},onRetry:function onRetry(){dispatch(clearError({method:props.method}));onSubmit();},pendingMessage:props.pendingMessage,pendingAsyncMessage:props.pendingAsyncMessage,completeMessage:props.completeMessage}))));}","map":{"version":3,"sources":["/Users/frankenstein/projects/minter/src/components/common/modals/FormModal.tsx"],"names":["React","useState","useEffect","Box","Text","Modal","ModalOverlay","ModalContent","Spinner","Flex","Heading","CheckCircle","AlertCircle","X","MinterButton","useSelector","useDispatch","clearError","setStatus","Content","props","status","onClose","onRetry","onCancel","error","errorMessage","sync","pendingMessage","pendingAsyncMessage","completeMessage","FormModal","dispatchOnOpen","onComplete","method","disclosure","isOpen","onOpen","requestId","setRequestId","s","dispatch","notification","notifications","find","n","delivered","onSubmit","result","dispatchThunk","requestStatus","meta","call","hasError","closeAndReset","withCallback","afterClose","closeIfReadyOrComplete","initialRef","body"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Text,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  Spinner,\n  Flex,\n  Heading,\n  UseDisclosureReturn\n} from '@chakra-ui/react';\nimport { CheckCircle, AlertCircle, X } from 'react-feather';\nimport { MinterButton } from '../../common';\nimport { useSelector, useDispatch } from '../../../reducer';\nimport {\n  clearError,\n  setStatus,\n  Status,\n  Method\n} from '../../../reducer/slices/status';\n\ninterface ContentProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onRetry: () => void;\n  onCancel: () => void;\n  status: Status;\n  sync: boolean;\n  pendingMessage?: React.ReactNode;\n  pendingAsyncMessage?: React.ReactNode;\n  completeMessage?: React.ReactNode;\n  errorMessage?: React.ReactNode;\n}\n\nfunction Content(props: ContentProps) {\n  const { status, onClose, onRetry, onCancel } = props;\n  if (status.error) {\n    return (\n      <Flex flexDir=\"column\" align=\"center\" px={4} py={10}>\n        <Box color=\"brand.blue\" mb={6}>\n          <AlertCircle size=\"70px\" />\n        </Box>\n        <Heading size=\"lg\" textAlign=\"center\" color=\"gray.500\" mb={6}>\n          {props.errorMessage || 'Operation failed'}\n        </Heading>\n        <Flex flexDir=\"row\" justify=\"center\">\n          <MinterButton variant=\"primaryAction\" onClick={() => onRetry()}>\n            Retry\n          </MinterButton>\n          <MinterButton\n            variant=\"tertiaryAction\"\n            onClick={() => onCancel()}\n            display=\"flex\"\n            alignItems=\"center\"\n            ml={4}\n          >\n            <Box color=\"currentcolor\">\n              <X size={16} strokeWidth=\"3\" />\n            </Box>\n            <Text fontSize={16} ml={1} fontWeight=\"600\">\n              Close\n            </Text>\n          </MinterButton>\n        </Flex>\n      </Flex>\n    );\n  }\n  if (status.status === 'in_transit') {\n    return (\n      <Flex flexDir=\"column\" align=\"center\" px={4} py={10}>\n        <Spinner size=\"xl\" mb={6} color=\"gray.300\" />\n        <Heading size=\"lg\" textAlign=\"center\" color=\"gray.500\">\n          {props.sync\n            ? props.pendingMessage || 'Operation pending...'\n            : props.pendingAsyncMessage || 'Opening wallet...'}\n        </Heading>\n      </Flex>\n    );\n  }\n  if (status.status === 'complete') {\n    return (\n      <Flex flexDir=\"column\" align=\"center\" px={4} py={10}>\n        <Box color=\"brand.blue\" mb={6}>\n          <CheckCircle size=\"70px\" />\n        </Box>\n        <Heading size=\"lg\" textAlign=\"center\" color=\"gray.500\" mb={6}>\n          {props.completeMessage || 'Operation complete'}\n        </Heading>\n        <MinterButton variant=\"primaryAction\" onClick={() => onClose()}>\n          Close\n        </MinterButton>\n      </Flex>\n    );\n  }\n  return null;\n}\n\nexport type AsyncThunkActionResult = { requestId: string } & Promise<{\n  meta: { requestStatus: 'fulfilled' | 'rejected' };\n}>;\n\ninterface FormModalProps {\n  // Required Props\n  disclosure: UseDisclosureReturn;\n  method: Method;\n  dispatchThunk: () => AsyncThunkActionResult;\n  // Optional Props\n  sync?: boolean;\n  body?: (onSubmit: () => Promise<void>) => React.ReactNode;\n  dispatchOnOpen?: boolean;\n  initialRef?: React.MutableRefObject<null>;\n  onComplete?: () => void;\n  afterClose?: () => void;\n  pendingMessage?: React.ReactNode;\n  pendingAsyncMessage?: React.ReactNode;\n  completeMessage?: React.ReactNode;\n}\n\nexport default function FormModal(props: FormModalProps) {\n  const { sync = false, dispatchOnOpen = false, onComplete, method } = props;\n  const { isOpen, onOpen, onClose } = props.disclosure;\n  const [requestId, setRequestId] = useState<string | null>(null);\n  const status = useSelector(s => s.status[props.method]);\n  const dispatch = useDispatch();\n  const notification = useSelector(s =>\n    s.notifications.find(\n      n => n.requestId === requestId && n.status === 'pending' && !n.delivered\n    )\n  );\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const onSubmit = async () => {\n    const result = props.dispatchThunk();\n    setRequestId(result.requestId);\n    dispatch(setStatus({ method, status: 'in_transit' }));\n    const requestStatus = (await result).meta.requestStatus;\n    if (requestStatus === 'fulfilled') {\n      dispatch(setStatus({ method, status: sync ? 'complete' : 'ready' }));\n      onComplete?.call(null);\n    }\n  };\n\n  const hasError = status.error !== null;\n\n  useEffect(() => {\n    if (!requestId && isOpen && dispatchOnOpen && !hasError) {\n      onSubmit();\n    }\n  }, [isOpen, dispatchOnOpen, hasError, onSubmit, requestId]);\n\n  const closeAndReset = (withCallback = true) => {\n    onClose();\n    setRequestId(null);\n    dispatch(clearError({ method: props.method }));\n    withCallback && props.afterClose && props.afterClose();\n  };\n\n  const closeIfReadyOrComplete = () => {\n    if (status.status !== 'in_transit' || hasError) {\n      closeAndReset();\n    }\n  };\n\n  useEffect(() => {\n    if (!sync && isOpen && !hasError && notification) {\n      return closeAndReset();\n    } else if (!isOpen && hasError) {\n      return onOpen();\n    }\n  });\n\n  return (\n    <>\n      <Modal\n        isOpen={isOpen}\n        onClose={() => closeIfReadyOrComplete()}\n        initialFocusRef={props.initialRef}\n        closeOnEsc={false}\n        closeOnOverlayClick={false}\n        onEsc={() => closeIfReadyOrComplete()}\n        onOverlayClick={() => closeIfReadyOrComplete()}\n      >\n        <ModalOverlay />\n        <ModalContent mt={40}>\n          {status.status === 'ready' ? (\n            props.body ? (\n              props.body(onSubmit)\n            ) : null\n          ) : (\n            <Content\n              sync={sync}\n              isOpen={isOpen}\n              status={status}\n              onClose={() => closeIfReadyOrComplete()}\n              onCancel={() => closeAndReset(false)}\n              onRetry={() => {\n                dispatch(clearError({ method: props.method }));\n                onSubmit();\n              }}\n              pendingMessage={props.pendingMessage}\n              pendingAsyncMessage={props.pendingAsyncMessage}\n              completeMessage={props.completeMessage}\n            />\n          )}\n        </ModalContent>\n      </Modal>\n    </>\n  );\n}\n\nexport interface BaseModalProps {\n  disclosure: UseDisclosureReturn;\n  sync?: boolean;\n}\n\nexport interface BaseModalButtonProps {\n  sync?: boolean;\n}\n"]},"metadata":{},"sourceType":"module"}