{"ast":null,"code":"import _regeneratorRuntime from\"/Users/frankenstein/projects/minter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/frankenstein/projects/minter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/frankenstein/projects/minter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/frankenstein/projects/minter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import{HttpBackend}from'@taquito/http-utils';var CustomIpfsHttpHandler=/*#__PURE__*/function(){function CustomIpfsHttpHandler(ipfsGatheway,gatewayProtocol){_classCallCheck(this,CustomIpfsHttpHandler);this._ipfsGateway=void 0;this._gatewayProtocol=void 0;this._httpBackend=new HttpBackend();this._ipfsGateway=ipfsGatheway?ipfsGatheway:'ipfs.io';this._gatewayProtocol=gatewayProtocol?gatewayProtocol:'https';}_createClass(CustomIpfsHttpHandler,[{key:\"getMetadata\",value:function(){var _getMetadata=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(_contractAbstraction,_ref,_context){var location;return _regeneratorRuntime.wrap(function _callee$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:location=_ref.location;return _context2.abrupt(\"return\",this._httpBackend.createRequest({url:\"\".concat(this._gatewayProtocol,\"://\").concat(this._ipfsGateway,\"/ipfs/\").concat(location.substring(2),\"/\"),method:'GET',headers:{'Content-Type':'text/plain'},mimeType:'text; charset=utf-8',json:false}));case 2:case\"end\":return _context2.stop();}}},_callee,this);}));function getMetadata(_x,_x2,_x3){return _getMetadata.apply(this,arguments);}return getMetadata;}()}]);return CustomIpfsHttpHandler;}();export{CustomIpfsHttpHandler as default};","map":{"version":3,"sources":["/Users/frankenstein/projects/minter/src/lib/util/taquito-custom-ipfs-http-handler.ts"],"names":["HttpBackend","CustomIpfsHttpHandler","ipfsGatheway","gatewayProtocol","_ipfsGateway","_gatewayProtocol","_httpBackend","_contractAbstraction","_context","location","createRequest","url","substring","method","headers","mimeType","json"],"mappings":"mmBACA,OAASA,WAAT,KAA4B,qBAA5B,C,GAQqBC,CAAAA,qB,yBAKnB,+BAAYC,YAAZ,CAAmCC,eAAnC,CAA6D,kDAJrDC,YAIqD,aAHrDC,gBAGqD,aAFrDC,YAEqD,CAFtC,GAAIN,CAAAA,WAAJ,EAEsC,CAC3D,KAAKI,YAAL,CAAoBF,YAAY,CAAGA,YAAH,CAAkB,SAAlD,CACA,KAAKG,gBAAL,CAAwBF,eAAe,CAAGA,eAAH,CAAqB,OAA5D,CACD,C,iJAED,iBACEI,oBADF,MAGEC,QAHF,kIAEIC,QAFJ,MAEIA,QAFJ,kCAKS,KAAKH,YAAL,CAAkBI,aAAlB,CAAwC,CAC7CC,GAAG,WAAK,KAAKN,gBAAV,eACD,KAAKD,YADJ,kBAEMK,QAAQ,CAACG,SAAT,CAAmB,CAAnB,CAFN,KAD0C,CAI7CC,MAAM,CAAE,KAJqC,CAK7CC,OAAO,CAAE,CAAE,eAAgB,YAAlB,CALoC,CAM7CC,QAAQ,CAAE,qBANmC,CAO7CC,IAAI,CAAE,KAPuC,CAAxC,CALT,8D,iJAVmBf,qB","sourcesContent":["import { Handler, Tzip16Uri } from '@taquito/tzip16';\nimport { HttpBackend } from '@taquito/http-utils';\nimport {\n  ContractAbstraction,\n  ContractProvider,\n  Wallet,\n  Context\n} from '@taquito/taquito';\n\nexport default class CustomIpfsHttpHandler implements Handler {\n  private _ipfsGateway: string;\n  private _gatewayProtocol: string;\n  private _httpBackend = new HttpBackend();\n\n  constructor(ipfsGatheway?: string, gatewayProtocol?: string) {\n    this._ipfsGateway = ipfsGatheway ? ipfsGatheway : 'ipfs.io';\n    this._gatewayProtocol = gatewayProtocol ? gatewayProtocol : 'https';\n  }\n\n  async getMetadata(\n    _contractAbstraction: ContractAbstraction<ContractProvider | Wallet>,\n    { location }: Tzip16Uri,\n    _context: Context\n  ): Promise<string> {\n    return this._httpBackend.createRequest<string>({\n      url: `${this._gatewayProtocol}://${\n        this._ipfsGateway\n      }/ipfs/${location.substring(2)}/`,\n      method: 'GET',\n      headers: { 'Content-Type': 'text/plain' },\n      mimeType: 'text; charset=utf-8',\n      json: false\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}