{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.uniq = exports.elem = exports.rotate = exports.intersperse = exports.prependAll = exports.unzip = exports.zip = exports.zipWith = exports.sort = exports.lefts = exports.rights = exports.reverse = exports.modifyAt = exports.deleteAt = exports.updateAt = exports.insertAt = exports.findLastIndex = exports.findLastMap = exports.findLast = exports.findFirstMap = exports.findFirst = exports.findIndex = exports.dropLeftWhile = exports.dropRight = exports.dropLeft = exports.spanLeft = exports.takeLeftWhile = exports.takeRight = exports.takeLeft = exports.init = exports.tail = exports.last = exports.head = exports.lookup = exports.isOutOfBound = exports.size = exports.isNonEmpty = exports.isEmpty = exports.scanRight = exports.scanLeft = exports.chainWithIndex = exports.foldRight = exports.matchRight = exports.foldLeft = exports.matchLeft = exports.replicate = exports.range = exports.makeBy = exports.append = exports.prepend = void 0;\nexports.Pointed = exports.flap = exports.Functor = exports.getOrd = exports.getEq = exports.getMonoid = exports.getSemigroup = exports.getShow = exports.URI = exports.unfold = exports.wilt = exports.wither = exports.traverseWithIndex = exports.sequence = exports.traverse = exports.reduceRightWithIndex = exports.reduceRight = exports.reduceWithIndex = exports.foldMap = exports.reduce = exports.foldMapWithIndex = exports.duplicate = exports.extend = exports.filterWithIndex = exports.partitionMapWithIndex = exports.partitionMap = exports.partitionWithIndex = exports.partition = exports.compact = exports.filterMap = exports.filterMapWithIndex = exports.filter = exports.separate = exports.mapWithIndex = exports.map = exports.flatten = exports.chain = exports.ap = exports.alt = exports.altW = exports.zero = exports.of = exports.difference = exports.intersection = exports.union = exports.comprehension = exports.chunksOf = exports.splitAt = exports.chop = exports.sortBy = void 0;\nexports.readonlyArray = exports.prependToAll = exports.snoc = exports.cons = exports.apS = exports.bind = exports.bindTo = exports.Do = exports.some = exports.every = exports.empty = exports.fromArray = exports.toArray = exports.unsafeDeleteAt = exports.unsafeUpdateAt = exports.unsafeInsertAt = exports.Witherable = exports.TraversableWithIndex = exports.Traversable = exports.FoldableWithIndex = exports.Foldable = exports.FilterableWithIndex = exports.Filterable = exports.Compactable = exports.Extend = exports.Alternative = exports.Alt = exports.Unfoldable = exports.chainFirst = exports.Monad = exports.Chain = exports.Applicative = exports.apSecond = exports.apFirst = exports.Apply = exports.FunctorWithIndex = void 0;\n\nvar Apply_1 = require(\"./Apply\");\n\nvar Chain_1 = require(\"./Chain\");\n\nvar Eq_1 = require(\"./Eq\");\n\nvar function_1 = require(\"./function\");\n\nvar Functor_1 = require(\"./Functor\");\n\nvar N = __importStar(require(\"./number\"));\n\nvar O = __importStar(require(\"./Option\"));\n\nvar Ord_1 = require(\"./Ord\");\n\nvar RNEA = __importStar(require(\"./ReadonlyNonEmptyArray\"));\n\nvar Separated_1 = require(\"./Separated\"); // -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n\n/**\n * Prepend an element to the front of a `ReadonlyArray`, creating a new `ReadonlyNonEmptyArray`.\n *\n * @example\n * import { prepend } from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([2, 3, 4], prepend(1)), [1, 2, 3, 4])\n *\n * @category constructors\n * @since 2.10.0\n */\n\n\nexports.prepend = RNEA.prepend;\n/**\n * Append an element to the end of a `ReadonlyArray`, creating a new `ReadonlyNonEmptyArray`.\n *\n * @example\n * import { append } from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([1, 2, 3], append(4)), [1, 2, 3, 4])\n *\n * @category constructors\n * @since 2.10.0\n */\n\nexports.append = RNEA.append;\n/**\n * Return a `ReadonlyArray` of length `n` with element `i` initialized with `f(i)`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { makeBy } from 'fp-ts/ReadonlyArray'\n *\n * const double = (n: number): number => n * 2\n * assert.deepStrictEqual(makeBy(5, double), [0, 2, 4, 6, 8])\n *\n * @category constructors\n * @since 2.5.0\n */\n\nvar makeBy = function makeBy(n, f) {\n  return n <= 0 ? exports.empty : RNEA.makeBy(n, f);\n};\n\nexports.makeBy = makeBy;\n/**\n * Create a `ReadonlyArray` containing a range of integers, including both endpoints.\n *\n * @example\n * import { range } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(range(1, 5), [1, 2, 3, 4, 5])\n *\n * @category constructors\n * @since 2.5.0\n */\n\nvar range = function range(start, end) {\n  return start <= end ? exports.makeBy(end - start + 1, function (i) {\n    return start + i;\n  }) : [start];\n};\n\nexports.range = range;\n/**\n * Create a `ReadonlyArray` containing a value repeated the specified number of times.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { replicate } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(replicate(3, 'a'), ['a', 'a', 'a'])\n *\n * @category constructors\n * @since 2.5.0\n */\n\nvar replicate = function replicate(n, a) {\n  return exports.makeBy(n, function () {\n    return a;\n  });\n};\n\nexports.replicate = replicate; // -------------------------------------------------------------------------------------\n// destructors\n// -------------------------------------------------------------------------------------\n\n/**\n * Break an array into its first element and remaining elements.\n *\n * @example\n * import { matchLeft } from 'fp-ts/ReadonlyArray'\n *\n * const len: <A>(as: ReadonlyArray<A>) => number = matchLeft(() => 0, (_, tail) => 1 + len(tail))\n * assert.strictEqual(len([1, 2, 3]), 3)\n *\n * @category destructors\n * @since 2.10.0\n */\n\nvar matchLeft = function matchLeft(onEmpty, onNonEmpty) {\n  return function (as) {\n    return exports.isNonEmpty(as) ? onNonEmpty(RNEA.head(as), RNEA.tail(as)) : onEmpty();\n  };\n};\n\nexports.matchLeft = matchLeft;\n/**\n * Alias of [`matchLeft`](#matchleft).\n *\n * @category destructors\n * @since 2.5.0\n */\n\nexports.foldLeft = exports.matchLeft;\n/**\n * Break an array into its initial elements and the last element.\n *\n * @category destructors\n * @since 2.10.0\n */\n\nvar matchRight = function matchRight(onEmpty, onNonEmpty) {\n  return function (as) {\n    return exports.isNonEmpty(as) ? onNonEmpty(RNEA.init(as), RNEA.last(as)) : onEmpty();\n  };\n};\n\nexports.matchRight = matchRight;\n/**\n * Alias of [`matchRight`](#matchright).\n *\n * @category destructors\n * @since 2.5.0\n */\n\nexports.foldRight = exports.matchRight; // -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n\n/**\n * @category combinators\n * @since 2.7.0\n */\n\nvar chainWithIndex = function chainWithIndex(f) {\n  return function (as) {\n    if (exports.isEmpty(as)) {\n      return exports.empty;\n    }\n\n    var out = [];\n\n    for (var i = 0; i < as.length; i++) {\n      out.push.apply(out, f(i, as[i]));\n    }\n\n    return out;\n  };\n};\n\nexports.chainWithIndex = chainWithIndex;\n/**\n * Same as `reduce` but it carries over the intermediate steps.\n *\n * @example\n * import { scanLeft } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(scanLeft(10, (b, a: number) => b - a)([1, 2, 3]), [10, 9, 7, 4])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nvar scanLeft = function scanLeft(b, f) {\n  return function (as) {\n    var len = as.length;\n    var out = new Array(len + 1);\n    out[0] = b;\n\n    for (var i = 0; i < len; i++) {\n      out[i + 1] = f(out[i], as[i]);\n    }\n\n    return out;\n  };\n};\n\nexports.scanLeft = scanLeft;\n/**\n * Fold an array from the right, keeping all intermediate results instead of only the final result\n *\n * @example\n * import { scanRight } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(scanRight(10, (a: number, b) => b - a)([1, 2, 3]), [4, 5, 7, 10])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nvar scanRight = function scanRight(b, f) {\n  return function (as) {\n    var len = as.length;\n    var out = new Array(len + 1);\n    out[len] = b;\n\n    for (var i = len - 1; i >= 0; i--) {\n      out[i] = f(as[i], out[i + 1]);\n    }\n\n    return out;\n  };\n};\n\nexports.scanRight = scanRight;\n/**\n * Test whether a `ReadonlyArray` is empty.\n *\n * @example\n * import { isEmpty } from 'fp-ts/ReadonlyArray'\n *\n * assert.strictEqual(isEmpty([]), true)\n *\n * @since 2.5.0\n */\n\nvar isEmpty = function isEmpty(as) {\n  return as.length === 0;\n};\n\nexports.isEmpty = isEmpty;\n/**\n * Test whether a `ReadonlyArray` is non empty.\n *\n * @category guards\n * @since 2.5.0\n */\n\nexports.isNonEmpty = RNEA.isNonEmpty;\n/**\n * Calculate the number of elements in a `ReadonlyArray`.\n *\n * @since 2.10.0\n */\n\nvar size = function size(as) {\n  return as.length;\n};\n\nexports.size = size;\n/**\n * Test whether an array contains a particular index\n *\n * @since 2.5.0\n */\n\nexports.isOutOfBound = RNEA.isOutOfBound;\n\nfunction lookup(i, as) {\n  return as === undefined ? function (as) {\n    return lookup(i, as);\n  } : exports.isOutOfBound(i, as) ? O.none : O.some(as[i]);\n}\n\nexports.lookup = lookup;\n/**\n * Get the first element in an array, or `None` if the array is empty\n *\n * @example\n * import { head } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(head([1, 2, 3]), some(1))\n * assert.deepStrictEqual(head([]), none)\n *\n * @since 2.5.0\n */\n\nvar head = function head(as) {\n  return exports.isNonEmpty(as) ? O.some(RNEA.head(as)) : O.none;\n};\n\nexports.head = head;\n/**\n * Get the last element in an array, or `None` if the array is empty\n *\n * @example\n * import { last } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(last([1, 2, 3]), some(3))\n * assert.deepStrictEqual(last([]), none)\n *\n * @since 2.5.0\n */\n\nvar last = function last(as) {\n  return exports.isNonEmpty(as) ? O.some(RNEA.last(as)) : O.none;\n};\n\nexports.last = last;\n/**\n * Get all but the first element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { tail } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(tail([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(tail([]), none)\n *\n * @since 2.5.0\n */\n\nvar tail = function tail(as) {\n  return exports.isNonEmpty(as) ? O.some(RNEA.tail(as)) : O.none;\n};\n\nexports.tail = tail;\n/**\n * Get all but the last element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { init } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(init([1, 2, 3]), some([1, 2]))\n * assert.deepStrictEqual(init([]), none)\n *\n * @since 2.5.0\n */\n\nvar init = function init(as) {\n  return exports.isNonEmpty(as) ? O.some(RNEA.init(as)) : O.none;\n};\n\nexports.init = init;\n/**\n * Keep only a max number of elements from the start of an `ReadonlyArray`, creating a new `ReadonlyArray`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const input: ReadonlyArray<number> = [1, 2, 3]\n * assert.deepStrictEqual(pipe(input, RA.takeLeft(2)), [1, 2])\n *\n * // out of bounds\n * assert.strictEqual(pipe(input, RA.takeLeft(4)), input)\n * assert.strictEqual(pipe(input, RA.takeLeft(-1)), input)\n *\n * @category combinators\n * @since 2.5.0\n */\n\nvar takeLeft = function takeLeft(n) {\n  return function (as) {\n    return exports.isOutOfBound(n, as) ? as : n === 0 ? exports.empty : as.slice(0, n);\n  };\n};\n\nexports.takeLeft = takeLeft;\n/**\n * Keep only a max number of elements from the end of an `ReadonlyArray`, creating a new `ReadonlyArray`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const input: ReadonlyArray<number> = [1, 2, 3]\n * assert.deepStrictEqual(pipe(input, RA.takeRight(2)), [2, 3])\n *\n * // out of bounds\n * assert.strictEqual(pipe(input, RA.takeRight(4)), input)\n * assert.strictEqual(pipe(input, RA.takeRight(-1)), input)\n *\n * @since 2.5.0\n */\n\nvar takeRight = function takeRight(n) {\n  return function (as) {\n    return exports.isOutOfBound(n, as) ? as : n === 0 ? exports.empty : as.slice(-n);\n  };\n};\n\nexports.takeRight = takeRight;\n\nfunction takeLeftWhile(predicate) {\n  return function (as) {\n    var out = [];\n\n    for (var _i = 0, as_1 = as; _i < as_1.length; _i++) {\n      var a = as_1[_i];\n\n      if (!predicate(a)) {\n        break;\n      }\n\n      out.push(a);\n    }\n\n    var len = out.length;\n    return len === as.length ? as : len === 0 ? exports.empty : out;\n  };\n}\n\nexports.takeLeftWhile = takeLeftWhile;\n\nvar spanLeftIndex = function spanLeftIndex(as, predicate) {\n  var l = as.length;\n  var i = 0;\n\n  for (; i < l; i++) {\n    if (!predicate(as[i])) {\n      break;\n    }\n  }\n\n  return i;\n};\n\nfunction spanLeft(predicate) {\n  return function (as) {\n    var _a = exports.splitAt(spanLeftIndex(as, predicate))(as),\n        init = _a[0],\n        rest = _a[1];\n\n    return {\n      init: init,\n      rest: rest\n    };\n  };\n}\n\nexports.spanLeft = spanLeft;\n/**\n * Drop a max number of elements from the start of an `ReadonlyArray`, creating a new `ReadonlyArray`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const input: ReadonlyArray<number> = [1, 2, 3]\n * assert.deepStrictEqual(pipe(input, RA.dropLeft(2)), [3])\n * assert.strictEqual(pipe(input, RA.dropLeft(0)), input)\n * assert.strictEqual(pipe(input, RA.dropLeft(-1)), input)\n *\n * @category combinators\n * @since 2.5.0\n */\n\nvar dropLeft = function dropLeft(n) {\n  return function (as) {\n    return n <= 0 || exports.isEmpty(as) ? as : n >= as.length ? exports.empty : as.slice(n, as.length);\n  };\n};\n\nexports.dropLeft = dropLeft;\n/**\n * Drop a max number of elements from the end of an `ReadonlyArray`, creating a new `ReadonlyArray`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const input: ReadonlyArray<number> = [1, 2, 3]\n * assert.deepStrictEqual(pipe(input, RA.dropRight(2)), [1])\n * assert.strictEqual(pipe(input, RA.dropRight(0)), input)\n * assert.strictEqual(pipe(input, RA.dropRight(-1)), input)\n *\n * @category combinators\n * @since 2.5.0\n */\n\nvar dropRight = function dropRight(n) {\n  return function (as) {\n    return n <= 0 || exports.isEmpty(as) ? as : n >= as.length ? exports.empty : as.slice(0, as.length - n);\n  };\n};\n\nexports.dropRight = dropRight;\n/**\n * Remove the longest initial subarray for which all element satisfy the specified predicate, creating a new array\n *\n * @example\n * import { dropLeftWhile } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(dropLeftWhile((n: number) => n % 2 === 1)([1, 3, 2, 4, 5]), [2, 4, 5])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nvar dropLeftWhile = function dropLeftWhile(predicate) {\n  return function (as) {\n    var i = spanLeftIndex(as, predicate);\n    return i === 0 ? as : i === as.length ? exports.empty : as.slice(i);\n  };\n};\n\nexports.dropLeftWhile = dropLeftWhile;\n/**\n * Find the first index for which a predicate holds\n *\n * @example\n * import { findIndex } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([1, 2, 3]), some(1))\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([]), none)\n *\n * @since 2.5.0\n */\n\nvar findIndex = function findIndex(predicate) {\n  return function (as) {\n    for (var i = 0; i < as.length; i++) {\n      if (predicate(as[i])) {\n        return O.some(i);\n      }\n    }\n\n    return O.none;\n  };\n};\n\nexports.findIndex = findIndex;\n\nfunction findFirst(predicate) {\n  return function (as) {\n    for (var i = 0; i < as.length; i++) {\n      if (predicate(as[i])) {\n        return O.some(as[i]);\n      }\n    }\n\n    return O.none;\n  };\n}\n\nexports.findFirst = findFirst;\n/**\n * Find the first element returned by an option based selector function\n *\n * @example\n * import { findFirstMap } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   readonly name: string\n *   readonly age?: number\n * }\n *\n * const persons: ReadonlyArray<Person> = [{ name: 'John' }, { name: 'Mary', age: 45 }, { name: 'Joey', age: 28 }]\n *\n * // returns the name of the first person that has an age\n * assert.deepStrictEqual(findFirstMap((p: Person) => (p.age === undefined ? none : some(p.name)))(persons), some('Mary'))\n *\n * @since 2.5.0\n */\n\nvar findFirstMap = function findFirstMap(f) {\n  return function (as) {\n    for (var i = 0; i < as.length; i++) {\n      var out = f(as[i]);\n\n      if (O.isSome(out)) {\n        return out;\n      }\n    }\n\n    return O.none;\n  };\n};\n\nexports.findFirstMap = findFirstMap;\n\nfunction findLast(predicate) {\n  return function (as) {\n    for (var i = as.length - 1; i >= 0; i--) {\n      if (predicate(as[i])) {\n        return O.some(as[i]);\n      }\n    }\n\n    return O.none;\n  };\n}\n\nexports.findLast = findLast;\n/**\n * Find the last element returned by an option based selector function\n *\n * @example\n * import { findLastMap } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   readonly name: string\n *   readonly age?: number\n * }\n *\n * const persons: ReadonlyArray<Person> = [{ name: 'John' }, { name: 'Mary', age: 45 }, { name: 'Joey', age: 28 }]\n *\n * // returns the name of the last person that has an age\n * assert.deepStrictEqual(findLastMap((p: Person) => (p.age === undefined ? none : some(p.name)))(persons), some('Joey'))\n *\n * @since 2.5.0\n */\n\nvar findLastMap = function findLastMap(f) {\n  return function (as) {\n    for (var i = as.length - 1; i >= 0; i--) {\n      var out = f(as[i]);\n\n      if (O.isSome(out)) {\n        return out;\n      }\n    }\n\n    return O.none;\n  };\n};\n\nexports.findLastMap = findLastMap;\n/**\n * Returns the index of the last element of the list which matches the predicate\n *\n * @example\n * import { findLastIndex } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface X {\n *   readonly a: number\n *   readonly b: number\n * }\n * const xs: ReadonlyArray<X> = [{ a: 1, b: 0 }, { a: 1, b: 1 }]\n * assert.deepStrictEqual(findLastIndex((x: { readonly a: number }) => x.a === 1)(xs), some(1))\n * assert.deepStrictEqual(findLastIndex((x: { readonly a: number }) => x.a === 4)(xs), none)\n *\n *\n * @since 2.5.0\n */\n\nvar findLastIndex = function findLastIndex(predicate) {\n  return function (as) {\n    for (var i = as.length - 1; i >= 0; i--) {\n      if (predicate(as[i])) {\n        return O.some(i);\n      }\n    }\n\n    return O.none;\n  };\n};\n\nexports.findLastIndex = findLastIndex;\n/**\n * Insert an element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { insertAt } from 'fp-ts/ReadonlyArray'\n * import { some } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(insertAt(2, 5)([1, 2, 3, 4]), some([1, 2, 5, 3, 4]))\n *\n * @since 2.5.0\n */\n\nexports.insertAt = // tslint:disable-next-line: deprecation\nRNEA.insertAt;\n/**\n * Change the element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { updateAt } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(updateAt(1, 1)([1, 2, 3]), some([1, 1, 3]))\n * assert.deepStrictEqual(updateAt(1, 1)([]), none)\n *\n * @since 2.5.0\n */\n\nvar updateAt = function updateAt(i, a) {\n  return exports.modifyAt(i, function () {\n    return a;\n  });\n};\n\nexports.updateAt = updateAt;\n/**\n * Delete the element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { deleteAt } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(deleteAt(0)([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(deleteAt(1)([]), none)\n *\n * @since 2.5.0\n */\n\nvar deleteAt = function deleteAt(i) {\n  return function (as) {\n    return exports.isOutOfBound(i, as) ? O.none : O.some(exports.unsafeDeleteAt(i, as));\n  };\n};\n\nexports.deleteAt = deleteAt;\n/**\n * Apply a function to the element at the specified index, creating a new array, or returning `None` if the index is out\n * of bounds\n *\n * @example\n * import { modifyAt } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * const double = (x: number): number => x * 2\n * assert.deepStrictEqual(modifyAt(1, double)([1, 2, 3]), some([1, 4, 3]))\n * assert.deepStrictEqual(modifyAt(1, double)([]), none)\n *\n * @since 2.5.0\n */\n\nvar modifyAt = function modifyAt(i, f) {\n  return function (as) {\n    return exports.isOutOfBound(i, as) ? O.none : O.some(exports.unsafeUpdateAt(i, f(as[i]), as));\n  };\n};\n\nexports.modifyAt = modifyAt;\n/**\n * Reverse an array, creating a new array\n *\n * @example\n * import { reverse } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(reverse([1, 2, 3]), [3, 2, 1])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nvar reverse = function reverse(as) {\n  return as.length <= 1 ? as : as.slice().reverse();\n};\n\nexports.reverse = reverse;\n/**\n * Extracts from an array of `Either` all the `Right` elements. All the `Right` elements are extracted in order\n *\n * @example\n * import { rights } from 'fp-ts/ReadonlyArray'\n * import { right, left } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(rights([right(1), left('foo'), right(2)]), [1, 2])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nvar rights = function rights(as) {\n  var r = [];\n\n  for (var i = 0; i < as.length; i++) {\n    var a = as[i];\n\n    if (a._tag === 'Right') {\n      r.push(a.right);\n    }\n  }\n\n  return r;\n};\n\nexports.rights = rights;\n/**\n * Extracts from an array of `Either` all the `Left` elements. All the `Left` elements are extracted in order\n *\n * @example\n * import { lefts } from 'fp-ts/ReadonlyArray'\n * import { left, right } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(lefts([right(1), left('foo'), right(2)]), ['foo'])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nvar lefts = function lefts(as) {\n  var r = [];\n\n  for (var i = 0; i < as.length; i++) {\n    var a = as[i];\n\n    if (a._tag === 'Left') {\n      r.push(a.left);\n    }\n  }\n\n  return r;\n};\n\nexports.lefts = lefts;\n/**\n * Sort the elements of an array in increasing order, creating a new array\n *\n * @example\n * import { sort } from 'fp-ts/ReadonlyArray'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(sort(N.Ord)([3, 2, 1]), [1, 2, 3])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nvar sort = function sort(O) {\n  return function (as) {\n    return as.length <= 1 ? as : as.slice().sort(O.compare);\n  };\n};\n\nexports.sort = sort; // TODO: curry and make data-last in v3\n\n/**\n * Apply a function to pairs of elements at the same index in two arrays, collecting the results in a new array. If one\n * input array is short, excess elements of the longer array are discarded.\n *\n * @example\n * import { zipWith } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(zipWith([1, 2, 3], ['a', 'b', 'c', 'd'], (n, s) => s + n), ['a1', 'b2', 'c3'])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nvar zipWith = function zipWith(fa, fb, f) {\n  var fc = [];\n  var len = Math.min(fa.length, fb.length);\n\n  for (var i = 0; i < len; i++) {\n    fc[i] = f(fa[i], fb[i]);\n  }\n\n  return fc;\n};\n\nexports.zipWith = zipWith;\n\nfunction zip(as, bs) {\n  if (bs === undefined) {\n    return function (bs) {\n      return zip(bs, as);\n    };\n  }\n\n  return exports.zipWith(as, bs, function (a, b) {\n    return [a, b];\n  });\n}\n\nexports.zip = zip;\n/**\n * The function is reverse of `zip`. Takes an array of pairs and return two corresponding arrays\n *\n * @example\n * import { unzip } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(unzip([[1, 'a'], [2, 'b'], [3, 'c']]), [[1, 2, 3], ['a', 'b', 'c']])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nvar unzip = function unzip(as) {\n  var fa = [];\n  var fb = [];\n\n  for (var i = 0; i < as.length; i++) {\n    fa[i] = as[i][0];\n    fb[i] = as[i][1];\n  }\n\n  return [fa, fb];\n};\n\nexports.unzip = unzip;\n/**\n * Prepend an element to every member of an array\n *\n * @example\n * import { prependAll } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(prependAll(9)([1, 2, 3, 4]), [9, 1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.10.0\n */\n\nvar prependAll = function prependAll(middle) {\n  var f = RNEA.prependAll(middle);\n  return function (as) {\n    return exports.isNonEmpty(as) ? f(as) : as;\n  };\n};\n\nexports.prependAll = prependAll;\n/**\n * Places an element in between members of an array\n *\n * @example\n * import { intersperse } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(intersperse(9)([1, 2, 3, 4]), [1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.9.0\n */\n\nvar intersperse = function intersperse(middle) {\n  var f = RNEA.intersperse(middle);\n  return function (as) {\n    return exports.isNonEmpty(as) ? f(as) : as;\n  };\n};\n\nexports.intersperse = intersperse;\n/**\n * Rotate a `ReadonlyArray` by `n` steps.\n *\n * @example\n * import { rotate } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(rotate(2)([1, 2, 3, 4, 5]), [4, 5, 1, 2, 3])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nvar rotate = function rotate(n) {\n  var f = RNEA.rotate(n);\n  return function (as) {\n    return exports.isNonEmpty(as) ? f(as) : as;\n  };\n};\n\nexports.rotate = rotate;\n\nfunction elem(E) {\n  return function (a, as) {\n    if (as === undefined) {\n      var elemE_1 = elem(E);\n      return function (as) {\n        return elemE_1(a, as);\n      };\n    }\n\n    var predicate = function predicate(element) {\n      return E.equals(element, a);\n    };\n\n    var i = 0;\n\n    for (; i < as.length; i++) {\n      if (predicate(as[i])) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n}\n\nexports.elem = elem;\n/**\n * Remove duplicates from an array, keeping the first occurrence of an element.\n *\n * @example\n * import { uniq } from 'fp-ts/ReadonlyArray'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(uniq(N.Eq)([1, 2, 1]), [1, 2])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nvar uniq = function uniq(E) {\n  var f = RNEA.uniq(E);\n  return function (as) {\n    return exports.isNonEmpty(as) ? f(as) : as;\n  };\n};\n\nexports.uniq = uniq;\n/**\n * Sort the elements of an array in increasing order, where elements are compared using first `ords[0]`, then `ords[1]`,\n * etc...\n *\n * @example\n * import { sortBy } from 'fp-ts/ReadonlyArray'\n * import { contramap } from 'fp-ts/Ord'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * interface Person {\n *   readonly name: string\n *   readonly age: number\n * }\n * const byName = pipe(S.Ord, contramap((p: Person) => p.name))\n * const byAge = pipe(N.Ord, contramap((p: Person) => p.age))\n *\n * const sortByNameByAge = sortBy([byName, byAge])\n *\n * const persons = [{ name: 'a', age: 1 }, { name: 'b', age: 3 }, { name: 'c', age: 2 }, { name: 'b', age: 2 }]\n * assert.deepStrictEqual(sortByNameByAge(persons), [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 2 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 }\n * ])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nvar sortBy = function sortBy(ords) {\n  var f = RNEA.sortBy(ords);\n  return function (as) {\n    return exports.isNonEmpty(as) ? f(as) : as;\n  };\n};\n\nexports.sortBy = sortBy;\n/**\n * A useful recursion pattern for processing a `ReadonlyArray` to produce a new `ReadonlyArray`, often used for \"chopping\" up the input\n * `ReadonlyArray`. Typically `chop` is called with some function that will consume an initial prefix of the `ReadonlyArray` and produce a\n * value and the tail of the `ReadonlyArray`.\n *\n * @example\n * import { Eq } from 'fp-ts/Eq'\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * const group = <A>(S: Eq<A>): ((as: ReadonlyArray<A>) => ReadonlyArray<ReadonlyArray<A>>) => {\n *   return RA.chop(as => {\n *     const { init, rest } = pipe(as, RA.spanLeft((a: A) => S.equals(a, as[0])))\n *     return [init, rest]\n *   })\n * }\n * assert.deepStrictEqual(group(N.Eq)([1, 1, 2, 3, 3, 4]), [[1, 1], [2], [3, 3], [4]])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nvar chop = function chop(f) {\n  var g = RNEA.chop(f);\n  return function (as) {\n    return exports.isNonEmpty(as) ? g(as) : exports.empty;\n  };\n};\n\nexports.chop = chop;\n/**\n * Splits a `ReadonlyArray` into two pieces, the first piece has max `n` elements.\n *\n * @example\n * import { splitAt } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(splitAt(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4, 5]])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nvar splitAt = function splitAt(n) {\n  return function (as) {\n    return n >= 1 && exports.isNonEmpty(as) ? RNEA.splitAt(n)(as) : exports.isEmpty(as) ? [as, exports.empty] : [exports.empty, as];\n  };\n};\n\nexports.splitAt = splitAt;\n/**\n * Splits a `ReadonlyArray` into length-`n` pieces. The last piece will be shorter if `n` does not evenly divide the length of\n * the `ReadonlyArray`. Note that `chunksOf(n)([])` is `[]`, not `[[]]`. This is intentional, and is consistent with a recursive\n * definition of `chunksOf`; it satisfies the property that:\n *\n * ```ts\n * chunksOf(n)(xs).concat(chunksOf(n)(ys)) == chunksOf(n)(xs.concat(ys)))\n * ```\n *\n * whenever `n` evenly divides the length of `as`.\n *\n * @example\n * import { chunksOf } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(chunksOf(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4], [5]])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nvar chunksOf = function chunksOf(n) {\n  var f = RNEA.chunksOf(n);\n  return function (as) {\n    return exports.isNonEmpty(as) ? f(as) : exports.empty;\n  };\n};\n\nexports.chunksOf = chunksOf;\n\nfunction comprehension(input, f, g) {\n  if (g === void 0) {\n    g = function g() {\n      return true;\n    };\n  }\n\n  var go = function go(scope, input) {\n    return exports.isNonEmpty(input) ? function_1.pipe(RNEA.head(input), exports.chain(function (x) {\n      return go(function_1.pipe(scope, exports.append(x)), RNEA.tail(input));\n    })) : g.apply(void 0, scope) ? [f.apply(void 0, scope)] : exports.empty;\n  };\n\n  return go(exports.empty, input);\n}\n\nexports.comprehension = comprehension;\n\nfunction union(E) {\n  var unionE = RNEA.union(E);\n  return function (first, second) {\n    if (second === undefined) {\n      var unionE_1 = union(E);\n      return function (ys) {\n        return unionE_1(ys, first);\n      };\n    }\n\n    return exports.isNonEmpty(first) && exports.isNonEmpty(second) ? unionE(first, second) : exports.isNonEmpty(first) ? first : second;\n  };\n}\n\nexports.union = union;\n\nfunction intersection(E) {\n  var elemE = elem(E);\n  return function (xs, ys) {\n    if (ys === undefined) {\n      var intersectionE_1 = intersection(E);\n      return function (ys) {\n        return intersectionE_1(ys, xs);\n      };\n    }\n\n    return xs.filter(function (a) {\n      return elemE(a, ys);\n    });\n  };\n}\n\nexports.intersection = intersection;\n\nfunction difference(E) {\n  var elemE = elem(E);\n  return function (xs, ys) {\n    if (ys === undefined) {\n      var differenceE_1 = difference(E);\n      return function (ys) {\n        return differenceE_1(ys, xs);\n      };\n    }\n\n    return xs.filter(function (a) {\n      return !elemE(a, ys);\n    });\n  };\n}\n\nexports.difference = difference; // -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\n\nvar _map = function _map(fa, f) {\n  return function_1.pipe(fa, exports.map(f));\n};\n\nvar _mapWithIndex = function _mapWithIndex(fa, f) {\n  return function_1.pipe(fa, exports.mapWithIndex(f));\n};\n\nvar _ap = function _ap(fab, fa) {\n  return function_1.pipe(fab, exports.ap(fa));\n};\n\nvar _chain = function _chain(ma, f) {\n  return function_1.pipe(ma, exports.chain(f));\n};\n\nvar _filter = function _filter(fa, predicate) {\n  return function_1.pipe(fa, exports.filter(predicate));\n};\n\nvar _filterMap = function _filterMap(fa, f) {\n  return function_1.pipe(fa, exports.filterMap(f));\n};\n\nvar _partition = function _partition(fa, predicate) {\n  return function_1.pipe(fa, exports.partition(predicate));\n};\n\nvar _partitionMap = function _partitionMap(fa, f) {\n  return function_1.pipe(fa, exports.partitionMap(f));\n};\n\nvar _partitionWithIndex = function _partitionWithIndex(fa, predicateWithIndex) {\n  return function_1.pipe(fa, exports.partitionWithIndex(predicateWithIndex));\n};\n\nvar _partitionMapWithIndex = function _partitionMapWithIndex(fa, f) {\n  return function_1.pipe(fa, exports.partitionMapWithIndex(f));\n};\n\nvar _alt = function _alt(fa, that) {\n  return function_1.pipe(fa, exports.alt(that));\n};\n\nvar _reduce = function _reduce(fa, b, f) {\n  return function_1.pipe(fa, exports.reduce(b, f));\n};\n\nvar _foldMap = function _foldMap(M) {\n  var foldMapM = exports.foldMap(M);\n  return function (fa, f) {\n    return function_1.pipe(fa, foldMapM(f));\n  };\n};\n\nvar _reduceRight = function _reduceRight(fa, b, f) {\n  return function_1.pipe(fa, exports.reduceRight(b, f));\n};\n\nvar _reduceWithIndex = function _reduceWithIndex(fa, b, f) {\n  return function_1.pipe(fa, exports.reduceWithIndex(b, f));\n};\n\nvar _foldMapWithIndex = function _foldMapWithIndex(M) {\n  var foldMapWithIndexM = exports.foldMapWithIndex(M);\n  return function (fa, f) {\n    return function_1.pipe(fa, foldMapWithIndexM(f));\n  };\n};\n\nvar _reduceRightWithIndex = function _reduceRightWithIndex(fa, b, f) {\n  return function_1.pipe(fa, exports.reduceRightWithIndex(b, f));\n};\n\nvar _filterMapWithIndex = function _filterMapWithIndex(fa, f) {\n  return function_1.pipe(fa, exports.filterMapWithIndex(f));\n};\n\nvar _filterWithIndex = function _filterWithIndex(fa, predicateWithIndex) {\n  return function_1.pipe(fa, exports.filterWithIndex(predicateWithIndex));\n};\n\nvar _extend = function _extend(fa, f) {\n  return function_1.pipe(fa, exports.extend(f));\n};\n\nvar _traverse = function _traverse(F) {\n  var traverseF = exports.traverse(F);\n  return function (ta, f) {\n    return function_1.pipe(ta, traverseF(f));\n  };\n};\n/* istanbul ignore next */\n\n\nvar _traverseWithIndex = function _traverseWithIndex(F) {\n  var traverseWithIndexF = exports.traverseWithIndex(F);\n  return function (ta, f) {\n    return function_1.pipe(ta, traverseWithIndexF(f));\n  };\n};\n/* istanbul ignore next */\n\n\nvar _wither = function _wither(F) {\n  var witherF = exports.wither(F);\n  return function (fa, f) {\n    return function_1.pipe(fa, witherF(f));\n  };\n};\n/* istanbul ignore next */\n\n\nvar _wilt = function _wilt(F) {\n  var wiltF = exports.wilt(F);\n  return function (fa, f) {\n    return function_1.pipe(fa, wiltF(f));\n  };\n}; // -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n\n/**\n * @category Pointed\n * @since 2.5.0\n */\n\n\nexports.of = RNEA.of;\n/**\n * @category Alternative\n * @since 2.7.0\n */\n\nvar zero = function zero() {\n  return exports.empty;\n};\n\nexports.zero = zero;\n/**\n * Less strict version of [`alt`](#alt).\n *\n * @category Alt\n * @since 2.9.0\n */\n\nvar altW = function altW(that) {\n  return function (fa) {\n    return fa.concat(that());\n  };\n};\n\nexports.altW = altW;\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * @category Alt\n * @since 2.5.0\n */\n\nexports.alt = exports.altW;\n/**\n * Apply a function to an argument under a type constructor.\n *\n * @category Apply\n * @since 2.5.0\n */\n\nvar ap = function ap(fa) {\n  return exports.chain(function (f) {\n    return function_1.pipe(fa, exports.map(f));\n  });\n};\n\nexports.ap = ap;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category Monad\n * @since 2.5.0\n */\n\nvar chain = function chain(f) {\n  return function (ma) {\n    return function_1.pipe(ma, exports.chainWithIndex(function (_, a) {\n      return f(a);\n    }));\n  };\n};\n\nexports.chain = chain;\n/**\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexports.flatten = /*#__PURE__*/exports.chain(function_1.identity);\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.5.0\n */\n\nvar map = function map(f) {\n  return function (fa) {\n    return fa.map(function (a) {\n      return f(a);\n    });\n  };\n};\n\nexports.map = map;\n/**\n * @category FunctorWithIndex\n * @since 2.5.0\n */\n\nvar mapWithIndex = function mapWithIndex(f) {\n  return function (fa) {\n    return fa.map(function (a, i) {\n      return f(i, a);\n    });\n  };\n};\n\nexports.mapWithIndex = mapWithIndex;\n/**\n * @category Compactable\n * @since 2.5.0\n */\n\nvar separate = function separate(fa) {\n  var left = [];\n  var right = [];\n\n  for (var _i = 0, fa_1 = fa; _i < fa_1.length; _i++) {\n    var e = fa_1[_i];\n\n    if (e._tag === 'Left') {\n      left.push(e.left);\n    } else {\n      right.push(e.right);\n    }\n  }\n\n  return Separated_1.separated(left, right);\n};\n\nexports.separate = separate;\n/**\n * @category Filterable\n * @since 2.5.0\n */\n\nvar filter = function filter(predicate) {\n  return function (fa) {\n    return fa.filter(predicate);\n  };\n};\n\nexports.filter = filter;\n/**\n * @category FilterableWithIndex\n * @since 2.5.0\n */\n\nvar filterMapWithIndex = function filterMapWithIndex(f) {\n  return function (fa) {\n    var out = [];\n\n    for (var i = 0; i < fa.length; i++) {\n      var optionB = f(i, fa[i]);\n\n      if (O.isSome(optionB)) {\n        out.push(optionB.value);\n      }\n    }\n\n    return out;\n  };\n};\n\nexports.filterMapWithIndex = filterMapWithIndex;\n/**\n * @category Filterable\n * @since 2.5.0\n */\n\nvar filterMap = function filterMap(f) {\n  return exports.filterMapWithIndex(function (_, a) {\n    return f(a);\n  });\n};\n\nexports.filterMap = filterMap;\n/**\n * @category Compactable\n * @since 2.5.0\n */\n\nexports.compact = /*#__PURE__*/exports.filterMap(function_1.identity);\n/**\n * @category Filterable\n * @since 2.5.0\n */\n\nvar partition = function partition(predicate) {\n  return exports.partitionWithIndex(function (_, a) {\n    return predicate(a);\n  });\n};\n\nexports.partition = partition;\n/**\n * @category FilterableWithIndex\n * @since 2.5.0\n */\n\nvar partitionWithIndex = function partitionWithIndex(predicateWithIndex) {\n  return function (fa) {\n    var left = [];\n    var right = [];\n\n    for (var i = 0; i < fa.length; i++) {\n      var a = fa[i];\n\n      if (predicateWithIndex(i, a)) {\n        right.push(a);\n      } else {\n        left.push(a);\n      }\n    }\n\n    return Separated_1.separated(left, right);\n  };\n};\n\nexports.partitionWithIndex = partitionWithIndex;\n/**\n * @category Filterable\n * @since 2.5.0\n */\n\nvar partitionMap = function partitionMap(f) {\n  return exports.partitionMapWithIndex(function (_, a) {\n    return f(a);\n  });\n};\n\nexports.partitionMap = partitionMap;\n/**\n * @category FilterableWithIndex\n * @since 2.5.0\n */\n\nvar partitionMapWithIndex = function partitionMapWithIndex(f) {\n  return function (fa) {\n    var left = [];\n    var right = [];\n\n    for (var i = 0; i < fa.length; i++) {\n      var e = f(i, fa[i]);\n\n      if (e._tag === 'Left') {\n        left.push(e.left);\n      } else {\n        right.push(e.right);\n      }\n    }\n\n    return Separated_1.separated(left, right);\n  };\n};\n\nexports.partitionMapWithIndex = partitionMapWithIndex;\n/**\n * @category FilterableWithIndex\n * @since 2.5.0\n */\n\nvar filterWithIndex = function filterWithIndex(predicateWithIndex) {\n  return function (fa) {\n    return fa.filter(function (a, i) {\n      return predicateWithIndex(i, a);\n    });\n  };\n};\n\nexports.filterWithIndex = filterWithIndex;\n/**\n * @category Extend\n * @since 2.5.0\n */\n\nvar extend = function extend(f) {\n  return function (wa) {\n    return wa.map(function (_, i) {\n      return f(wa.slice(i));\n    });\n  };\n};\n\nexports.extend = extend;\n/**\n * Derivable from `Extend`.\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexports.duplicate = /*#__PURE__*/exports.extend(function_1.identity);\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\n\nvar foldMapWithIndex = function foldMapWithIndex(M) {\n  return function (f) {\n    return function (fa) {\n      return fa.reduce(function (b, a, i) {\n        return M.concat(b, f(i, a));\n      }, M.empty);\n    };\n  };\n};\n\nexports.foldMapWithIndex = foldMapWithIndex;\n/**\n * @category Foldable\n * @since 2.5.0\n */\n\nvar reduce = function reduce(b, f) {\n  return exports.reduceWithIndex(b, function (_, b, a) {\n    return f(b, a);\n  });\n};\n\nexports.reduce = reduce;\n/**\n * @category Foldable\n * @since 2.5.0\n */\n\nvar foldMap = function foldMap(M) {\n  var foldMapWithIndexM = exports.foldMapWithIndex(M);\n  return function (f) {\n    return foldMapWithIndexM(function (_, a) {\n      return f(a);\n    });\n  };\n};\n\nexports.foldMap = foldMap;\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\n\nvar reduceWithIndex = function reduceWithIndex(b, f) {\n  return function (fa) {\n    var len = fa.length;\n    var out = b;\n\n    for (var i = 0; i < len; i++) {\n      out = f(i, out, fa[i]);\n    }\n\n    return out;\n  };\n};\n\nexports.reduceWithIndex = reduceWithIndex;\n/**\n * @category Foldable\n * @since 2.5.0\n */\n\nvar reduceRight = function reduceRight(b, f) {\n  return exports.reduceRightWithIndex(b, function (_, a, b) {\n    return f(a, b);\n  });\n};\n\nexports.reduceRight = reduceRight;\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\n\nvar reduceRightWithIndex = function reduceRightWithIndex(b, f) {\n  return function (fa) {\n    return fa.reduceRight(function (b, a, i) {\n      return f(i, a, b);\n    }, b);\n  };\n};\n\nexports.reduceRightWithIndex = reduceRightWithIndex;\n/**\n * @category Traversable\n * @since 2.6.3\n */\n\nvar traverse = function traverse(F) {\n  var traverseWithIndexF = exports.traverseWithIndex(F);\n  return function (f) {\n    return traverseWithIndexF(function (_, a) {\n      return f(a);\n    });\n  };\n};\n\nexports.traverse = traverse;\n/**\n * @category Traversable\n * @since 2.6.3\n */\n\nvar sequence = function sequence(F) {\n  return function (ta) {\n    return _reduce(ta, F.of(exports.zero()), function (fas, fa) {\n      return F.ap(F.map(fas, function (as) {\n        return function (a) {\n          return function_1.pipe(as, exports.append(a));\n        };\n      }), fa);\n    });\n  };\n};\n\nexports.sequence = sequence;\n/**\n * @category TraversableWithIndex\n * @since 2.6.3\n */\n\nvar traverseWithIndex = function traverseWithIndex(F) {\n  return function (f) {\n    return exports.reduceWithIndex(F.of(exports.zero()), function (i, fbs, a) {\n      return F.ap(F.map(fbs, function (bs) {\n        return function (b) {\n          return function_1.pipe(bs, exports.append(b));\n        };\n      }), f(i, a));\n    });\n  };\n};\n\nexports.traverseWithIndex = traverseWithIndex;\n/**\n * @category Witherable\n * @since 2.6.5\n */\n\nvar wither = function wither(F) {\n  var traverseF = exports.traverse(F);\n  return function (f) {\n    return function (fa) {\n      return F.map(function_1.pipe(fa, traverseF(f)), exports.compact);\n    };\n  };\n};\n\nexports.wither = wither;\n/**\n * @category Witherable\n * @since 2.6.5\n */\n\nvar wilt = function wilt(F) {\n  var traverseF = exports.traverse(F);\n  return function (f) {\n    return function (fa) {\n      return F.map(function_1.pipe(fa, traverseF(f)), exports.separate);\n    };\n  };\n};\n\nexports.wilt = wilt;\n/**\n * @category Unfoldable\n * @since 2.6.6\n */\n\nvar unfold = function unfold(b, f) {\n  var out = [];\n  var bb = b;\n\n  while (true) {\n    var mt = f(bb);\n\n    if (O.isSome(mt)) {\n      var _a = mt.value,\n          a = _a[0],\n          b_1 = _a[1];\n      out.push(a);\n      bb = b_1;\n    } else {\n      break;\n    }\n  }\n\n  return out;\n};\n\nexports.unfold = unfold; // -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n\n/**\n * @category instances\n * @since 2.5.0\n */\n\nexports.URI = 'ReadonlyArray';\n/**\n * @category instances\n * @since 2.5.0\n */\n\nvar getShow = function getShow(S) {\n  return {\n    show: function show(as) {\n      return \"[\" + as.map(S.show).join(', ') + \"]\";\n    }\n  };\n};\n\nexports.getShow = getShow;\n/**\n * @category instances\n * @since 2.5.0\n */\n\nvar getSemigroup = function getSemigroup() {\n  return {\n    concat: function concat(first, second) {\n      return exports.isEmpty(first) ? second : exports.isEmpty(second) ? first : first.concat(second);\n    }\n  };\n};\n\nexports.getSemigroup = getSemigroup;\n/**\n * Returns a `Monoid` for `ReadonlyArray<A>`.\n *\n * @example\n * import { getMonoid } from 'fp-ts/ReadonlyArray'\n *\n * const M = getMonoid<number>()\n * assert.deepStrictEqual(M.concat([1, 2], [3, 4]), [1, 2, 3, 4])\n *\n * @category instances\n * @since 2.5.0\n */\n\nvar getMonoid = function getMonoid() {\n  return {\n    concat: exports.getSemigroup().concat,\n    empty: exports.empty\n  };\n};\n\nexports.getMonoid = getMonoid;\n/**\n * Derives an `Eq` over the `ReadonlyArray` of a given element type from the `Eq` of that type. The derived `Eq` defines two\n * arrays as equal if all elements of both arrays are compared equal pairwise with the given `E`. In case of arrays of\n * different lengths, the result is non equality.\n *\n * @example\n * import * as S from 'fp-ts/string'\n * import { getEq } from 'fp-ts/ReadonlyArray'\n *\n * const E = getEq(S.Eq)\n * assert.strictEqual(E.equals(['a', 'b'], ['a', 'b']), true)\n * assert.strictEqual(E.equals(['a'], []), false)\n *\n * @category instances\n * @since 2.5.0\n */\n\nvar getEq = function getEq(E) {\n  return Eq_1.fromEquals(function (xs, ys) {\n    return xs.length === ys.length && xs.every(function (x, i) {\n      return E.equals(x, ys[i]);\n    });\n  });\n};\n\nexports.getEq = getEq;\n/**\n * Derives an `Ord` over the `ReadonlyArray` of a given element type from the `Ord` of that type. The ordering between two such\n * arrays is equal to: the first non equal comparison of each arrays elements taken pairwise in increasing order, in\n * case of equality over all the pairwise elements; the longest array is considered the greatest, if both arrays have\n * the same length, the result is equality.\n *\n * @example\n * import { getOrd } from 'fp-ts/ReadonlyArray'\n * import * as S from 'fp-ts/string'\n *\n * const O = getOrd(S.Ord)\n * assert.strictEqual(O.compare(['b'], ['a']), 1)\n * assert.strictEqual(O.compare(['a'], ['a']), 0)\n * assert.strictEqual(O.compare(['a'], ['b']), -1)\n *\n *\n * @category instances\n * @since 2.5.0\n */\n\nvar getOrd = function getOrd(O) {\n  return Ord_1.fromCompare(function (a, b) {\n    var aLen = a.length;\n    var bLen = b.length;\n    var len = Math.min(aLen, bLen);\n\n    for (var i = 0; i < len; i++) {\n      var ordering = O.compare(a[i], b[i]);\n\n      if (ordering !== 0) {\n        return ordering;\n      }\n    }\n\n    return N.Ord.compare(aLen, bLen);\n  });\n};\n\nexports.getOrd = getOrd;\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Functor = {\n  URI: exports.URI,\n  map: _map\n};\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\n\nexports.flap =\n/*#_PURE_*/\nFunctor_1.flap(exports.Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\n\nexports.Pointed = {\n  URI: exports.URI,\n  of: exports.of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.FunctorWithIndex = {\n  URI: exports.URI,\n  map: _map,\n  mapWithIndex: _mapWithIndex\n};\n/**\n * @category instances\n * @since 2.10.0\n */\n\nexports.Apply = {\n  URI: exports.URI,\n  map: _map,\n  ap: _ap\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexports.apFirst = /*#__PURE__*/Apply_1.apFirst(exports.Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexports.apSecond = /*#__PURE__*/Apply_1.apSecond(exports.Apply);\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Applicative = {\n  URI: exports.URI,\n  map: _map,\n  ap: _ap,\n  of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\n\nexports.Chain = {\n  URI: exports.URI,\n  map: _map,\n  ap: _ap,\n  chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Monad = {\n  URI: exports.URI,\n  map: _map,\n  ap: _ap,\n  of: exports.of,\n  chain: _chain\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexports.chainFirst = /*#__PURE__*/Chain_1.chainFirst(exports.Chain);\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Unfoldable = {\n  URI: exports.URI,\n  unfold: exports.unfold\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Alt = {\n  URI: exports.URI,\n  map: _map,\n  alt: _alt\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Alternative = {\n  URI: exports.URI,\n  map: _map,\n  ap: _ap,\n  of: exports.of,\n  alt: _alt,\n  zero: exports.zero\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Extend = {\n  URI: exports.URI,\n  map: _map,\n  extend: _extend\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Compactable = {\n  URI: exports.URI,\n  compact: exports.compact,\n  separate: exports.separate\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Filterable = {\n  URI: exports.URI,\n  map: _map,\n  compact: exports.compact,\n  separate: exports.separate,\n  filter: _filter,\n  filterMap: _filterMap,\n  partition: _partition,\n  partitionMap: _partitionMap\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.FilterableWithIndex = {\n  URI: exports.URI,\n  map: _map,\n  mapWithIndex: _mapWithIndex,\n  compact: exports.compact,\n  separate: exports.separate,\n  filter: _filter,\n  filterMap: _filterMap,\n  partition: _partition,\n  partitionMap: _partitionMap,\n  partitionMapWithIndex: _partitionMapWithIndex,\n  partitionWithIndex: _partitionWithIndex,\n  filterMapWithIndex: _filterMapWithIndex,\n  filterWithIndex: _filterWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Foldable = {\n  URI: exports.URI,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.FoldableWithIndex = {\n  URI: exports.URI,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight,\n  reduceWithIndex: _reduceWithIndex,\n  foldMapWithIndex: _foldMapWithIndex,\n  reduceRightWithIndex: _reduceRightWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Traversable = {\n  URI: exports.URI,\n  map: _map,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight,\n  traverse: _traverse,\n  sequence: exports.sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.TraversableWithIndex = {\n  URI: exports.URI,\n  map: _map,\n  mapWithIndex: _mapWithIndex,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight,\n  reduceWithIndex: _reduceWithIndex,\n  foldMapWithIndex: _foldMapWithIndex,\n  reduceRightWithIndex: _reduceRightWithIndex,\n  traverse: _traverse,\n  sequence: exports.sequence,\n  traverseWithIndex: _traverseWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Witherable = {\n  URI: exports.URI,\n  map: _map,\n  compact: exports.compact,\n  separate: exports.separate,\n  filter: _filter,\n  filterMap: _filterMap,\n  partition: _partition,\n  partitionMap: _partitionMap,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight,\n  traverse: _traverse,\n  sequence: exports.sequence,\n  wither: _wither,\n  wilt: _wilt\n}; // -------------------------------------------------------------------------------------\n// unsafe\n// -------------------------------------------------------------------------------------\n\n/**\n * @category unsafe\n * @since 2.5.0\n */\n\nexports.unsafeInsertAt = RNEA.unsafeInsertAt;\n/**\n * @category unsafe\n * @since 2.5.0\n */\n\nvar unsafeUpdateAt = function unsafeUpdateAt(i, a, as) {\n  return exports.isNonEmpty(as) ? RNEA.unsafeUpdateAt(i, a, as) : as;\n};\n\nexports.unsafeUpdateAt = unsafeUpdateAt;\n/**\n * @category unsafe\n * @since 2.5.0\n */\n\nvar unsafeDeleteAt = function unsafeDeleteAt(i, as) {\n  var xs = as.slice();\n  xs.splice(i, 1);\n  return xs;\n};\n\nexports.unsafeDeleteAt = unsafeDeleteAt; // -------------------------------------------------------------------------------------\n// interop\n// -------------------------------------------------------------------------------------\n\n/**\n * @category interop\n * @since 2.5.0\n */\n\nvar toArray = function toArray(as) {\n  return as.slice();\n};\n\nexports.toArray = toArray;\n/**\n * @category interop\n * @since 2.5.0\n */\n\nvar fromArray = function fromArray(as) {\n  return exports.isEmpty(as) ? exports.empty : as.slice();\n};\n\nexports.fromArray = fromArray; // -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n\n/**\n * An empty array\n *\n * @since 2.5.0\n */\n\nexports.empty = RNEA.empty;\n/**\n * Check if a predicate holds true for every array member.\n *\n * @example\n * import { every } from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const isPositive = (n: number): boolean => n > 0\n *\n * assert.deepStrictEqual(pipe([1, 2, 3], every(isPositive)), true)\n * assert.deepStrictEqual(pipe([1, 2, -3], every(isPositive)), false)\n *\n * @since 2.9.0\n */\n\nvar every = function every(predicate) {\n  return function (as) {\n    return as.every(predicate);\n  };\n};\n\nexports.every = every;\n/**\n * Check if a predicate holds true for any array member.\n *\n * @example\n * import { some } from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const isPositive = (n: number): boolean => n > 0\n *\n * assert.deepStrictEqual(pipe([-1, -2, 3], some(isPositive)), true)\n * assert.deepStrictEqual(pipe([-1, -2, -3], some(isPositive)), false)\n *\n * @since 2.9.0\n */\n\nvar some = function some(predicate) {\n  return function (as) {\n    return as.some(predicate);\n  };\n};\n\nexports.some = some; // -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n\n/**\n * @since 2.9.0\n */\n\nexports.Do = /*#__PURE__*/exports.of({});\n/**\n * @since 2.8.0\n */\n\nexports.bindTo = /*#__PURE__*/Functor_1.bindTo(exports.Functor);\n/**\n * @since 2.8.0\n */\n\nexports.bind = /*#__PURE__*/Chain_1.bind(exports.Chain); // -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n\n/**\n * @since 2.8.0\n */\n\nexports.apS = /*#__PURE__*/Apply_1.apS(exports.Apply); // -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n\n/**\n * Use [`prepend`](#prepend) instead.\n *\n * @category constructors\n * @since 2.5.0\n * @deprecated\n */\n// tslint:disable-next-line: deprecation\n\nexports.cons = RNEA.cons;\n/**\n * Use [`append`](#append) instead.\n *\n * @category constructors\n * @since 2.5.0\n * @deprecated\n */\n// tslint:disable-next-line: deprecation\n\nexports.snoc = RNEA.snoc;\n/**\n * Use [`prependAll`](#prependall) instead.\n *\n * @category combinators\n * @since 2.9.0\n * @deprecated\n */\n\nexports.prependToAll = exports.prependAll;\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.5.0\n * @deprecated\n */\n\nexports.readonlyArray = {\n  URI: exports.URI,\n  compact: exports.compact,\n  separate: exports.separate,\n  map: _map,\n  ap: _ap,\n  of: exports.of,\n  chain: _chain,\n  filter: _filter,\n  filterMap: _filterMap,\n  partition: _partition,\n  partitionMap: _partitionMap,\n  mapWithIndex: _mapWithIndex,\n  partitionMapWithIndex: _partitionMapWithIndex,\n  partitionWithIndex: _partitionWithIndex,\n  filterMapWithIndex: _filterMapWithIndex,\n  filterWithIndex: _filterWithIndex,\n  alt: _alt,\n  zero: exports.zero,\n  unfold: exports.unfold,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight,\n  traverse: _traverse,\n  sequence: exports.sequence,\n  reduceWithIndex: _reduceWithIndex,\n  foldMapWithIndex: _foldMapWithIndex,\n  reduceRightWithIndex: _reduceRightWithIndex,\n  traverseWithIndex: _traverseWithIndex,\n  extend: _extend,\n  wither: _wither,\n  wilt: _wilt\n};","map":{"version":3,"sources":["/Users/frankenstein/projects/minter/node_modules/fp-ts/lib/ReadonlyArray.js"],"names":["__createBinding","Object","create","o","m","k","k2","undefined","defineProperty","enumerable","get","__setModuleDefault","v","value","__importStar","mod","__esModule","result","prototype","hasOwnProperty","call","exports","uniq","elem","rotate","intersperse","prependAll","unzip","zip","zipWith","sort","lefts","rights","reverse","modifyAt","deleteAt","updateAt","insertAt","findLastIndex","findLastMap","findLast","findFirstMap","findFirst","findIndex","dropLeftWhile","dropRight","dropLeft","spanLeft","takeLeftWhile","takeRight","takeLeft","init","tail","last","head","lookup","isOutOfBound","size","isNonEmpty","isEmpty","scanRight","scanLeft","chainWithIndex","foldRight","matchRight","foldLeft","matchLeft","replicate","range","makeBy","append","prepend","Pointed","flap","Functor","getOrd","getEq","getMonoid","getSemigroup","getShow","URI","unfold","wilt","wither","traverseWithIndex","sequence","traverse","reduceRightWithIndex","reduceRight","reduceWithIndex","foldMap","reduce","foldMapWithIndex","duplicate","extend","filterWithIndex","partitionMapWithIndex","partitionMap","partitionWithIndex","partition","compact","filterMap","filterMapWithIndex","filter","separate","mapWithIndex","map","flatten","chain","ap","alt","altW","zero","of","difference","intersection","union","comprehension","chunksOf","splitAt","chop","sortBy","readonlyArray","prependToAll","snoc","cons","apS","bind","bindTo","Do","some","every","empty","fromArray","toArray","unsafeDeleteAt","unsafeUpdateAt","unsafeInsertAt","Witherable","TraversableWithIndex","Traversable","FoldableWithIndex","Foldable","FilterableWithIndex","Filterable","Compactable","Extend","Alternative","Alt","Unfoldable","chainFirst","Monad","Chain","Applicative","apSecond","apFirst","Apply","FunctorWithIndex","Apply_1","require","Chain_1","Eq_1","function_1","Functor_1","N","O","Ord_1","RNEA","Separated_1","n","f","start","end","i","a","onEmpty","onNonEmpty","as","out","length","push","apply","b","len","Array","none","slice","predicate","_i","as_1","spanLeftIndex","l","_a","rest","isSome","r","_tag","right","left","compare","fa","fb","fc","Math","min","bs","middle","E","elemE_1","element","equals","ords","g","input","go","scope","pipe","x","unionE","first","second","unionE_1","ys","elemE","xs","intersectionE_1","differenceE_1","_map","_mapWithIndex","_ap","fab","_chain","ma","_filter","_filterMap","_partition","_partitionMap","_partitionWithIndex","predicateWithIndex","_partitionMapWithIndex","_alt","that","_reduce","_foldMap","M","foldMapM","_reduceRight","_reduceWithIndex","_foldMapWithIndex","foldMapWithIndexM","_reduceRightWithIndex","_filterMapWithIndex","_filterWithIndex","_extend","_traverse","F","traverseF","ta","_traverseWithIndex","traverseWithIndexF","_wither","witherF","_wilt","wiltF","concat","_","identity","fa_1","e","separated","optionB","wa","fas","fbs","bb","mt","b_1","S","show","join","fromEquals","fromCompare","aLen","bLen","ordering","Ord","splice"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.uniq = exports.elem = exports.rotate = exports.intersperse = exports.prependAll = exports.unzip = exports.zip = exports.zipWith = exports.sort = exports.lefts = exports.rights = exports.reverse = exports.modifyAt = exports.deleteAt = exports.updateAt = exports.insertAt = exports.findLastIndex = exports.findLastMap = exports.findLast = exports.findFirstMap = exports.findFirst = exports.findIndex = exports.dropLeftWhile = exports.dropRight = exports.dropLeft = exports.spanLeft = exports.takeLeftWhile = exports.takeRight = exports.takeLeft = exports.init = exports.tail = exports.last = exports.head = exports.lookup = exports.isOutOfBound = exports.size = exports.isNonEmpty = exports.isEmpty = exports.scanRight = exports.scanLeft = exports.chainWithIndex = exports.foldRight = exports.matchRight = exports.foldLeft = exports.matchLeft = exports.replicate = exports.range = exports.makeBy = exports.append = exports.prepend = void 0;\nexports.Pointed = exports.flap = exports.Functor = exports.getOrd = exports.getEq = exports.getMonoid = exports.getSemigroup = exports.getShow = exports.URI = exports.unfold = exports.wilt = exports.wither = exports.traverseWithIndex = exports.sequence = exports.traverse = exports.reduceRightWithIndex = exports.reduceRight = exports.reduceWithIndex = exports.foldMap = exports.reduce = exports.foldMapWithIndex = exports.duplicate = exports.extend = exports.filterWithIndex = exports.partitionMapWithIndex = exports.partitionMap = exports.partitionWithIndex = exports.partition = exports.compact = exports.filterMap = exports.filterMapWithIndex = exports.filter = exports.separate = exports.mapWithIndex = exports.map = exports.flatten = exports.chain = exports.ap = exports.alt = exports.altW = exports.zero = exports.of = exports.difference = exports.intersection = exports.union = exports.comprehension = exports.chunksOf = exports.splitAt = exports.chop = exports.sortBy = void 0;\nexports.readonlyArray = exports.prependToAll = exports.snoc = exports.cons = exports.apS = exports.bind = exports.bindTo = exports.Do = exports.some = exports.every = exports.empty = exports.fromArray = exports.toArray = exports.unsafeDeleteAt = exports.unsafeUpdateAt = exports.unsafeInsertAt = exports.Witherable = exports.TraversableWithIndex = exports.Traversable = exports.FoldableWithIndex = exports.Foldable = exports.FilterableWithIndex = exports.Filterable = exports.Compactable = exports.Extend = exports.Alternative = exports.Alt = exports.Unfoldable = exports.chainFirst = exports.Monad = exports.Chain = exports.Applicative = exports.apSecond = exports.apFirst = exports.Apply = exports.FunctorWithIndex = void 0;\nvar Apply_1 = require(\"./Apply\");\nvar Chain_1 = require(\"./Chain\");\nvar Eq_1 = require(\"./Eq\");\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nvar N = __importStar(require(\"./number\"));\nvar O = __importStar(require(\"./Option\"));\nvar Ord_1 = require(\"./Ord\");\nvar RNEA = __importStar(require(\"./ReadonlyNonEmptyArray\"));\nvar Separated_1 = require(\"./Separated\");\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * Prepend an element to the front of a `ReadonlyArray`, creating a new `ReadonlyNonEmptyArray`.\n *\n * @example\n * import { prepend } from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([2, 3, 4], prepend(1)), [1, 2, 3, 4])\n *\n * @category constructors\n * @since 2.10.0\n */\nexports.prepend = RNEA.prepend;\n/**\n * Append an element to the end of a `ReadonlyArray`, creating a new `ReadonlyNonEmptyArray`.\n *\n * @example\n * import { append } from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([1, 2, 3], append(4)), [1, 2, 3, 4])\n *\n * @category constructors\n * @since 2.10.0\n */\nexports.append = RNEA.append;\n/**\n * Return a `ReadonlyArray` of length `n` with element `i` initialized with `f(i)`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { makeBy } from 'fp-ts/ReadonlyArray'\n *\n * const double = (n: number): number => n * 2\n * assert.deepStrictEqual(makeBy(5, double), [0, 2, 4, 6, 8])\n *\n * @category constructors\n * @since 2.5.0\n */\nvar makeBy = function (n, f) { return (n <= 0 ? exports.empty : RNEA.makeBy(n, f)); };\nexports.makeBy = makeBy;\n/**\n * Create a `ReadonlyArray` containing a range of integers, including both endpoints.\n *\n * @example\n * import { range } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(range(1, 5), [1, 2, 3, 4, 5])\n *\n * @category constructors\n * @since 2.5.0\n */\nvar range = function (start, end) {\n    return start <= end ? exports.makeBy(end - start + 1, function (i) { return start + i; }) : [start];\n};\nexports.range = range;\n/**\n * Create a `ReadonlyArray` containing a value repeated the specified number of times.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { replicate } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(replicate(3, 'a'), ['a', 'a', 'a'])\n *\n * @category constructors\n * @since 2.5.0\n */\nvar replicate = function (n, a) { return exports.makeBy(n, function () { return a; }); };\nexports.replicate = replicate;\n// -------------------------------------------------------------------------------------\n// destructors\n// -------------------------------------------------------------------------------------\n/**\n * Break an array into its first element and remaining elements.\n *\n * @example\n * import { matchLeft } from 'fp-ts/ReadonlyArray'\n *\n * const len: <A>(as: ReadonlyArray<A>) => number = matchLeft(() => 0, (_, tail) => 1 + len(tail))\n * assert.strictEqual(len([1, 2, 3]), 3)\n *\n * @category destructors\n * @since 2.10.0\n */\nvar matchLeft = function (onEmpty, onNonEmpty) { return function (as) { return (exports.isNonEmpty(as) ? onNonEmpty(RNEA.head(as), RNEA.tail(as)) : onEmpty()); }; };\nexports.matchLeft = matchLeft;\n/**\n * Alias of [`matchLeft`](#matchleft).\n *\n * @category destructors\n * @since 2.5.0\n */\nexports.foldLeft = exports.matchLeft;\n/**\n * Break an array into its initial elements and the last element.\n *\n * @category destructors\n * @since 2.10.0\n */\nvar matchRight = function (onEmpty, onNonEmpty) { return function (as) { return (exports.isNonEmpty(as) ? onNonEmpty(RNEA.init(as), RNEA.last(as)) : onEmpty()); }; };\nexports.matchRight = matchRight;\n/**\n * Alias of [`matchRight`](#matchright).\n *\n * @category destructors\n * @since 2.5.0\n */\nexports.foldRight = exports.matchRight;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * @category combinators\n * @since 2.7.0\n */\nvar chainWithIndex = function (f) { return function (as) {\n    if (exports.isEmpty(as)) {\n        return exports.empty;\n    }\n    var out = [];\n    for (var i = 0; i < as.length; i++) {\n        out.push.apply(out, f(i, as[i]));\n    }\n    return out;\n}; };\nexports.chainWithIndex = chainWithIndex;\n/**\n * Same as `reduce` but it carries over the intermediate steps.\n *\n * @example\n * import { scanLeft } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(scanLeft(10, (b, a: number) => b - a)([1, 2, 3]), [10, 9, 7, 4])\n *\n * @category combinators\n * @since 2.5.0\n */\nvar scanLeft = function (b, f) { return function (as) {\n    var len = as.length;\n    var out = new Array(len + 1);\n    out[0] = b;\n    for (var i = 0; i < len; i++) {\n        out[i + 1] = f(out[i], as[i]);\n    }\n    return out;\n}; };\nexports.scanLeft = scanLeft;\n/**\n * Fold an array from the right, keeping all intermediate results instead of only the final result\n *\n * @example\n * import { scanRight } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(scanRight(10, (a: number, b) => b - a)([1, 2, 3]), [4, 5, 7, 10])\n *\n * @category combinators\n * @since 2.5.0\n */\nvar scanRight = function (b, f) { return function (as) {\n    var len = as.length;\n    var out = new Array(len + 1);\n    out[len] = b;\n    for (var i = len - 1; i >= 0; i--) {\n        out[i] = f(as[i], out[i + 1]);\n    }\n    return out;\n}; };\nexports.scanRight = scanRight;\n/**\n * Test whether a `ReadonlyArray` is empty.\n *\n * @example\n * import { isEmpty } from 'fp-ts/ReadonlyArray'\n *\n * assert.strictEqual(isEmpty([]), true)\n *\n * @since 2.5.0\n */\nvar isEmpty = function (as) { return as.length === 0; };\nexports.isEmpty = isEmpty;\n/**\n * Test whether a `ReadonlyArray` is non empty.\n *\n * @category guards\n * @since 2.5.0\n */\nexports.isNonEmpty = RNEA.isNonEmpty;\n/**\n * Calculate the number of elements in a `ReadonlyArray`.\n *\n * @since 2.10.0\n */\nvar size = function (as) { return as.length; };\nexports.size = size;\n/**\n * Test whether an array contains a particular index\n *\n * @since 2.5.0\n */\nexports.isOutOfBound = RNEA.isOutOfBound;\nfunction lookup(i, as) {\n    return as === undefined ? function (as) { return lookup(i, as); } : exports.isOutOfBound(i, as) ? O.none : O.some(as[i]);\n}\nexports.lookup = lookup;\n/**\n * Get the first element in an array, or `None` if the array is empty\n *\n * @example\n * import { head } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(head([1, 2, 3]), some(1))\n * assert.deepStrictEqual(head([]), none)\n *\n * @since 2.5.0\n */\nvar head = function (as) { return (exports.isNonEmpty(as) ? O.some(RNEA.head(as)) : O.none); };\nexports.head = head;\n/**\n * Get the last element in an array, or `None` if the array is empty\n *\n * @example\n * import { last } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(last([1, 2, 3]), some(3))\n * assert.deepStrictEqual(last([]), none)\n *\n * @since 2.5.0\n */\nvar last = function (as) { return (exports.isNonEmpty(as) ? O.some(RNEA.last(as)) : O.none); };\nexports.last = last;\n/**\n * Get all but the first element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { tail } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(tail([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(tail([]), none)\n *\n * @since 2.5.0\n */\nvar tail = function (as) {\n    return exports.isNonEmpty(as) ? O.some(RNEA.tail(as)) : O.none;\n};\nexports.tail = tail;\n/**\n * Get all but the last element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { init } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(init([1, 2, 3]), some([1, 2]))\n * assert.deepStrictEqual(init([]), none)\n *\n * @since 2.5.0\n */\nvar init = function (as) {\n    return exports.isNonEmpty(as) ? O.some(RNEA.init(as)) : O.none;\n};\nexports.init = init;\n/**\n * Keep only a max number of elements from the start of an `ReadonlyArray`, creating a new `ReadonlyArray`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const input: ReadonlyArray<number> = [1, 2, 3]\n * assert.deepStrictEqual(pipe(input, RA.takeLeft(2)), [1, 2])\n *\n * // out of bounds\n * assert.strictEqual(pipe(input, RA.takeLeft(4)), input)\n * assert.strictEqual(pipe(input, RA.takeLeft(-1)), input)\n *\n * @category combinators\n * @since 2.5.0\n */\nvar takeLeft = function (n) { return function (as) {\n    return exports.isOutOfBound(n, as) ? as : n === 0 ? exports.empty : as.slice(0, n);\n}; };\nexports.takeLeft = takeLeft;\n/**\n * Keep only a max number of elements from the end of an `ReadonlyArray`, creating a new `ReadonlyArray`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const input: ReadonlyArray<number> = [1, 2, 3]\n * assert.deepStrictEqual(pipe(input, RA.takeRight(2)), [2, 3])\n *\n * // out of bounds\n * assert.strictEqual(pipe(input, RA.takeRight(4)), input)\n * assert.strictEqual(pipe(input, RA.takeRight(-1)), input)\n *\n * @since 2.5.0\n */\nvar takeRight = function (n) { return function (as) {\n    return exports.isOutOfBound(n, as) ? as : n === 0 ? exports.empty : as.slice(-n);\n}; };\nexports.takeRight = takeRight;\nfunction takeLeftWhile(predicate) {\n    return function (as) {\n        var out = [];\n        for (var _i = 0, as_1 = as; _i < as_1.length; _i++) {\n            var a = as_1[_i];\n            if (!predicate(a)) {\n                break;\n            }\n            out.push(a);\n        }\n        var len = out.length;\n        return len === as.length ? as : len === 0 ? exports.empty : out;\n    };\n}\nexports.takeLeftWhile = takeLeftWhile;\nvar spanLeftIndex = function (as, predicate) {\n    var l = as.length;\n    var i = 0;\n    for (; i < l; i++) {\n        if (!predicate(as[i])) {\n            break;\n        }\n    }\n    return i;\n};\nfunction spanLeft(predicate) {\n    return function (as) {\n        var _a = exports.splitAt(spanLeftIndex(as, predicate))(as), init = _a[0], rest = _a[1];\n        return { init: init, rest: rest };\n    };\n}\nexports.spanLeft = spanLeft;\n/**\n * Drop a max number of elements from the start of an `ReadonlyArray`, creating a new `ReadonlyArray`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const input: ReadonlyArray<number> = [1, 2, 3]\n * assert.deepStrictEqual(pipe(input, RA.dropLeft(2)), [3])\n * assert.strictEqual(pipe(input, RA.dropLeft(0)), input)\n * assert.strictEqual(pipe(input, RA.dropLeft(-1)), input)\n *\n * @category combinators\n * @since 2.5.0\n */\nvar dropLeft = function (n) { return function (as) {\n    return n <= 0 || exports.isEmpty(as) ? as : n >= as.length ? exports.empty : as.slice(n, as.length);\n}; };\nexports.dropLeft = dropLeft;\n/**\n * Drop a max number of elements from the end of an `ReadonlyArray`, creating a new `ReadonlyArray`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const input: ReadonlyArray<number> = [1, 2, 3]\n * assert.deepStrictEqual(pipe(input, RA.dropRight(2)), [1])\n * assert.strictEqual(pipe(input, RA.dropRight(0)), input)\n * assert.strictEqual(pipe(input, RA.dropRight(-1)), input)\n *\n * @category combinators\n * @since 2.5.0\n */\nvar dropRight = function (n) { return function (as) {\n    return n <= 0 || exports.isEmpty(as) ? as : n >= as.length ? exports.empty : as.slice(0, as.length - n);\n}; };\nexports.dropRight = dropRight;\n/**\n * Remove the longest initial subarray for which all element satisfy the specified predicate, creating a new array\n *\n * @example\n * import { dropLeftWhile } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(dropLeftWhile((n: number) => n % 2 === 1)([1, 3, 2, 4, 5]), [2, 4, 5])\n *\n * @category combinators\n * @since 2.5.0\n */\nvar dropLeftWhile = function (predicate) { return function (as) {\n    var i = spanLeftIndex(as, predicate);\n    return i === 0 ? as : i === as.length ? exports.empty : as.slice(i);\n}; };\nexports.dropLeftWhile = dropLeftWhile;\n/**\n * Find the first index for which a predicate holds\n *\n * @example\n * import { findIndex } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([1, 2, 3]), some(1))\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([]), none)\n *\n * @since 2.5.0\n */\nvar findIndex = function (predicate) { return function (as) {\n    for (var i = 0; i < as.length; i++) {\n        if (predicate(as[i])) {\n            return O.some(i);\n        }\n    }\n    return O.none;\n}; };\nexports.findIndex = findIndex;\nfunction findFirst(predicate) {\n    return function (as) {\n        for (var i = 0; i < as.length; i++) {\n            if (predicate(as[i])) {\n                return O.some(as[i]);\n            }\n        }\n        return O.none;\n    };\n}\nexports.findFirst = findFirst;\n/**\n * Find the first element returned by an option based selector function\n *\n * @example\n * import { findFirstMap } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   readonly name: string\n *   readonly age?: number\n * }\n *\n * const persons: ReadonlyArray<Person> = [{ name: 'John' }, { name: 'Mary', age: 45 }, { name: 'Joey', age: 28 }]\n *\n * // returns the name of the first person that has an age\n * assert.deepStrictEqual(findFirstMap((p: Person) => (p.age === undefined ? none : some(p.name)))(persons), some('Mary'))\n *\n * @since 2.5.0\n */\nvar findFirstMap = function (f) { return function (as) {\n    for (var i = 0; i < as.length; i++) {\n        var out = f(as[i]);\n        if (O.isSome(out)) {\n            return out;\n        }\n    }\n    return O.none;\n}; };\nexports.findFirstMap = findFirstMap;\nfunction findLast(predicate) {\n    return function (as) {\n        for (var i = as.length - 1; i >= 0; i--) {\n            if (predicate(as[i])) {\n                return O.some(as[i]);\n            }\n        }\n        return O.none;\n    };\n}\nexports.findLast = findLast;\n/**\n * Find the last element returned by an option based selector function\n *\n * @example\n * import { findLastMap } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   readonly name: string\n *   readonly age?: number\n * }\n *\n * const persons: ReadonlyArray<Person> = [{ name: 'John' }, { name: 'Mary', age: 45 }, { name: 'Joey', age: 28 }]\n *\n * // returns the name of the last person that has an age\n * assert.deepStrictEqual(findLastMap((p: Person) => (p.age === undefined ? none : some(p.name)))(persons), some('Joey'))\n *\n * @since 2.5.0\n */\nvar findLastMap = function (f) { return function (as) {\n    for (var i = as.length - 1; i >= 0; i--) {\n        var out = f(as[i]);\n        if (O.isSome(out)) {\n            return out;\n        }\n    }\n    return O.none;\n}; };\nexports.findLastMap = findLastMap;\n/**\n * Returns the index of the last element of the list which matches the predicate\n *\n * @example\n * import { findLastIndex } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface X {\n *   readonly a: number\n *   readonly b: number\n * }\n * const xs: ReadonlyArray<X> = [{ a: 1, b: 0 }, { a: 1, b: 1 }]\n * assert.deepStrictEqual(findLastIndex((x: { readonly a: number }) => x.a === 1)(xs), some(1))\n * assert.deepStrictEqual(findLastIndex((x: { readonly a: number }) => x.a === 4)(xs), none)\n *\n *\n * @since 2.5.0\n */\nvar findLastIndex = function (predicate) { return function (as) {\n    for (var i = as.length - 1; i >= 0; i--) {\n        if (predicate(as[i])) {\n            return O.some(i);\n        }\n    }\n    return O.none;\n}; };\nexports.findLastIndex = findLastIndex;\n/**\n * Insert an element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { insertAt } from 'fp-ts/ReadonlyArray'\n * import { some } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(insertAt(2, 5)([1, 2, 3, 4]), some([1, 2, 5, 3, 4]))\n *\n * @since 2.5.0\n */\nexports.insertAt = \n// tslint:disable-next-line: deprecation\nRNEA.insertAt;\n/**\n * Change the element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { updateAt } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(updateAt(1, 1)([1, 2, 3]), some([1, 1, 3]))\n * assert.deepStrictEqual(updateAt(1, 1)([]), none)\n *\n * @since 2.5.0\n */\nvar updateAt = function (i, a) {\n    return exports.modifyAt(i, function () { return a; });\n};\nexports.updateAt = updateAt;\n/**\n * Delete the element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { deleteAt } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(deleteAt(0)([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(deleteAt(1)([]), none)\n *\n * @since 2.5.0\n */\nvar deleteAt = function (i) { return function (as) {\n    return exports.isOutOfBound(i, as) ? O.none : O.some(exports.unsafeDeleteAt(i, as));\n}; };\nexports.deleteAt = deleteAt;\n/**\n * Apply a function to the element at the specified index, creating a new array, or returning `None` if the index is out\n * of bounds\n *\n * @example\n * import { modifyAt } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * const double = (x: number): number => x * 2\n * assert.deepStrictEqual(modifyAt(1, double)([1, 2, 3]), some([1, 4, 3]))\n * assert.deepStrictEqual(modifyAt(1, double)([]), none)\n *\n * @since 2.5.0\n */\nvar modifyAt = function (i, f) { return function (as) {\n    return exports.isOutOfBound(i, as) ? O.none : O.some(exports.unsafeUpdateAt(i, f(as[i]), as));\n}; };\nexports.modifyAt = modifyAt;\n/**\n * Reverse an array, creating a new array\n *\n * @example\n * import { reverse } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(reverse([1, 2, 3]), [3, 2, 1])\n *\n * @category combinators\n * @since 2.5.0\n */\nvar reverse = function (as) { return (as.length <= 1 ? as : as.slice().reverse()); };\nexports.reverse = reverse;\n/**\n * Extracts from an array of `Either` all the `Right` elements. All the `Right` elements are extracted in order\n *\n * @example\n * import { rights } from 'fp-ts/ReadonlyArray'\n * import { right, left } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(rights([right(1), left('foo'), right(2)]), [1, 2])\n *\n * @category combinators\n * @since 2.5.0\n */\nvar rights = function (as) {\n    var r = [];\n    for (var i = 0; i < as.length; i++) {\n        var a = as[i];\n        if (a._tag === 'Right') {\n            r.push(a.right);\n        }\n    }\n    return r;\n};\nexports.rights = rights;\n/**\n * Extracts from an array of `Either` all the `Left` elements. All the `Left` elements are extracted in order\n *\n * @example\n * import { lefts } from 'fp-ts/ReadonlyArray'\n * import { left, right } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(lefts([right(1), left('foo'), right(2)]), ['foo'])\n *\n * @category combinators\n * @since 2.5.0\n */\nvar lefts = function (as) {\n    var r = [];\n    for (var i = 0; i < as.length; i++) {\n        var a = as[i];\n        if (a._tag === 'Left') {\n            r.push(a.left);\n        }\n    }\n    return r;\n};\nexports.lefts = lefts;\n/**\n * Sort the elements of an array in increasing order, creating a new array\n *\n * @example\n * import { sort } from 'fp-ts/ReadonlyArray'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(sort(N.Ord)([3, 2, 1]), [1, 2, 3])\n *\n * @category combinators\n * @since 2.5.0\n */\nvar sort = function (O) { return function (as) {\n    return as.length <= 1 ? as : as.slice().sort(O.compare);\n}; };\nexports.sort = sort;\n// TODO: curry and make data-last in v3\n/**\n * Apply a function to pairs of elements at the same index in two arrays, collecting the results in a new array. If one\n * input array is short, excess elements of the longer array are discarded.\n *\n * @example\n * import { zipWith } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(zipWith([1, 2, 3], ['a', 'b', 'c', 'd'], (n, s) => s + n), ['a1', 'b2', 'c3'])\n *\n * @category combinators\n * @since 2.5.0\n */\nvar zipWith = function (fa, fb, f) {\n    var fc = [];\n    var len = Math.min(fa.length, fb.length);\n    for (var i = 0; i < len; i++) {\n        fc[i] = f(fa[i], fb[i]);\n    }\n    return fc;\n};\nexports.zipWith = zipWith;\nfunction zip(as, bs) {\n    if (bs === undefined) {\n        return function (bs) { return zip(bs, as); };\n    }\n    return exports.zipWith(as, bs, function (a, b) { return [a, b]; });\n}\nexports.zip = zip;\n/**\n * The function is reverse of `zip`. Takes an array of pairs and return two corresponding arrays\n *\n * @example\n * import { unzip } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(unzip([[1, 'a'], [2, 'b'], [3, 'c']]), [[1, 2, 3], ['a', 'b', 'c']])\n *\n * @category combinators\n * @since 2.5.0\n */\nvar unzip = function (as) {\n    var fa = [];\n    var fb = [];\n    for (var i = 0; i < as.length; i++) {\n        fa[i] = as[i][0];\n        fb[i] = as[i][1];\n    }\n    return [fa, fb];\n};\nexports.unzip = unzip;\n/**\n * Prepend an element to every member of an array\n *\n * @example\n * import { prependAll } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(prependAll(9)([1, 2, 3, 4]), [9, 1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.10.0\n */\nvar prependAll = function (middle) {\n    var f = RNEA.prependAll(middle);\n    return function (as) { return (exports.isNonEmpty(as) ? f(as) : as); };\n};\nexports.prependAll = prependAll;\n/**\n * Places an element in between members of an array\n *\n * @example\n * import { intersperse } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(intersperse(9)([1, 2, 3, 4]), [1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.9.0\n */\nvar intersperse = function (middle) {\n    var f = RNEA.intersperse(middle);\n    return function (as) { return (exports.isNonEmpty(as) ? f(as) : as); };\n};\nexports.intersperse = intersperse;\n/**\n * Rotate a `ReadonlyArray` by `n` steps.\n *\n * @example\n * import { rotate } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(rotate(2)([1, 2, 3, 4, 5]), [4, 5, 1, 2, 3])\n *\n * @category combinators\n * @since 2.5.0\n */\nvar rotate = function (n) {\n    var f = RNEA.rotate(n);\n    return function (as) { return (exports.isNonEmpty(as) ? f(as) : as); };\n};\nexports.rotate = rotate;\nfunction elem(E) {\n    return function (a, as) {\n        if (as === undefined) {\n            var elemE_1 = elem(E);\n            return function (as) { return elemE_1(a, as); };\n        }\n        var predicate = function (element) { return E.equals(element, a); };\n        var i = 0;\n        for (; i < as.length; i++) {\n            if (predicate(as[i])) {\n                return true;\n            }\n        }\n        return false;\n    };\n}\nexports.elem = elem;\n/**\n * Remove duplicates from an array, keeping the first occurrence of an element.\n *\n * @example\n * import { uniq } from 'fp-ts/ReadonlyArray'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(uniq(N.Eq)([1, 2, 1]), [1, 2])\n *\n * @category combinators\n * @since 2.5.0\n */\nvar uniq = function (E) {\n    var f = RNEA.uniq(E);\n    return function (as) { return (exports.isNonEmpty(as) ? f(as) : as); };\n};\nexports.uniq = uniq;\n/**\n * Sort the elements of an array in increasing order, where elements are compared using first `ords[0]`, then `ords[1]`,\n * etc...\n *\n * @example\n * import { sortBy } from 'fp-ts/ReadonlyArray'\n * import { contramap } from 'fp-ts/Ord'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * interface Person {\n *   readonly name: string\n *   readonly age: number\n * }\n * const byName = pipe(S.Ord, contramap((p: Person) => p.name))\n * const byAge = pipe(N.Ord, contramap((p: Person) => p.age))\n *\n * const sortByNameByAge = sortBy([byName, byAge])\n *\n * const persons = [{ name: 'a', age: 1 }, { name: 'b', age: 3 }, { name: 'c', age: 2 }, { name: 'b', age: 2 }]\n * assert.deepStrictEqual(sortByNameByAge(persons), [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 2 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 }\n * ])\n *\n * @category combinators\n * @since 2.5.0\n */\nvar sortBy = function (ords) {\n    var f = RNEA.sortBy(ords);\n    return function (as) { return (exports.isNonEmpty(as) ? f(as) : as); };\n};\nexports.sortBy = sortBy;\n/**\n * A useful recursion pattern for processing a `ReadonlyArray` to produce a new `ReadonlyArray`, often used for \"chopping\" up the input\n * `ReadonlyArray`. Typically `chop` is called with some function that will consume an initial prefix of the `ReadonlyArray` and produce a\n * value and the tail of the `ReadonlyArray`.\n *\n * @example\n * import { Eq } from 'fp-ts/Eq'\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * const group = <A>(S: Eq<A>): ((as: ReadonlyArray<A>) => ReadonlyArray<ReadonlyArray<A>>) => {\n *   return RA.chop(as => {\n *     const { init, rest } = pipe(as, RA.spanLeft((a: A) => S.equals(a, as[0])))\n *     return [init, rest]\n *   })\n * }\n * assert.deepStrictEqual(group(N.Eq)([1, 1, 2, 3, 3, 4]), [[1, 1], [2], [3, 3], [4]])\n *\n * @category combinators\n * @since 2.5.0\n */\nvar chop = function (f) {\n    var g = RNEA.chop(f);\n    return function (as) { return (exports.isNonEmpty(as) ? g(as) : exports.empty); };\n};\nexports.chop = chop;\n/**\n * Splits a `ReadonlyArray` into two pieces, the first piece has max `n` elements.\n *\n * @example\n * import { splitAt } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(splitAt(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4, 5]])\n *\n * @category combinators\n * @since 2.5.0\n */\nvar splitAt = function (n) { return function (as) {\n    return n >= 1 && exports.isNonEmpty(as) ? RNEA.splitAt(n)(as) : exports.isEmpty(as) ? [as, exports.empty] : [exports.empty, as];\n}; };\nexports.splitAt = splitAt;\n/**\n * Splits a `ReadonlyArray` into length-`n` pieces. The last piece will be shorter if `n` does not evenly divide the length of\n * the `ReadonlyArray`. Note that `chunksOf(n)([])` is `[]`, not `[[]]`. This is intentional, and is consistent with a recursive\n * definition of `chunksOf`; it satisfies the property that:\n *\n * ```ts\n * chunksOf(n)(xs).concat(chunksOf(n)(ys)) == chunksOf(n)(xs.concat(ys)))\n * ```\n *\n * whenever `n` evenly divides the length of `as`.\n *\n * @example\n * import { chunksOf } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(chunksOf(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4], [5]])\n *\n * @category combinators\n * @since 2.5.0\n */\nvar chunksOf = function (n) {\n    var f = RNEA.chunksOf(n);\n    return function (as) { return (exports.isNonEmpty(as) ? f(as) : exports.empty); };\n};\nexports.chunksOf = chunksOf;\nfunction comprehension(input, f, g) {\n    if (g === void 0) { g = function () { return true; }; }\n    var go = function (scope, input) {\n        return exports.isNonEmpty(input)\n            ? function_1.pipe(RNEA.head(input), exports.chain(function (x) { return go(function_1.pipe(scope, exports.append(x)), RNEA.tail(input)); }))\n            : g.apply(void 0, scope) ? [f.apply(void 0, scope)]\n                : exports.empty;\n    };\n    return go(exports.empty, input);\n}\nexports.comprehension = comprehension;\nfunction union(E) {\n    var unionE = RNEA.union(E);\n    return function (first, second) {\n        if (second === undefined) {\n            var unionE_1 = union(E);\n            return function (ys) { return unionE_1(ys, first); };\n        }\n        return exports.isNonEmpty(first) && exports.isNonEmpty(second) ? unionE(first, second) : exports.isNonEmpty(first) ? first : second;\n    };\n}\nexports.union = union;\nfunction intersection(E) {\n    var elemE = elem(E);\n    return function (xs, ys) {\n        if (ys === undefined) {\n            var intersectionE_1 = intersection(E);\n            return function (ys) { return intersectionE_1(ys, xs); };\n        }\n        return xs.filter(function (a) { return elemE(a, ys); });\n    };\n}\nexports.intersection = intersection;\nfunction difference(E) {\n    var elemE = elem(E);\n    return function (xs, ys) {\n        if (ys === undefined) {\n            var differenceE_1 = difference(E);\n            return function (ys) { return differenceE_1(ys, xs); };\n        }\n        return xs.filter(function (a) { return !elemE(a, ys); });\n    };\n}\nexports.difference = difference;\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\nvar _map = function (fa, f) { return function_1.pipe(fa, exports.map(f)); };\nvar _mapWithIndex = function (fa, f) { return function_1.pipe(fa, exports.mapWithIndex(f)); };\nvar _ap = function (fab, fa) { return function_1.pipe(fab, exports.ap(fa)); };\nvar _chain = function (ma, f) { return function_1.pipe(ma, exports.chain(f)); };\nvar _filter = function (fa, predicate) {\n    return function_1.pipe(fa, exports.filter(predicate));\n};\nvar _filterMap = function (fa, f) { return function_1.pipe(fa, exports.filterMap(f)); };\nvar _partition = function (fa, predicate) {\n    return function_1.pipe(fa, exports.partition(predicate));\n};\nvar _partitionMap = function (fa, f) { return function_1.pipe(fa, exports.partitionMap(f)); };\nvar _partitionWithIndex = function (fa, predicateWithIndex) { return function_1.pipe(fa, exports.partitionWithIndex(predicateWithIndex)); };\nvar _partitionMapWithIndex = function (fa, f) { return function_1.pipe(fa, exports.partitionMapWithIndex(f)); };\nvar _alt = function (fa, that) { return function_1.pipe(fa, exports.alt(that)); };\nvar _reduce = function (fa, b, f) { return function_1.pipe(fa, exports.reduce(b, f)); };\nvar _foldMap = function (M) {\n    var foldMapM = exports.foldMap(M);\n    return function (fa, f) { return function_1.pipe(fa, foldMapM(f)); };\n};\nvar _reduceRight = function (fa, b, f) { return function_1.pipe(fa, exports.reduceRight(b, f)); };\nvar _reduceWithIndex = function (fa, b, f) {\n    return function_1.pipe(fa, exports.reduceWithIndex(b, f));\n};\nvar _foldMapWithIndex = function (M) {\n    var foldMapWithIndexM = exports.foldMapWithIndex(M);\n    return function (fa, f) { return function_1.pipe(fa, foldMapWithIndexM(f)); };\n};\nvar _reduceRightWithIndex = function (fa, b, f) {\n    return function_1.pipe(fa, exports.reduceRightWithIndex(b, f));\n};\nvar _filterMapWithIndex = function (fa, f) { return function_1.pipe(fa, exports.filterMapWithIndex(f)); };\nvar _filterWithIndex = function (fa, predicateWithIndex) { return function_1.pipe(fa, exports.filterWithIndex(predicateWithIndex)); };\nvar _extend = function (fa, f) { return function_1.pipe(fa, exports.extend(f)); };\nvar _traverse = function (F) {\n    var traverseF = exports.traverse(F);\n    return function (ta, f) { return function_1.pipe(ta, traverseF(f)); };\n};\n/* istanbul ignore next */\nvar _traverseWithIndex = function (F) {\n    var traverseWithIndexF = exports.traverseWithIndex(F);\n    return function (ta, f) { return function_1.pipe(ta, traverseWithIndexF(f)); };\n};\n/* istanbul ignore next */\nvar _wither = function (F) {\n    var witherF = exports.wither(F);\n    return function (fa, f) { return function_1.pipe(fa, witherF(f)); };\n};\n/* istanbul ignore next */\nvar _wilt = function (F) {\n    var wiltF = exports.wilt(F);\n    return function (fa, f) { return function_1.pipe(fa, wiltF(f)); };\n};\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n/**\n * @category Pointed\n * @since 2.5.0\n */\nexports.of = RNEA.of;\n/**\n * @category Alternative\n * @since 2.7.0\n */\nvar zero = function () { return exports.empty; };\nexports.zero = zero;\n/**\n * Less strict version of [`alt`](#alt).\n *\n * @category Alt\n * @since 2.9.0\n */\nvar altW = function (that) { return function (fa) {\n    return fa.concat(that());\n}; };\nexports.altW = altW;\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * @category Alt\n * @since 2.5.0\n */\nexports.alt = exports.altW;\n/**\n * Apply a function to an argument under a type constructor.\n *\n * @category Apply\n * @since 2.5.0\n */\nvar ap = function (fa) {\n    return exports.chain(function (f) { return function_1.pipe(fa, exports.map(f)); });\n};\nexports.ap = ap;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category Monad\n * @since 2.5.0\n */\nvar chain = function (f) { return function (ma) {\n    return function_1.pipe(ma, exports.chainWithIndex(function (_, a) { return f(a); }));\n}; };\nexports.chain = chain;\n/**\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.flatten = \n/*#__PURE__*/\nexports.chain(function_1.identity);\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.5.0\n */\nvar map = function (f) { return function (fa) {\n    return fa.map(function (a) { return f(a); });\n}; };\nexports.map = map;\n/**\n * @category FunctorWithIndex\n * @since 2.5.0\n */\nvar mapWithIndex = function (f) { return function (fa) { return fa.map(function (a, i) { return f(i, a); }); }; };\nexports.mapWithIndex = mapWithIndex;\n/**\n * @category Compactable\n * @since 2.5.0\n */\nvar separate = function (fa) {\n    var left = [];\n    var right = [];\n    for (var _i = 0, fa_1 = fa; _i < fa_1.length; _i++) {\n        var e = fa_1[_i];\n        if (e._tag === 'Left') {\n            left.push(e.left);\n        }\n        else {\n            right.push(e.right);\n        }\n    }\n    return Separated_1.separated(left, right);\n};\nexports.separate = separate;\n/**\n * @category Filterable\n * @since 2.5.0\n */\nvar filter = function (predicate) { return function (fa) { return fa.filter(predicate); }; };\nexports.filter = filter;\n/**\n * @category FilterableWithIndex\n * @since 2.5.0\n */\nvar filterMapWithIndex = function (f) { return function (fa) {\n    var out = [];\n    for (var i = 0; i < fa.length; i++) {\n        var optionB = f(i, fa[i]);\n        if (O.isSome(optionB)) {\n            out.push(optionB.value);\n        }\n    }\n    return out;\n}; };\nexports.filterMapWithIndex = filterMapWithIndex;\n/**\n * @category Filterable\n * @since 2.5.0\n */\nvar filterMap = function (f) {\n    return exports.filterMapWithIndex(function (_, a) { return f(a); });\n};\nexports.filterMap = filterMap;\n/**\n * @category Compactable\n * @since 2.5.0\n */\nexports.compact = \n/*#__PURE__*/\nexports.filterMap(function_1.identity);\n/**\n * @category Filterable\n * @since 2.5.0\n */\nvar partition = function (predicate) {\n    return exports.partitionWithIndex(function (_, a) { return predicate(a); });\n};\nexports.partition = partition;\n/**\n * @category FilterableWithIndex\n * @since 2.5.0\n */\nvar partitionWithIndex = function (predicateWithIndex) { return function (fa) {\n    var left = [];\n    var right = [];\n    for (var i = 0; i < fa.length; i++) {\n        var a = fa[i];\n        if (predicateWithIndex(i, a)) {\n            right.push(a);\n        }\n        else {\n            left.push(a);\n        }\n    }\n    return Separated_1.separated(left, right);\n}; };\nexports.partitionWithIndex = partitionWithIndex;\n/**\n * @category Filterable\n * @since 2.5.0\n */\nvar partitionMap = function (f) {\n    return exports.partitionMapWithIndex(function (_, a) { return f(a); });\n};\nexports.partitionMap = partitionMap;\n/**\n * @category FilterableWithIndex\n * @since 2.5.0\n */\nvar partitionMapWithIndex = function (f) { return function (fa) {\n    var left = [];\n    var right = [];\n    for (var i = 0; i < fa.length; i++) {\n        var e = f(i, fa[i]);\n        if (e._tag === 'Left') {\n            left.push(e.left);\n        }\n        else {\n            right.push(e.right);\n        }\n    }\n    return Separated_1.separated(left, right);\n}; };\nexports.partitionMapWithIndex = partitionMapWithIndex;\n/**\n * @category FilterableWithIndex\n * @since 2.5.0\n */\nvar filterWithIndex = function (predicateWithIndex) { return function (fa) {\n    return fa.filter(function (a, i) { return predicateWithIndex(i, a); });\n}; };\nexports.filterWithIndex = filterWithIndex;\n/**\n * @category Extend\n * @since 2.5.0\n */\nvar extend = function (f) { return function (wa) { return wa.map(function (_, i) { return f(wa.slice(i)); }); }; };\nexports.extend = extend;\n/**\n * Derivable from `Extend`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.duplicate = \n/*#__PURE__*/\nexports.extend(function_1.identity);\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\nvar foldMapWithIndex = function (M) { return function (f) { return function (fa) {\n    return fa.reduce(function (b, a, i) { return M.concat(b, f(i, a)); }, M.empty);\n}; }; };\nexports.foldMapWithIndex = foldMapWithIndex;\n/**\n * @category Foldable\n * @since 2.5.0\n */\nvar reduce = function (b, f) {\n    return exports.reduceWithIndex(b, function (_, b, a) { return f(b, a); });\n};\nexports.reduce = reduce;\n/**\n * @category Foldable\n * @since 2.5.0\n */\nvar foldMap = function (M) {\n    var foldMapWithIndexM = exports.foldMapWithIndex(M);\n    return function (f) { return foldMapWithIndexM(function (_, a) { return f(a); }); };\n};\nexports.foldMap = foldMap;\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\nvar reduceWithIndex = function (b, f) { return function (fa) {\n    var len = fa.length;\n    var out = b;\n    for (var i = 0; i < len; i++) {\n        out = f(i, out, fa[i]);\n    }\n    return out;\n}; };\nexports.reduceWithIndex = reduceWithIndex;\n/**\n * @category Foldable\n * @since 2.5.0\n */\nvar reduceRight = function (b, f) {\n    return exports.reduceRightWithIndex(b, function (_, a, b) { return f(a, b); });\n};\nexports.reduceRight = reduceRight;\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\nvar reduceRightWithIndex = function (b, f) { return function (fa) { return fa.reduceRight(function (b, a, i) { return f(i, a, b); }, b); }; };\nexports.reduceRightWithIndex = reduceRightWithIndex;\n/**\n * @category Traversable\n * @since 2.6.3\n */\nvar traverse = function (F) {\n    var traverseWithIndexF = exports.traverseWithIndex(F);\n    return function (f) { return traverseWithIndexF(function (_, a) { return f(a); }); };\n};\nexports.traverse = traverse;\n/**\n * @category Traversable\n * @since 2.6.3\n */\nvar sequence = function (F) { return function (ta) {\n    return _reduce(ta, F.of(exports.zero()), function (fas, fa) {\n        return F.ap(F.map(fas, function (as) { return function (a) { return function_1.pipe(as, exports.append(a)); }; }), fa);\n    });\n}; };\nexports.sequence = sequence;\n/**\n * @category TraversableWithIndex\n * @since 2.6.3\n */\nvar traverseWithIndex = function (F) { return function (f) {\n    return exports.reduceWithIndex(F.of(exports.zero()), function (i, fbs, a) {\n        return F.ap(F.map(fbs, function (bs) { return function (b) { return function_1.pipe(bs, exports.append(b)); }; }), f(i, a));\n    });\n}; };\nexports.traverseWithIndex = traverseWithIndex;\n/**\n * @category Witherable\n * @since 2.6.5\n */\nvar wither = function (F) {\n    var traverseF = exports.traverse(F);\n    return function (f) { return function (fa) { return F.map(function_1.pipe(fa, traverseF(f)), exports.compact); }; };\n};\nexports.wither = wither;\n/**\n * @category Witherable\n * @since 2.6.5\n */\nvar wilt = function (F) {\n    var traverseF = exports.traverse(F);\n    return function (f) { return function (fa) { return F.map(function_1.pipe(fa, traverseF(f)), exports.separate); }; };\n};\nexports.wilt = wilt;\n/**\n * @category Unfoldable\n * @since 2.6.6\n */\nvar unfold = function (b, f) {\n    var out = [];\n    var bb = b;\n    while (true) {\n        var mt = f(bb);\n        if (O.isSome(mt)) {\n            var _a = mt.value, a = _a[0], b_1 = _a[1];\n            out.push(a);\n            bb = b_1;\n        }\n        else {\n            break;\n        }\n    }\n    return out;\n};\nexports.unfold = unfold;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.5.0\n */\nexports.URI = 'ReadonlyArray';\n/**\n * @category instances\n * @since 2.5.0\n */\nvar getShow = function (S) { return ({\n    show: function (as) { return \"[\" + as.map(S.show).join(', ') + \"]\"; }\n}); };\nexports.getShow = getShow;\n/**\n * @category instances\n * @since 2.5.0\n */\nvar getSemigroup = function () { return ({\n    concat: function (first, second) { return (exports.isEmpty(first) ? second : exports.isEmpty(second) ? first : first.concat(second)); }\n}); };\nexports.getSemigroup = getSemigroup;\n/**\n * Returns a `Monoid` for `ReadonlyArray<A>`.\n *\n * @example\n * import { getMonoid } from 'fp-ts/ReadonlyArray'\n *\n * const M = getMonoid<number>()\n * assert.deepStrictEqual(M.concat([1, 2], [3, 4]), [1, 2, 3, 4])\n *\n * @category instances\n * @since 2.5.0\n */\nvar getMonoid = function () { return ({\n    concat: exports.getSemigroup().concat,\n    empty: exports.empty\n}); };\nexports.getMonoid = getMonoid;\n/**\n * Derives an `Eq` over the `ReadonlyArray` of a given element type from the `Eq` of that type. The derived `Eq` defines two\n * arrays as equal if all elements of both arrays are compared equal pairwise with the given `E`. In case of arrays of\n * different lengths, the result is non equality.\n *\n * @example\n * import * as S from 'fp-ts/string'\n * import { getEq } from 'fp-ts/ReadonlyArray'\n *\n * const E = getEq(S.Eq)\n * assert.strictEqual(E.equals(['a', 'b'], ['a', 'b']), true)\n * assert.strictEqual(E.equals(['a'], []), false)\n *\n * @category instances\n * @since 2.5.0\n */\nvar getEq = function (E) {\n    return Eq_1.fromEquals(function (xs, ys) { return xs.length === ys.length && xs.every(function (x, i) { return E.equals(x, ys[i]); }); });\n};\nexports.getEq = getEq;\n/**\n * Derives an `Ord` over the `ReadonlyArray` of a given element type from the `Ord` of that type. The ordering between two such\n * arrays is equal to: the first non equal comparison of each arrays elements taken pairwise in increasing order, in\n * case of equality over all the pairwise elements; the longest array is considered the greatest, if both arrays have\n * the same length, the result is equality.\n *\n * @example\n * import { getOrd } from 'fp-ts/ReadonlyArray'\n * import * as S from 'fp-ts/string'\n *\n * const O = getOrd(S.Ord)\n * assert.strictEqual(O.compare(['b'], ['a']), 1)\n * assert.strictEqual(O.compare(['a'], ['a']), 0)\n * assert.strictEqual(O.compare(['a'], ['b']), -1)\n *\n *\n * @category instances\n * @since 2.5.0\n */\nvar getOrd = function (O) {\n    return Ord_1.fromCompare(function (a, b) {\n        var aLen = a.length;\n        var bLen = b.length;\n        var len = Math.min(aLen, bLen);\n        for (var i = 0; i < len; i++) {\n            var ordering = O.compare(a[i], b[i]);\n            if (ordering !== 0) {\n                return ordering;\n            }\n        }\n        return N.Ord.compare(aLen, bLen);\n    });\n};\nexports.getOrd = getOrd;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: _map\n};\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\nexports.flap = \n/*#_PURE_*/\nFunctor_1.flap(exports.Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Pointed = {\n    URI: exports.URI,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FunctorWithIndex = {\n    URI: exports.URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Apply = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.apFirst = \n/*#__PURE__*/\nApply_1.apFirst(exports.Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.apSecond = \n/*#__PURE__*/\nApply_1.apSecond(exports.Apply);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Applicative = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Chain = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Monad = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: _chain\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.chainFirst = \n/*#__PURE__*/\nChain_1.chainFirst(exports.Chain);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Unfoldable = {\n    URI: exports.URI,\n    unfold: exports.unfold\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Alt = {\n    URI: exports.URI,\n    map: _map,\n    alt: _alt\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Alternative = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    alt: _alt,\n    zero: exports.zero\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Extend = {\n    URI: exports.URI,\n    map: _map,\n    extend: _extend\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Compactable = {\n    URI: exports.URI,\n    compact: exports.compact,\n    separate: exports.separate\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Filterable = {\n    URI: exports.URI,\n    map: _map,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FilterableWithIndex = {\n    URI: exports.URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    partitionMapWithIndex: _partitionMapWithIndex,\n    partitionWithIndex: _partitionWithIndex,\n    filterMapWithIndex: _filterMapWithIndex,\n    filterWithIndex: _filterWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Foldable = {\n    URI: exports.URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FoldableWithIndex = {\n    URI: exports.URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Traversable = {\n    URI: exports.URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.TraversableWithIndex = {\n    URI: exports.URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    traverseWithIndex: _traverseWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Witherable = {\n    URI: exports.URI,\n    map: _map,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    wither: _wither,\n    wilt: _wilt\n};\n// -------------------------------------------------------------------------------------\n// unsafe\n// -------------------------------------------------------------------------------------\n/**\n * @category unsafe\n * @since 2.5.0\n */\nexports.unsafeInsertAt = RNEA.unsafeInsertAt;\n/**\n * @category unsafe\n * @since 2.5.0\n */\nvar unsafeUpdateAt = function (i, a, as) {\n    return exports.isNonEmpty(as) ? RNEA.unsafeUpdateAt(i, a, as) : as;\n};\nexports.unsafeUpdateAt = unsafeUpdateAt;\n/**\n * @category unsafe\n * @since 2.5.0\n */\nvar unsafeDeleteAt = function (i, as) {\n    var xs = as.slice();\n    xs.splice(i, 1);\n    return xs;\n};\nexports.unsafeDeleteAt = unsafeDeleteAt;\n// -------------------------------------------------------------------------------------\n// interop\n// -------------------------------------------------------------------------------------\n/**\n * @category interop\n * @since 2.5.0\n */\nvar toArray = function (as) { return as.slice(); };\nexports.toArray = toArray;\n/**\n * @category interop\n * @since 2.5.0\n */\nvar fromArray = function (as) { return (exports.isEmpty(as) ? exports.empty : as.slice()); };\nexports.fromArray = fromArray;\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * An empty array\n *\n * @since 2.5.0\n */\nexports.empty = RNEA.empty;\n/**\n * Check if a predicate holds true for every array member.\n *\n * @example\n * import { every } from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const isPositive = (n: number): boolean => n > 0\n *\n * assert.deepStrictEqual(pipe([1, 2, 3], every(isPositive)), true)\n * assert.deepStrictEqual(pipe([1, 2, -3], every(isPositive)), false)\n *\n * @since 2.9.0\n */\nvar every = function (predicate) { return function (as) { return as.every(predicate); }; };\nexports.every = every;\n/**\n * Check if a predicate holds true for any array member.\n *\n * @example\n * import { some } from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const isPositive = (n: number): boolean => n > 0\n *\n * assert.deepStrictEqual(pipe([-1, -2, 3], some(isPositive)), true)\n * assert.deepStrictEqual(pipe([-1, -2, -3], some(isPositive)), false)\n *\n * @since 2.9.0\n */\nvar some = function (predicate) { return function (as) {\n    return as.some(predicate);\n}; };\nexports.some = some;\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.9.0\n */\nexports.Do = \n/*#__PURE__*/\nexports.of({});\n/**\n * @since 2.8.0\n */\nexports.bindTo = \n/*#__PURE__*/\nFunctor_1.bindTo(exports.Functor);\n/**\n * @since 2.8.0\n */\nexports.bind = \n/*#__PURE__*/\nChain_1.bind(exports.Chain);\n// -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.8.0\n */\nexports.apS = \n/*#__PURE__*/\nApply_1.apS(exports.Apply);\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use [`prepend`](#prepend) instead.\n *\n * @category constructors\n * @since 2.5.0\n * @deprecated\n */\n// tslint:disable-next-line: deprecation\nexports.cons = RNEA.cons;\n/**\n * Use [`append`](#append) instead.\n *\n * @category constructors\n * @since 2.5.0\n * @deprecated\n */\n// tslint:disable-next-line: deprecation\nexports.snoc = RNEA.snoc;\n/**\n * Use [`prependAll`](#prependall) instead.\n *\n * @category combinators\n * @since 2.9.0\n * @deprecated\n */\nexports.prependToAll = exports.prependAll;\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.5.0\n * @deprecated\n */\nexports.readonlyArray = {\n    URI: exports.URI,\n    compact: exports.compact,\n    separate: exports.separate,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: _chain,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    mapWithIndex: _mapWithIndex,\n    partitionMapWithIndex: _partitionMapWithIndex,\n    partitionWithIndex: _partitionWithIndex,\n    filterMapWithIndex: _filterMapWithIndex,\n    filterWithIndex: _filterWithIndex,\n    alt: _alt,\n    zero: exports.zero,\n    unfold: exports.unfold,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverseWithIndex: _traverseWithIndex,\n    extend: _extend,\n    wither: _wither,\n    wilt: _wilt\n};\n"]},"metadata":{},"sourceType":"script"}