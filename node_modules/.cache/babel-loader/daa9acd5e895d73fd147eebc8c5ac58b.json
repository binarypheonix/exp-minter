{"ast":null,"code":"var _jsxFileName = \"/Users/frankenstein/projects/minter/src/components/CreateNonFungiblePage/Form.tsx\";\nimport React from 'react';\nimport { Box, Divider, Flex, FormControl, FormLabel, Heading, Input, Text, Textarea } from '@chakra-ui/react';\nimport { Plus, X } from 'react-feather';\nimport { MinterButton } from '../common';\nimport { useSelector, useDispatch } from '../../reducer';\nimport { addMetadataRow, deleteMetadataRow, updateField, updateMetadataRowName, updateMetadataRowValue } from '../../reducer/slices/createNft';\nimport CollectionSelect from './CollectionSelect';\nconst DESCRIPTION_PLACEHOLDER = 'e.g. “This is an exclusive japanese comic illustration. Once you purchase it you will be able to get the t-shirt”';\nexport default function Form() {\n  const state = useSelector(s => s.createNft);\n  const dispatch = useDispatch();\n  const {\n    name,\n    description\n  } = state.fields;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CollectionSelect, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Heading, {\n    size: \"md\",\n    paddingBottom: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \"What properties would you like to give your asset?\"), /*#__PURE__*/React.createElement(FormControl, {\n    paddingBottom: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    fontFamily: \"mono\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \"Asset Name\"), /*#__PURE__*/React.createElement(Input, {\n    autoFocus: true,\n    placeholder: \"Input your asset name\",\n    value: name || '',\n    onChange: e => dispatch(updateField({\n      name: 'name',\n      value: e.target.value\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(FormControl, {\n    paddingBottom: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    fontFamily: \"mono\",\n    display: \"flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, \"Description\", /*#__PURE__*/React.createElement(Text, {\n    marginLeft: 2,\n    color: \"brand.lightGray\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, \"(Optional)\")), /*#__PURE__*/React.createElement(Textarea, {\n    minHeight: \"150px\",\n    fontFamily: \"mono\",\n    placeholder: DESCRIPTION_PLACEHOLDER,\n    value: description || '',\n    onChange: e => dispatch(updateField({\n      name: 'description',\n      value: e.target.value\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Divider, {\n    borderColor: \"brand.lightBlue\",\n    opacity: \"1\",\n    marginY: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Heading, {\n    size: \"md\",\n    paddingBottom: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, \"Add attributes to your asset\"), state.attributes.map(({\n    name,\n    value\n  }, key) => {\n    return /*#__PURE__*/React.createElement(Flex, {\n      key: key,\n      align: \"center\",\n      justify: \"stretch\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      paddingBottom: 6,\n      paddingRight: 2,\n      flex: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      fontFamily: \"mono\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(Input, {\n      placeholder: \"e.g. Country\",\n      value: name || '',\n      onChange: e => dispatch(updateMetadataRowName({\n        key,\n        name: e.target.value\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(FormControl, {\n      paddingBottom: 6,\n      paddingLeft: 2,\n      flex: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      fontFamily: \"mono\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }\n    }, \"Value\"), /*#__PURE__*/React.createElement(Input, {\n      placeholder: \"e.g. India\",\n      value: value || '',\n      onChange: e => dispatch(updateMetadataRowValue({\n        key,\n        value: e.target.value\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Box, {\n      color: \"gray.400\",\n      ml: 4,\n      mt: 1,\n      cursor: \"pointer\",\n      onClick: () => dispatch(deleteMetadataRow({\n        key\n      })),\n      _hover: {\n        color: 'brand.red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(X, {\n      size: 30,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }\n    })));\n  }), /*#__PURE__*/React.createElement(MinterButton, {\n    variant: \"primaryActionInverted\",\n    onClick: () => dispatch(addMetadataRow()),\n    pl: 3,\n    pr: 3,\n    pt: 2,\n    pb: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    color: \"currentcolor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Plus, {\n    size: 16,\n    strokeWidth: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Text, {\n    ml: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, \"Add field\")));\n}","map":{"version":3,"sources":["/Users/frankenstein/projects/minter/src/components/CreateNonFungiblePage/Form.tsx"],"names":["React","Box","Divider","Flex","FormControl","FormLabel","Heading","Input","Text","Textarea","Plus","X","MinterButton","useSelector","useDispatch","addMetadataRow","deleteMetadataRow","updateField","updateMetadataRowName","updateMetadataRowValue","CollectionSelect","DESCRIPTION_PLACEHOLDER","Form","state","s","createNft","dispatch","name","description","fields","e","value","target","attributes","map","key","color"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  Box,\n  Divider,\n  Flex,\n  FormControl,\n  FormLabel,\n  Heading,\n  Input,\n  Text,\n  Textarea\n} from '@chakra-ui/react';\nimport { Plus, X } from 'react-feather';\nimport { MinterButton } from '../common';\n\nimport { useSelector, useDispatch } from '../../reducer';\nimport {\n  addMetadataRow,\n  deleteMetadataRow,\n  updateField,\n  updateMetadataRowName,\n  updateMetadataRowValue\n} from '../../reducer/slices/createNft';\nimport CollectionSelect from './CollectionSelect';\n\nconst DESCRIPTION_PLACEHOLDER =\n  'e.g. “This is an exclusive japanese comic illustration. Once you purchase it you will be able to get the t-shirt”';\n\nexport default function Form() {\n  const state = useSelector(s => s.createNft);\n  const dispatch = useDispatch();\n  const { name, description } = state.fields;\n  return (\n    <>\n      <CollectionSelect />\n      <Heading size=\"md\" paddingBottom={6}>\n        What properties would you like to give your asset?\n      </Heading>\n      <FormControl paddingBottom={6}>\n        <FormLabel fontFamily=\"mono\">Asset Name</FormLabel>\n        <Input\n          autoFocus={true}\n          placeholder=\"Input your asset name\"\n          value={name || ''}\n          onChange={e =>\n            dispatch(updateField({ name: 'name', value: e.target.value }))\n          }\n        />\n      </FormControl>\n      <FormControl paddingBottom={6}>\n        <FormLabel fontFamily=\"mono\" display=\"flex\">\n          Description\n          <Text marginLeft={2} color=\"brand.lightGray\">\n            (Optional)\n          </Text>\n        </FormLabel>\n        <Textarea\n          minHeight=\"150px\"\n          fontFamily=\"mono\"\n          placeholder={DESCRIPTION_PLACEHOLDER}\n          value={description || ''}\n          onChange={e =>\n            dispatch(\n              updateField({ name: 'description', value: e.target.value })\n            )\n          }\n        />\n      </FormControl>\n      <Divider borderColor=\"brand.lightBlue\" opacity=\"1\" marginY={10} />\n      <Heading size=\"md\" paddingBottom={6}>\n        Add attributes to your asset\n      </Heading>\n      {state.attributes.map(({ name, value }, key) => {\n        return (\n          <Flex key={key} align=\"center\" justify=\"stretch\">\n            <FormControl paddingBottom={6} paddingRight={2} flex=\"1\">\n              <FormLabel fontFamily=\"mono\">Name</FormLabel>\n              <Input\n                placeholder=\"e.g. Country\"\n                value={name || ''}\n                onChange={e =>\n                  dispatch(updateMetadataRowName({ key, name: e.target.value }))\n                }\n              />\n            </FormControl>\n            <FormControl paddingBottom={6} paddingLeft={2} flex=\"1\">\n              <FormLabel fontFamily=\"mono\">Value</FormLabel>\n              <Input\n                placeholder=\"e.g. India\"\n                value={value || ''}\n                onChange={e =>\n                  dispatch(\n                    updateMetadataRowValue({ key, value: e.target.value })\n                  )\n                }\n              />\n            </FormControl>\n            <Box\n              color=\"gray.400\"\n              ml={4}\n              mt={1}\n              cursor=\"pointer\"\n              onClick={() => dispatch(deleteMetadataRow({ key }))}\n              _hover={{\n                color: 'brand.red'\n              }}\n            >\n              <X size={30} />\n            </Box>\n          </Flex>\n        );\n      })}\n      <MinterButton\n        variant=\"primaryActionInverted\"\n        onClick={() => dispatch(addMetadataRow())}\n        pl={3}\n        pr={3}\n        pt={2}\n        pb={2}\n      >\n        <Box color=\"currentcolor\">\n          <Plus size={16} strokeWidth=\"3\" />\n        </Box>\n        <Text ml={2}>Add field</Text>\n      </MinterButton>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}