{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getFilterable = exports.getCompactable = exports.getSemigroup = exports.getEq = exports.getShow = exports.URI = exports.throwError = exports.sequence = exports.traverse = exports.reduceRight = exports.foldMap = exports.reduce = exports.duplicate = exports.extend = exports.alt = exports.altW = exports.flatten = exports.chain = exports.chainW = exports.of = exports.ap = exports.apW = exports.mapLeft = exports.bimap = exports.map = exports.filterOrElse = exports.filterOrElseW = exports.orElse = exports.orElseW = exports.swap = exports.chainOptionK = exports.fromOptionK = exports.toUnion = exports.chainNullableK = exports.fromNullableK = exports.tryCatchK = exports.tryCatch = exports.fromNullable = exports.getOrElse = exports.getOrElseW = exports.fold = exports.match = exports.foldW = exports.matchW = exports.fromPredicate = exports.fromOption = exports.right = exports.left = exports.isRight = exports.isLeft = void 0;\nexports.getValidation = exports.getValidationMonoid = exports.getValidationSemigroup = exports.getApplyMonoid = exports.getApplySemigroup = exports.either = exports.stringifyJSON = exports.parseJSON = exports.sequenceArray = exports.traverseArray = exports.traverseArrayWithIndex = exports.apSW = exports.apS = exports.bindW = exports.bind = exports.bindTo = exports.Do = exports.exists = exports.elem = exports.toError = exports.FromEither = exports.MonadThrow = exports.ChainRec = exports.Extend = exports.Alt = exports.Bifunctor = exports.Traversable = exports.Foldable = exports.chainFirstW = exports.chainFirst = exports.Monad = exports.Chain = exports.Applicative = exports.apSecond = exports.apFirst = exports.Apply = exports.Pointed = exports.flap = exports.Functor = exports.getAltValidation = exports.getApplicativeValidation = exports.getWitherable = void 0;\n\nvar Applicative_1 = require(\"./Applicative\");\n\nvar Apply_1 = require(\"./Apply\");\n\nvar Chain_1 = require(\"./Chain\");\n\nvar ChainRec_1 = require(\"./ChainRec\");\n\nvar function_1 = require(\"./function\");\n\nvar Functor_1 = require(\"./Functor\");\n\nvar _ = __importStar(require(\"./internal\"));\n\nvar Separated_1 = require(\"./Separated\"); // -------------------------------------------------------------------------------------\n// guards\n// -------------------------------------------------------------------------------------\n\n/**\n * Returns `true` if the either is an instance of `Left`, `false` otherwise.\n *\n * @category guards\n * @since 2.0.0\n */\n\n\nexports.isLeft = _.isLeft;\n/**\n * Returns `true` if the either is an instance of `Right`, `false` otherwise.\n *\n * @category guards\n * @since 2.0.0\n */\n\nvar isRight = function (ma) {\n  return ma._tag === 'Right';\n};\n\nexports.isRight = isRight; // -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n\n/**\n * Constructs a new `Either` holding a `Left` value. This usually represents a failure, due to the right-bias of this\n * structure.\n *\n * @category constructors\n * @since 2.0.0\n */\n\nvar left = function (e) {\n  return {\n    _tag: 'Left',\n    left: e\n  };\n};\n\nexports.left = left;\n/**\n * Constructs a new `Either` holding a `Right` value. This usually represents a successful value due to the right bias\n * of this structure.\n *\n * @category constructors\n * @since 2.0.0\n */\n\nvar right = function (a) {\n  return {\n    _tag: 'Right',\n    right: a\n  };\n};\n\nexports.right = right;\n/**\n * @example\n * import { fromOption, left, right } from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n * import { none, some } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     some(1),\n *     fromOption(() => 'error')\n *   ),\n *   right(1)\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     none,\n *     fromOption(() => 'error')\n *   ),\n *   left('error')\n * )\n *\n * @category constructors\n * @since 2.0.0\n */\n\nvar fromOption = function (onNone) {\n  return function (ma) {\n    return ma._tag === 'None' ? exports.left(onNone()) : exports.right(ma.value);\n  };\n};\n\nexports.fromOption = fromOption;\n/**\n * @example\n * import { fromPredicate, left, right } from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     1,\n *     fromPredicate(\n *       (n) => n > 0,\n *       () => 'error'\n *     )\n *   ),\n *   right(1)\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     -1,\n *     fromPredicate(\n *       (n) => n > 0,\n *       () => 'error'\n *     )\n *   ),\n *   left('error')\n * )\n *\n * @category constructors\n * @since 2.0.0\n */\n\nvar fromPredicate = function (predicate, onFalse) {\n  return function (a) {\n    return predicate(a) ? exports.right(a) : exports.left(onFalse(a));\n  };\n};\n\nexports.fromPredicate = fromPredicate; // -------------------------------------------------------------------------------------\n// destructors\n// -------------------------------------------------------------------------------------\n\n/**\n * Less strict version of [`match`](#match).\n *\n * @category destructors\n * @since 2.10.0\n */\n\nvar matchW = function (onLeft, onRight) {\n  return function (ma) {\n    return exports.isLeft(ma) ? onLeft(ma.left) : onRight(ma.right);\n  };\n};\n\nexports.matchW = matchW;\n/**\n * Alias of [`matchW`](#matchww).\n *\n * @category destructors\n * @since 2.10.0\n */\n\nexports.foldW = exports.matchW;\n/**\n * Takes two functions and an `Either` value, if the value is a `Left` the inner value is applied to the first function,\n * if the value is a `Right` the inner value is applied to the second function.\n *\n * @example\n * import { match, left, right } from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * function onLeft(errors: Array<string>): string {\n *   return `Errors: ${errors.join(', ')}`\n * }\n *\n * function onRight(value: number): string {\n *   return `Ok: ${value}`\n * }\n *\n * assert.strictEqual(\n *   pipe(\n *     right(1),\n *     match(onLeft, onRight)\n *   ),\n *   'Ok: 1'\n * )\n * assert.strictEqual(\n *   pipe(\n *     left(['error 1', 'error 2']),\n *     match(onLeft, onRight)\n *   ),\n *   'Errors: error 1, error 2'\n * )\n *\n * @category destructors\n * @since 2.10.0\n */\n\nexports.match = exports.matchW;\n/**\n * Alias of [`match`](#match).\n *\n * @category destructors\n * @since 2.0.0\n */\n\nexports.fold = exports.match;\n/**\n * Less strict version of [`getOrElse`](#getorelse).\n *\n * @category destructors\n * @since 2.6.0\n */\n\nvar getOrElseW = function (onLeft) {\n  return function (ma) {\n    return exports.isLeft(ma) ? onLeft(ma.left) : ma.right;\n  };\n};\n\nexports.getOrElseW = getOrElseW;\n/**\n * Returns the wrapped value if it's a `Right` or a default value if is a `Left`.\n *\n * @example\n * import { getOrElse, left, right } from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     right(1),\n *     getOrElse(() => 0)\n *   ),\n *   1\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     left('error'),\n *     getOrElse(() => 0)\n *   ),\n *   0\n * )\n *\n * @category destructors\n * @since 2.0.0\n */\n\nexports.getOrElse = exports.getOrElseW; // -------------------------------------------------------------------------------------\n// interop\n// -------------------------------------------------------------------------------------\n// TODO: make lazy in v3\n\n/**\n * Takes a default and a nullable value, if the value is not nully, turn it into a `Right`, if the value is nully use\n * the provided default as a `Left`.\n *\n * @example\n * import { fromNullable, left, right } from 'fp-ts/Either'\n *\n * const parse = fromNullable('nully')\n *\n * assert.deepStrictEqual(parse(1), right(1))\n * assert.deepStrictEqual(parse(null), left('nully'))\n *\n * @category interop\n * @since 2.0.0\n */\n\nvar fromNullable = function (e) {\n  return function (a) {\n    return a == null ? exports.left(e) : exports.right(a);\n  };\n};\n\nexports.fromNullable = fromNullable;\n/**\n * Constructs a new `Either` from a function that might throw.\n *\n * See also [`tryCatchK`](#trycatchk).\n *\n * @example\n * import * as E from 'fp-ts/Either'\n *\n * const unsafeHead = <A>(as: ReadonlyArray<A>): A => {\n *   if (as.length > 0) {\n *     return as[0]\n *   } else {\n *     throw new Error('empty array')\n *   }\n * }\n *\n * const head = <A>(as: ReadonlyArray<A>): E.Either<Error, A> =>\n *   E.tryCatch(() => unsafeHead(as), e => (e instanceof Error ? e : new Error('unknown error')))\n *\n * assert.deepStrictEqual(head([]), E.left(new Error('empty array')))\n * assert.deepStrictEqual(head([1, 2, 3]), E.right(1))\n *\n * @category interop\n * @since 2.0.0\n */\n\nvar tryCatch = function (f, onThrow) {\n  try {\n    return exports.right(f());\n  } catch (e) {\n    return exports.left(onThrow(e));\n  }\n};\n\nexports.tryCatch = tryCatch;\n/**\n * Converts a function that may throw to one returning a `Either`.\n *\n * @category interop\n * @since 2.10.0\n */\n\nvar tryCatchK = function (f, onThrow) {\n  return function () {\n    var a = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      a[_i] = arguments[_i];\n    }\n\n    return exports.tryCatch(function () {\n      return f.apply(void 0, a);\n    }, onThrow);\n  };\n};\n\nexports.tryCatchK = tryCatchK;\n/**\n * @category interop\n * @since 2.9.0\n */\n\nvar fromNullableK = function (e) {\n  var from = exports.fromNullable(e);\n  return function (f) {\n    return function_1.flow(f, from);\n  };\n};\n\nexports.fromNullableK = fromNullableK;\n/**\n * @category interop\n * @since 2.9.0\n */\n\nvar chainNullableK = function (e) {\n  var from = exports.fromNullableK(e);\n  return function (f) {\n    return exports.chain(from(f));\n  };\n};\n\nexports.chainNullableK = chainNullableK;\n/**\n * @category interop\n * @since 2.10.0\n */\n\nexports.toUnion = /*#__PURE__*/exports.foldW(function_1.identity, function_1.identity); // -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n\n/**\n * @category combinators\n * @since 2.10.0\n */\n\nvar fromOptionK = function (onNone) {\n  var from = exports.fromOption(onNone);\n  return function (f) {\n    return function_1.flow(f, from);\n  };\n};\n\nexports.fromOptionK = fromOptionK;\n/**\n * @category combinators\n * @since 2.10.0\n */\n\nvar chainOptionK = function (onNone) {\n  var from = exports.fromOptionK(onNone);\n  return function (f) {\n    return exports.chain(from(f));\n  };\n};\n\nexports.chainOptionK = chainOptionK;\n/**\n * Returns a `Right` if is a `Left` (and vice versa).\n *\n * @category combinators\n * @since 2.0.0\n */\n\nfunction swap(ma) {\n  return exports.isLeft(ma) ? exports.right(ma.left) : exports.left(ma.right);\n}\n\nexports.swap = swap;\n/**\n * Less strict version of [`orElse`](#orelse).\n *\n * @category combinators\n * @since 2.10.0\n */\n\nvar orElseW = function (onLeft) {\n  return function (ma) {\n    return exports.isLeft(ma) ? onLeft(ma.left) : ma;\n  };\n};\n\nexports.orElseW = orElseW;\n/**\n * Useful for recovering from errors.\n *\n * @category combinators\n * @since 2.0.0\n */\n\nexports.orElse = exports.orElseW;\n/**\n * Less strict version of [`filterOrElse`](#filterorelse).\n *\n * @category combinators\n * @since 2.9.0\n */\n\nvar filterOrElseW = function (predicate, onFalse) {\n  return exports.chainW(function (a) {\n    return predicate(a) ? exports.right(a) : exports.left(onFalse(a));\n  });\n};\n\nexports.filterOrElseW = filterOrElseW;\n/**\n * @example\n * import { filterOrElse as filterOrElse, left, right } from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     right(1),\n *     filterOrElse(\n *       (n) => n > 0,\n *       () => 'error'\n *     )\n *   ),\n *   right(1)\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     right(-1),\n *     filterOrElse(\n *       (n) => n > 0,\n *       () => 'error'\n *     )\n *   ),\n *   left('error')\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     left('a'),\n *     filterOrElse(\n *       (n) => n > 0,\n *       () => 'error'\n *     )\n *   ),\n *   left('a')\n * )\n *\n * @category combinators\n * @since 2.0.0\n */\n\nexports.filterOrElse = exports.filterOrElseW; // -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\n\nvar _map = function (fa, f) {\n  return function_1.pipe(fa, exports.map(f));\n};\n\nvar _ap = function (fab, fa) {\n  return function_1.pipe(fab, exports.ap(fa));\n};\n/* istanbul ignore next */\n\n\nvar _chain = function (ma, f) {\n  return function_1.pipe(ma, exports.chain(f));\n};\n/* istanbul ignore next */\n\n\nvar _reduce = function (fa, b, f) {\n  return function_1.pipe(fa, exports.reduce(b, f));\n};\n/* istanbul ignore next */\n\n\nvar _foldMap = function (M) {\n  return function (fa, f) {\n    var foldMapM = exports.foldMap(M);\n    return function_1.pipe(fa, foldMapM(f));\n  };\n};\n/* istanbul ignore next */\n\n\nvar _reduceRight = function (fa, b, f) {\n  return function_1.pipe(fa, exports.reduceRight(b, f));\n};\n\nvar _traverse = function (F) {\n  var traverseF = exports.traverse(F);\n  return function (ta, f) {\n    return function_1.pipe(ta, traverseF(f));\n  };\n};\n\nvar _bimap = function (fa, f, g) {\n  return function_1.pipe(fa, exports.bimap(f, g));\n};\n\nvar _mapLeft = function (fa, f) {\n  return function_1.pipe(fa, exports.mapLeft(f));\n};\n/* istanbul ignore next */\n\n\nvar _alt = function (fa, that) {\n  return function_1.pipe(fa, exports.alt(that));\n};\n/* istanbul ignore next */\n\n\nvar _extend = function (wa, f) {\n  return function_1.pipe(wa, exports.extend(f));\n};\n\nvar _chainRec = function (a, f) {\n  return ChainRec_1.tailRec(f(a), function (e) {\n    return exports.isLeft(e) ? exports.right(exports.left(e.left)) : exports.isLeft(e.right) ? exports.left(f(e.right.left)) : exports.right(exports.right(e.right.right));\n  });\n}; // -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.0.0\n */\n\n\nvar map = function (f) {\n  return function (fa) {\n    return exports.isLeft(fa) ? fa : exports.right(f(fa.right));\n  };\n};\n\nexports.map = map;\n/**\n * Map a pair of functions over the two type arguments of the bifunctor.\n *\n * @category Bifunctor\n * @since 2.0.0\n */\n\nvar bimap = function (f, g) {\n  return function (fa) {\n    return exports.isLeft(fa) ? exports.left(f(fa.left)) : exports.right(g(fa.right));\n  };\n};\n\nexports.bimap = bimap;\n/**\n * Map a function over the first type argument of a bifunctor.\n *\n * @category Bifunctor\n * @since 2.0.0\n */\n\nvar mapLeft = function (f) {\n  return function (fa) {\n    return exports.isLeft(fa) ? exports.left(f(fa.left)) : fa;\n  };\n};\n\nexports.mapLeft = mapLeft;\n/**\n * Less strict version of [`ap`](#ap).\n *\n * @category Apply\n * @since 2.8.0\n */\n\nvar apW = function (fa) {\n  return function (fab) {\n    return exports.isLeft(fab) ? fab : exports.isLeft(fa) ? fa : exports.right(fab.right(fa.right));\n  };\n};\n\nexports.apW = apW;\n/**\n * Apply a function to an argument under a type constructor.\n *\n * @category Apply\n * @since 2.0.0\n */\n\nexports.ap = exports.apW;\n/**\n * @category Pointed\n * @since 2.7.0\n */\n\nexports.of = exports.right;\n/**\n * Less strict version of [`chain`](#chain).\n *\n * @category Monad\n * @since 2.6.0\n */\n\nvar chainW = function (f) {\n  return function (ma) {\n    return exports.isLeft(ma) ? ma : f(ma.right);\n  };\n};\n\nexports.chainW = chainW;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category Monad\n * @since 2.0.0\n */\n\nexports.chain = exports.chainW;\n/**\n * The `flatten` function is the conventional monad join operator. It is used to remove one level of monadic structure, projecting its bound argument into the outer level.\n *\n * Derivable from `Chain`.\n *\n * @example\n * import * as E from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(E.flatten(E.right(E.right('a'))), E.right('a'))\n * assert.deepStrictEqual(E.flatten(E.right(E.left('e'))), E.left('e'))\n * assert.deepStrictEqual(E.flatten(E.left('e')), E.left('e'))\n *\n * @category combinators\n * @since 2.0.0\n */\n\nexports.flatten = /*#__PURE__*/exports.chain(function_1.identity);\n/**\n * Less strict version of [`alt`](#alt).\n *\n * @category Alt\n * @since 2.9.0\n */\n\nvar altW = function (that) {\n  return function (fa) {\n    return exports.isLeft(fa) ? that() : fa;\n  };\n};\n\nexports.altW = altW;\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * @category Alt\n * @since 2.0.0\n */\n\nexports.alt = exports.altW;\n/**\n * @category Extend\n * @since 2.0.0\n */\n\nvar extend = function (f) {\n  return function (wa) {\n    return exports.isLeft(wa) ? wa : exports.right(f(wa));\n  };\n};\n\nexports.extend = extend;\n/**\n * Derivable from `Extend`.\n *\n * @category combinators\n * @since 2.0.0\n */\n\nexports.duplicate = /*#__PURE__*/exports.extend(function_1.identity);\n/**\n * Left-associative fold of a structure.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as E from 'fp-ts/Either'\n *\n * const startWith = 'prefix'\n * const concat = (a: string, b: string) => `${a}:${b}`\n *\n * assert.deepStrictEqual(\n *   pipe(E.right('a'), E.reduce(startWith, concat)),\n *   'prefix:a'\n * )\n *\n * assert.deepStrictEqual(\n *   pipe(E.left('e'), E.reduce(startWith, concat)),\n *   'prefix'\n * )\n *\n * @category Foldable\n * @since 2.0.0\n */\n\nvar reduce = function (b, f) {\n  return function (fa) {\n    return exports.isLeft(fa) ? b : f(b, fa.right);\n  };\n};\n\nexports.reduce = reduce;\n/**\n * Map each element of the structure to a monoid, and combine the results.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as E from 'fp-ts/Either'\n * import * as S from 'fp-ts/string'\n *\n * const yell = (a: string) => `${a}!`\n *\n * assert.deepStrictEqual(\n *   pipe(E.right('a'), E.foldMap(S.Monoid)(yell)),\n *   'a!'\n * )\n *\n * assert.deepStrictEqual(\n *   pipe(E.left('e'), E.foldMap(S.Monoid)(yell)),\n *   S.Monoid.empty\n * )\n *\n * @category Foldable\n * @since 2.0.0\n */\n\nvar foldMap = function (M) {\n  return function (f) {\n    return function (fa) {\n      return exports.isLeft(fa) ? M.empty : f(fa.right);\n    };\n  };\n};\n\nexports.foldMap = foldMap;\n/**\n * Right-associative fold of a structure.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as E from 'fp-ts/Either'\n *\n * const startWith = 'postfix'\n * const concat = (a: string, b: string) => `${a}:${b}`\n *\n * assert.deepStrictEqual(\n *   pipe(E.right('a'), E.reduceRight(startWith, concat)),\n *   'a:postfix'\n * )\n *\n * assert.deepStrictEqual(\n *   pipe(E.left('e'), E.reduceRight(startWith, concat)),\n *   'postfix'\n * )\n *\n * @category Foldable\n * @since 2.0.0\n */\n\nvar reduceRight = function (b, f) {\n  return function (fa) {\n    return exports.isLeft(fa) ? b : f(fa.right, b);\n  };\n};\n\nexports.reduceRight = reduceRight;\n/**\n * Map each element of a structure to an action, evaluate these actions from left to right, and collect the results.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import * as E from 'fp-ts/Either'\n * import * as O from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(\n *   pipe(E.right(['a']), E.traverse(O.Applicative)(RA.head)),\n *   O.some(E.right('a'))\n *  )\n *\n * assert.deepStrictEqual(\n *   pipe(E.right([]), E.traverse(O.Applicative)(RA.head)),\n *   O.none\n * )\n *\n * @category Traversable\n * @since 2.6.3\n */\n\nvar traverse = function (F) {\n  return function (f) {\n    return function (ta) {\n      return exports.isLeft(ta) ? F.of(exports.left(ta.left)) : F.map(f(ta.right), exports.right);\n    };\n  };\n};\n\nexports.traverse = traverse;\n/**\n * Evaluate each monadic action in the structure from left to right, and collect the results.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as E from 'fp-ts/Either'\n * import * as O from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(\n *   pipe(E.right(O.some('a')), E.sequence(O.Applicative)),\n *   O.some(E.right('a'))\n *  )\n *\n * assert.deepStrictEqual(\n *   pipe(E.right(O.none), E.sequence(O.Applicative)),\n *   O.none\n * )\n *\n * @category Traversable\n * @since 2.6.3\n */\n\nvar sequence = function (F) {\n  return function (ma) {\n    return exports.isLeft(ma) ? F.of(exports.left(ma.left)) : F.map(ma.right, exports.right);\n  };\n};\n\nexports.sequence = sequence;\n/**\n * @category MonadThrow\n * @since 2.6.3\n */\n\nexports.throwError = exports.left; // -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n\n/**\n * @category instances\n * @since 2.0.0\n */\n\nexports.URI = 'Either';\n/**\n * @category instances\n * @since 2.0.0\n */\n\nfunction getShow(SE, SA) {\n  return {\n    show: function (ma) {\n      return exports.isLeft(ma) ? \"left(\" + SE.show(ma.left) + \")\" : \"right(\" + SA.show(ma.right) + \")\";\n    }\n  };\n}\n\nexports.getShow = getShow;\n/**\n * @category instances\n * @since 2.0.0\n */\n\nfunction getEq(EL, EA) {\n  return {\n    equals: function (x, y) {\n      return x === y || (exports.isLeft(x) ? exports.isLeft(y) && EL.equals(x.left, y.left) : exports.isRight(y) && EA.equals(x.right, y.right));\n    }\n  };\n}\n\nexports.getEq = getEq;\n/**\n * Semigroup returning the left-most non-`Left` value. If both operands are `Right`s then the inner values are\n * concatenated using the provided `Semigroup`\n *\n * @example\n * import { getSemigroup, left, right } from 'fp-ts/Either'\n * import { SemigroupSum } from 'fp-ts/number'\n *\n * const S = getSemigroup<string, number>(SemigroupSum)\n * assert.deepStrictEqual(S.concat(left('a'), left('b')), left('a'))\n * assert.deepStrictEqual(S.concat(left('a'), right(2)), right(2))\n * assert.deepStrictEqual(S.concat(right(1), left('b')), right(1))\n * assert.deepStrictEqual(S.concat(right(1), right(2)), right(3))\n *\n * @category instances\n * @since 2.0.0\n */\n\nfunction getSemigroup(S) {\n  return {\n    concat: function (x, y) {\n      return exports.isLeft(y) ? x : exports.isLeft(x) ? y : exports.right(S.concat(x.right, y.right));\n    }\n  };\n}\n\nexports.getSemigroup = getSemigroup;\n/**\n * Builds a `Compactable` instance for `Either` given `Monoid` for the left side.\n *\n * @category instances\n * @since 2.10.0\n */\n\nvar getCompactable = function (M) {\n  var empty = exports.left(M.empty);\n  return {\n    URI: exports.URI,\n    _E: undefined,\n    compact: function (ma) {\n      return exports.isLeft(ma) ? ma : ma.right._tag === 'None' ? empty : exports.right(ma.right.value);\n    },\n    separate: function (ma) {\n      return exports.isLeft(ma) ? Separated_1.separated(ma, ma) : exports.isLeft(ma.right) ? Separated_1.separated(exports.right(ma.right.left), empty) : Separated_1.separated(empty, exports.right(ma.right.right));\n    }\n  };\n};\n\nexports.getCompactable = getCompactable;\n/**\n * Builds a `Filterable` instance for `Either` given `Monoid` for the left side\n *\n * @category instances\n * @since 2.10.0\n */\n\nfunction getFilterable(M) {\n  var empty = exports.left(M.empty);\n\n  var _a = exports.getCompactable(M),\n      compact = _a.compact,\n      separate = _a.separate;\n\n  var filter = function (ma, predicate) {\n    return exports.isLeft(ma) ? ma : predicate(ma.right) ? ma : empty;\n  };\n\n  var partition = function (ma, p) {\n    return exports.isLeft(ma) ? Separated_1.separated(ma, ma) : p(ma.right) ? Separated_1.separated(empty, exports.right(ma.right)) : Separated_1.separated(exports.right(ma.right), empty);\n  };\n\n  return {\n    URI: exports.URI,\n    _E: undefined,\n    map: _map,\n    compact: compact,\n    separate: separate,\n    filter: filter,\n    filterMap: function (ma, f) {\n      if (exports.isLeft(ma)) {\n        return ma;\n      }\n\n      var ob = f(ma.right);\n      return ob._tag === 'None' ? empty : exports.right(ob.value);\n    },\n    partition: partition,\n    partitionMap: function (ma, f) {\n      if (exports.isLeft(ma)) {\n        return Separated_1.separated(ma, ma);\n      }\n\n      var e = f(ma.right);\n      return exports.isLeft(e) ? Separated_1.separated(exports.right(e.left), empty) : Separated_1.separated(empty, exports.right(e.right));\n    }\n  };\n}\n\nexports.getFilterable = getFilterable;\n/**\n * Builds `Witherable` instance for `Either` given `Monoid` for the left side\n *\n * @category instances\n * @since 2.0.0\n */\n\nfunction getWitherable(M) {\n  var F_ = getFilterable(M);\n\n  var wither = function (F) {\n    var traverseF = _traverse(F);\n\n    return function (ma, f) {\n      return F.map(traverseF(ma, f), F_.compact);\n    };\n  };\n\n  var wilt = function (F) {\n    var traverseF = _traverse(F);\n\n    return function (ma, f) {\n      return F.map(traverseF(ma, f), F_.separate);\n    };\n  };\n\n  return {\n    URI: exports.URI,\n    _E: undefined,\n    map: _map,\n    compact: F_.compact,\n    separate: F_.separate,\n    filter: F_.filter,\n    filterMap: F_.filterMap,\n    partition: F_.partition,\n    partitionMap: F_.partitionMap,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    wither: wither,\n    wilt: wilt\n  };\n}\n\nexports.getWitherable = getWitherable;\n/**\n * @category instances\n * @since 2.7.0\n */\n\nfunction getApplicativeValidation(SE) {\n  return {\n    URI: exports.URI,\n    _E: undefined,\n    map: _map,\n    ap: function (fab, fa) {\n      return exports.isLeft(fab) ? exports.isLeft(fa) ? exports.left(SE.concat(fab.left, fa.left)) : fab : exports.isLeft(fa) ? fa : exports.right(fab.right(fa.right));\n    },\n    of: exports.of\n  };\n}\n\nexports.getApplicativeValidation = getApplicativeValidation;\n/**\n * @category instances\n * @since 2.7.0\n */\n\nfunction getAltValidation(SE) {\n  return {\n    URI: exports.URI,\n    _E: undefined,\n    map: _map,\n    alt: function (me, that) {\n      if (exports.isRight(me)) {\n        return me;\n      }\n\n      var ea = that();\n      return exports.isLeft(ea) ? exports.left(SE.concat(me.left, ea.left)) : ea;\n    }\n  };\n}\n\nexports.getAltValidation = getAltValidation;\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Functor = {\n  URI: exports.URI,\n  map: _map\n};\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\n\nexports.flap =\n/*#_PURE_*/\nFunctor_1.flap(exports.Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\n\nexports.Pointed = {\n  URI: exports.URI,\n  of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\n\nexports.Apply = {\n  URI: exports.URI,\n  map: _map,\n  ap: _ap\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.0.0\n */\n\nexports.apFirst = /*#__PURE__*/Apply_1.apFirst(exports.Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.0.0\n */\n\nexports.apSecond = /*#__PURE__*/Apply_1.apSecond(exports.Apply);\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Applicative = {\n  URI: exports.URI,\n  map: _map,\n  ap: _ap,\n  of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\n\nexports.Chain = {\n  URI: exports.URI,\n  map: _map,\n  ap: _ap,\n  chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Monad = {\n  URI: exports.URI,\n  map: _map,\n  ap: _ap,\n  of: exports.of,\n  chain: _chain\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.0.0\n */\n\nexports.chainFirst = /*#__PURE__*/Chain_1.chainFirst(exports.Chain);\n/**\n * Less strict version of [`chainFirst`](#chainfirst)\n *\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.8.0\n */\n\nexports.chainFirstW = exports.chainFirst;\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Foldable = {\n  URI: exports.URI,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Traversable = {\n  URI: exports.URI,\n  map: _map,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight,\n  traverse: _traverse,\n  sequence: exports.sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Bifunctor = {\n  URI: exports.URI,\n  bimap: _bimap,\n  mapLeft: _mapLeft\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Alt = {\n  URI: exports.URI,\n  map: _map,\n  alt: _alt\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Extend = {\n  URI: exports.URI,\n  map: _map,\n  extend: _extend\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.ChainRec = {\n  URI: exports.URI,\n  map: _map,\n  ap: _ap,\n  chain: _chain,\n  chainRec: _chainRec\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.MonadThrow = {\n  URI: exports.URI,\n  map: _map,\n  ap: _ap,\n  of: exports.of,\n  chain: _chain,\n  throwError: exports.throwError\n};\n/**\n * @category instances\n * @since 2.10.0\n */\n\nexports.FromEither = {\n  URI: exports.URI,\n  fromEither: function_1.identity\n}; // -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n\n/**\n * Default value for the `onError` argument of `tryCatch`\n *\n * @since 2.0.0\n */\n\nfunction toError(e) {\n  return e instanceof Error ? e : new Error(String(e));\n}\n\nexports.toError = toError;\n/**\n * @since 2.0.0\n */\n\nfunction elem(E) {\n  return function (a, ma) {\n    return exports.isLeft(ma) ? false : E.equals(a, ma.right);\n  };\n}\n\nexports.elem = elem;\n/**\n * Returns `false` if `Left` or returns the result of the application of the given predicate to the `Right` value.\n *\n * @example\n * import { exists, left, right } from 'fp-ts/Either'\n *\n * const gt2 = exists((n: number) => n > 2)\n *\n * assert.strictEqual(gt2(left('a')), false)\n * assert.strictEqual(gt2(right(1)), false)\n * assert.strictEqual(gt2(right(3)), true)\n *\n * @since 2.0.0\n */\n\nfunction exists(predicate) {\n  return function (ma) {\n    return exports.isLeft(ma) ? false : predicate(ma.right);\n  };\n}\n\nexports.exists = exists; // -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n\n/**\n * @since 2.9.0\n */\n\nexports.Do = /*#__PURE__*/exports.of({});\n/**\n * @since 2.8.0\n */\n\nexports.bindTo = /*#__PURE__*/Functor_1.bindTo(exports.Functor);\n/**\n * @since 2.8.0\n */\n\nexports.bind = /*#__PURE__*/Chain_1.bind(exports.Chain);\n/**\n * @since 2.8.0\n */\n\nexports.bindW = exports.bind; // -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n\n/**\n * @since 2.8.0\n */\n\nexports.apS = /*#__PURE__*/Apply_1.apS(exports.Apply);\n/**\n * @since 2.8.0\n */\n\nexports.apSW = exports.apS; // -------------------------------------------------------------------------------------\n// array utils\n// -------------------------------------------------------------------------------------\n\n/**\n * Equivalent to `ReadonlyArray#traverseWithIndex(Applicative)`.\n *\n * @since 2.9.0\n */\n\nvar traverseArrayWithIndex = function (f) {\n  return function (as) {\n    var out = [];\n\n    for (var i = 0; i < as.length; i++) {\n      var e = f(i, as[i]);\n\n      if (exports.isLeft(e)) {\n        return e;\n      }\n\n      out.push(e.right);\n    }\n\n    return exports.right(out);\n  };\n};\n\nexports.traverseArrayWithIndex = traverseArrayWithIndex;\n/**\n * Equivalent to `ReadonlyArray#traverse(Applicative)`.\n *\n * @since 2.9.0\n */\n\nvar traverseArray = function (f) {\n  return exports.traverseArrayWithIndex(function (_, a) {\n    return f(a);\n  });\n};\n\nexports.traverseArray = traverseArray;\n/**\n * Equivalent to `ReadonlyArray#sequence(Applicative)`.\n *\n * @since 2.9.0\n */\n\nexports.sequenceArray = /*#__PURE__*/exports.traverseArray(function_1.identity);\n/**\n * Use [`parse`](./Json.ts.html#parse) instead.\n *\n * @category constructors\n * @since 2.0.0\n * @deprecated\n */\n// tslint:disable-next-line: deprecation\n\nfunction parseJSON(s, onError) {\n  return exports.tryCatch(function () {\n    return JSON.parse(s);\n  }, onError);\n}\n\nexports.parseJSON = parseJSON;\n/**\n * Use [`stringify`](./Json.ts.html#stringify) instead.\n *\n * @category constructors\n * @since 2.0.0\n * @deprecated\n */\n\nvar stringifyJSON = function (u, onError) {\n  return exports.tryCatch(function () {\n    var s = JSON.stringify(u);\n\n    if (typeof s !== 'string') {\n      throw new Error('Converting unsupported structure to JSON');\n    }\n\n    return s;\n  }, onError);\n};\n\nexports.stringifyJSON = stringifyJSON;\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\n\nexports.either = {\n  URI: exports.URI,\n  map: _map,\n  of: exports.of,\n  ap: _ap,\n  chain: _chain,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight,\n  traverse: _traverse,\n  sequence: exports.sequence,\n  bimap: _bimap,\n  mapLeft: _mapLeft,\n  alt: _alt,\n  extend: _extend,\n  chainRec: _chainRec,\n  throwError: exports.throwError\n};\n/**\n * Use [`getApplySemigroup`](./Apply.ts.html#getApplySemigroup) instead.\n *\n * Semigroup returning the left-most `Left` value. If both operands are `Right`s then the inner values\n * are concatenated using the provided `Semigroup`\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\n\nexports.getApplySemigroup = /*#__PURE__*/Apply_1.getApplySemigroup(exports.Apply);\n/**\n * Use [`getApplicativeMonoid`](./Applicative.ts.html#getApplicativeMonoid) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\n\nexports.getApplyMonoid = /*#__PURE__*/Applicative_1.getApplicativeMonoid(exports.Applicative);\n/**\n * Use [`getApplySemigroup`](./Apply.ts.html#getApplySemigroup) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\n\nvar getValidationSemigroup = function (SE, SA) {\n  return Apply_1.getApplySemigroup(getApplicativeValidation(SE))(SA);\n};\n\nexports.getValidationSemigroup = getValidationSemigroup;\n/**\n * Use [`getApplicativeMonoid`](./Applicative.ts.html#getApplicativeMonoid) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\n\nvar getValidationMonoid = function (SE, MA) {\n  return Applicative_1.getApplicativeMonoid(getApplicativeValidation(SE))(MA);\n};\n\nexports.getValidationMonoid = getValidationMonoid;\n/**\n * Use [`getApplicativeValidation`](#getapplicativevalidation) and [`getAltValidation`](#getaltvalidation) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\n\nfunction getValidation(SE) {\n  var ap = getApplicativeValidation(SE).ap;\n  var alt = getAltValidation(SE).alt;\n  return {\n    URI: exports.URI,\n    _E: undefined,\n    map: _map,\n    of: exports.of,\n    chain: _chain,\n    bimap: _bimap,\n    mapLeft: _mapLeft,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    extend: _extend,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    chainRec: _chainRec,\n    throwError: exports.throwError,\n    ap: ap,\n    alt: alt\n  };\n}\n\nexports.getValidation = getValidation;","map":{"version":3,"sources":["/Users/frankenstein/projects/minter/node_modules/fp-ts/lib/Either.js"],"names":["__createBinding","Object","create","o","m","k","k2","undefined","defineProperty","enumerable","get","__setModuleDefault","v","value","__importStar","mod","__esModule","result","prototype","hasOwnProperty","call","exports","getFilterable","getCompactable","getSemigroup","getEq","getShow","URI","throwError","sequence","traverse","reduceRight","foldMap","reduce","duplicate","extend","alt","altW","flatten","chain","chainW","of","ap","apW","mapLeft","bimap","map","filterOrElse","filterOrElseW","orElse","orElseW","swap","chainOptionK","fromOptionK","toUnion","chainNullableK","fromNullableK","tryCatchK","tryCatch","fromNullable","getOrElse","getOrElseW","fold","match","foldW","matchW","fromPredicate","fromOption","right","left","isRight","isLeft","getValidation","getValidationMonoid","getValidationSemigroup","getApplyMonoid","getApplySemigroup","either","stringifyJSON","parseJSON","sequenceArray","traverseArray","traverseArrayWithIndex","apSW","apS","bindW","bind","bindTo","Do","exists","elem","toError","FromEither","MonadThrow","ChainRec","Extend","Alt","Bifunctor","Traversable","Foldable","chainFirstW","chainFirst","Monad","Chain","Applicative","apSecond","apFirst","Apply","Pointed","flap","Functor","getAltValidation","getApplicativeValidation","getWitherable","Applicative_1","require","Apply_1","Chain_1","ChainRec_1","function_1","Functor_1","_","Separated_1","ma","_tag","e","a","onNone","predicate","onFalse","onLeft","onRight","f","onThrow","_i","arguments","length","apply","from","flow","identity","_map","fa","pipe","_ap","fab","_chain","_reduce","b","_foldMap","M","foldMapM","_reduceRight","_traverse","F","traverseF","ta","_bimap","g","_mapLeft","_alt","that","_extend","wa","_chainRec","tailRec","empty","SE","SA","show","EL","EA","equals","x","y","S","concat","_E","compact","separate","separated","_a","filter","partition","p","filterMap","ob","partitionMap","F_","wither","wilt","me","ea","chainRec","fromEither","Error","String","E","as","out","i","push","s","onError","JSON","parse","u","stringify","getApplicativeMonoid","MA"],"mappings":"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AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA5C,OAAO,CAAC0C,KAAR,GAAgB1C,OAAO,CAAC4C,MAAxB;AACA;AACA;AACA;AACA;AACA;AACA;;AACA5C,OAAO,CAACyC,IAAR,GAAezC,OAAO,CAAC0C,KAAvB;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIF,UAAU,GAAG,UAAUqE,MAAV,EAAkB;AAAE,SAAO,UAAUP,EAAV,EAAc;AACtD,WAAOtG,OAAO,CAACkD,MAAR,CAAeoD,EAAf,IAAqBO,MAAM,CAACP,EAAE,CAACtD,IAAJ,CAA3B,GAAuCsD,EAAE,CAACvD,KAAjD;AACH,GAFoC;AAEjC,CAFJ;;AAGA/C,OAAO,CAACwC,UAAR,GAAqBA,UAArB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAxC,OAAO,CAACuC,SAAR,GAAoBvC,OAAO,CAACwC,UAA5B,C,CACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIF,YAAY,GAAG,UAAUkE,CAAV,EAAa;AAAE,SAAO,UAAUC,CAAV,EAAa;AAClD,WAAOA,CAAC,IAAI,IAAL,GAAYzG,OAAO,CAACgD,IAAR,CAAawD,CAAb,CAAZ,GAA8BxG,OAAO,CAAC+C,KAAR,CAAc0D,CAAd,CAArC;AACH,GAFiC;AAE9B,CAFJ;;AAGAzG,OAAO,CAACsC,YAAR,GAAuBA,YAAvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAID,QAAQ,GAAG,UAAU0E,CAAV,EAAaC,OAAb,EAAsB;AACjC,MAAI;AACA,WAAOhH,OAAO,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","sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getFilterable = exports.getCompactable = exports.getSemigroup = exports.getEq = exports.getShow = exports.URI = exports.throwError = exports.sequence = exports.traverse = exports.reduceRight = exports.foldMap = exports.reduce = exports.duplicate = exports.extend = exports.alt = exports.altW = exports.flatten = exports.chain = exports.chainW = exports.of = exports.ap = exports.apW = exports.mapLeft = exports.bimap = exports.map = exports.filterOrElse = exports.filterOrElseW = exports.orElse = exports.orElseW = exports.swap = exports.chainOptionK = exports.fromOptionK = exports.toUnion = exports.chainNullableK = exports.fromNullableK = exports.tryCatchK = exports.tryCatch = exports.fromNullable = exports.getOrElse = exports.getOrElseW = exports.fold = exports.match = exports.foldW = exports.matchW = exports.fromPredicate = exports.fromOption = exports.right = exports.left = exports.isRight = exports.isLeft = void 0;\nexports.getValidation = exports.getValidationMonoid = exports.getValidationSemigroup = exports.getApplyMonoid = exports.getApplySemigroup = exports.either = exports.stringifyJSON = exports.parseJSON = exports.sequenceArray = exports.traverseArray = exports.traverseArrayWithIndex = exports.apSW = exports.apS = exports.bindW = exports.bind = exports.bindTo = exports.Do = exports.exists = exports.elem = exports.toError = exports.FromEither = exports.MonadThrow = exports.ChainRec = exports.Extend = exports.Alt = exports.Bifunctor = exports.Traversable = exports.Foldable = exports.chainFirstW = exports.chainFirst = exports.Monad = exports.Chain = exports.Applicative = exports.apSecond = exports.apFirst = exports.Apply = exports.Pointed = exports.flap = exports.Functor = exports.getAltValidation = exports.getApplicativeValidation = exports.getWitherable = void 0;\nvar Applicative_1 = require(\"./Applicative\");\nvar Apply_1 = require(\"./Apply\");\nvar Chain_1 = require(\"./Chain\");\nvar ChainRec_1 = require(\"./ChainRec\");\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nvar _ = __importStar(require(\"./internal\"));\nvar Separated_1 = require(\"./Separated\");\n// -------------------------------------------------------------------------------------\n// guards\n// -------------------------------------------------------------------------------------\n/**\n * Returns `true` if the either is an instance of `Left`, `false` otherwise.\n *\n * @category guards\n * @since 2.0.0\n */\nexports.isLeft = _.isLeft;\n/**\n * Returns `true` if the either is an instance of `Right`, `false` otherwise.\n *\n * @category guards\n * @since 2.0.0\n */\nvar isRight = function (ma) { return ma._tag === 'Right'; };\nexports.isRight = isRight;\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * Constructs a new `Either` holding a `Left` value. This usually represents a failure, due to the right-bias of this\n * structure.\n *\n * @category constructors\n * @since 2.0.0\n */\nvar left = function (e) { return ({ _tag: 'Left', left: e }); };\nexports.left = left;\n/**\n * Constructs a new `Either` holding a `Right` value. This usually represents a successful value due to the right bias\n * of this structure.\n *\n * @category constructors\n * @since 2.0.0\n */\nvar right = function (a) { return ({ _tag: 'Right', right: a }); };\nexports.right = right;\n/**\n * @example\n * import { fromOption, left, right } from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n * import { none, some } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     some(1),\n *     fromOption(() => 'error')\n *   ),\n *   right(1)\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     none,\n *     fromOption(() => 'error')\n *   ),\n *   left('error')\n * )\n *\n * @category constructors\n * @since 2.0.0\n */\nvar fromOption = function (onNone) { return function (ma) {\n    return ma._tag === 'None' ? exports.left(onNone()) : exports.right(ma.value);\n}; };\nexports.fromOption = fromOption;\n/**\n * @example\n * import { fromPredicate, left, right } from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     1,\n *     fromPredicate(\n *       (n) => n > 0,\n *       () => 'error'\n *     )\n *   ),\n *   right(1)\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     -1,\n *     fromPredicate(\n *       (n) => n > 0,\n *       () => 'error'\n *     )\n *   ),\n *   left('error')\n * )\n *\n * @category constructors\n * @since 2.0.0\n */\nvar fromPredicate = function (predicate, onFalse) { return function (a) { return (predicate(a) ? exports.right(a) : exports.left(onFalse(a))); }; };\nexports.fromPredicate = fromPredicate;\n// -------------------------------------------------------------------------------------\n// destructors\n// -------------------------------------------------------------------------------------\n/**\n * Less strict version of [`match`](#match).\n *\n * @category destructors\n * @since 2.10.0\n */\nvar matchW = function (onLeft, onRight) { return function (ma) {\n    return exports.isLeft(ma) ? onLeft(ma.left) : onRight(ma.right);\n}; };\nexports.matchW = matchW;\n/**\n * Alias of [`matchW`](#matchww).\n *\n * @category destructors\n * @since 2.10.0\n */\nexports.foldW = exports.matchW;\n/**\n * Takes two functions and an `Either` value, if the value is a `Left` the inner value is applied to the first function,\n * if the value is a `Right` the inner value is applied to the second function.\n *\n * @example\n * import { match, left, right } from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * function onLeft(errors: Array<string>): string {\n *   return `Errors: ${errors.join(', ')}`\n * }\n *\n * function onRight(value: number): string {\n *   return `Ok: ${value}`\n * }\n *\n * assert.strictEqual(\n *   pipe(\n *     right(1),\n *     match(onLeft, onRight)\n *   ),\n *   'Ok: 1'\n * )\n * assert.strictEqual(\n *   pipe(\n *     left(['error 1', 'error 2']),\n *     match(onLeft, onRight)\n *   ),\n *   'Errors: error 1, error 2'\n * )\n *\n * @category destructors\n * @since 2.10.0\n */\nexports.match = exports.matchW;\n/**\n * Alias of [`match`](#match).\n *\n * @category destructors\n * @since 2.0.0\n */\nexports.fold = exports.match;\n/**\n * Less strict version of [`getOrElse`](#getorelse).\n *\n * @category destructors\n * @since 2.6.0\n */\nvar getOrElseW = function (onLeft) { return function (ma) {\n    return exports.isLeft(ma) ? onLeft(ma.left) : ma.right;\n}; };\nexports.getOrElseW = getOrElseW;\n/**\n * Returns the wrapped value if it's a `Right` or a default value if is a `Left`.\n *\n * @example\n * import { getOrElse, left, right } from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     right(1),\n *     getOrElse(() => 0)\n *   ),\n *   1\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     left('error'),\n *     getOrElse(() => 0)\n *   ),\n *   0\n * )\n *\n * @category destructors\n * @since 2.0.0\n */\nexports.getOrElse = exports.getOrElseW;\n// -------------------------------------------------------------------------------------\n// interop\n// -------------------------------------------------------------------------------------\n// TODO: make lazy in v3\n/**\n * Takes a default and a nullable value, if the value is not nully, turn it into a `Right`, if the value is nully use\n * the provided default as a `Left`.\n *\n * @example\n * import { fromNullable, left, right } from 'fp-ts/Either'\n *\n * const parse = fromNullable('nully')\n *\n * assert.deepStrictEqual(parse(1), right(1))\n * assert.deepStrictEqual(parse(null), left('nully'))\n *\n * @category interop\n * @since 2.0.0\n */\nvar fromNullable = function (e) { return function (a) {\n    return a == null ? exports.left(e) : exports.right(a);\n}; };\nexports.fromNullable = fromNullable;\n/**\n * Constructs a new `Either` from a function that might throw.\n *\n * See also [`tryCatchK`](#trycatchk).\n *\n * @example\n * import * as E from 'fp-ts/Either'\n *\n * const unsafeHead = <A>(as: ReadonlyArray<A>): A => {\n *   if (as.length > 0) {\n *     return as[0]\n *   } else {\n *     throw new Error('empty array')\n *   }\n * }\n *\n * const head = <A>(as: ReadonlyArray<A>): E.Either<Error, A> =>\n *   E.tryCatch(() => unsafeHead(as), e => (e instanceof Error ? e : new Error('unknown error')))\n *\n * assert.deepStrictEqual(head([]), E.left(new Error('empty array')))\n * assert.deepStrictEqual(head([1, 2, 3]), E.right(1))\n *\n * @category interop\n * @since 2.0.0\n */\nvar tryCatch = function (f, onThrow) {\n    try {\n        return exports.right(f());\n    }\n    catch (e) {\n        return exports.left(onThrow(e));\n    }\n};\nexports.tryCatch = tryCatch;\n/**\n * Converts a function that may throw to one returning a `Either`.\n *\n * @category interop\n * @since 2.10.0\n */\nvar tryCatchK = function (f, onThrow) { return function () {\n    var a = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        a[_i] = arguments[_i];\n    }\n    return exports.tryCatch(function () { return f.apply(void 0, a); }, onThrow);\n}; };\nexports.tryCatchK = tryCatchK;\n/**\n * @category interop\n * @since 2.9.0\n */\nvar fromNullableK = function (e) {\n    var from = exports.fromNullable(e);\n    return function (f) { return function_1.flow(f, from); };\n};\nexports.fromNullableK = fromNullableK;\n/**\n * @category interop\n * @since 2.9.0\n */\nvar chainNullableK = function (e) {\n    var from = exports.fromNullableK(e);\n    return function (f) { return exports.chain(from(f)); };\n};\nexports.chainNullableK = chainNullableK;\n/**\n * @category interop\n * @since 2.10.0\n */\nexports.toUnion = \n/*#__PURE__*/\nexports.foldW(function_1.identity, function_1.identity);\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * @category combinators\n * @since 2.10.0\n */\nvar fromOptionK = function (onNone) {\n    var from = exports.fromOption(onNone);\n    return function (f) { return function_1.flow(f, from); };\n};\nexports.fromOptionK = fromOptionK;\n/**\n * @category combinators\n * @since 2.10.0\n */\nvar chainOptionK = function (onNone) {\n    var from = exports.fromOptionK(onNone);\n    return function (f) { return exports.chain(from(f)); };\n};\nexports.chainOptionK = chainOptionK;\n/**\n * Returns a `Right` if is a `Left` (and vice versa).\n *\n * @category combinators\n * @since 2.0.0\n */\nfunction swap(ma) {\n    return exports.isLeft(ma) ? exports.right(ma.left) : exports.left(ma.right);\n}\nexports.swap = swap;\n/**\n * Less strict version of [`orElse`](#orelse).\n *\n * @category combinators\n * @since 2.10.0\n */\nvar orElseW = function (onLeft) { return function (ma) {\n    return exports.isLeft(ma) ? onLeft(ma.left) : ma;\n}; };\nexports.orElseW = orElseW;\n/**\n * Useful for recovering from errors.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.orElse = exports.orElseW;\n/**\n * Less strict version of [`filterOrElse`](#filterorelse).\n *\n * @category combinators\n * @since 2.9.0\n */\nvar filterOrElseW = function (predicate, onFalse) {\n    return exports.chainW(function (a) { return (predicate(a) ? exports.right(a) : exports.left(onFalse(a))); });\n};\nexports.filterOrElseW = filterOrElseW;\n/**\n * @example\n * import { filterOrElse as filterOrElse, left, right } from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     right(1),\n *     filterOrElse(\n *       (n) => n > 0,\n *       () => 'error'\n *     )\n *   ),\n *   right(1)\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     right(-1),\n *     filterOrElse(\n *       (n) => n > 0,\n *       () => 'error'\n *     )\n *   ),\n *   left('error')\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     left('a'),\n *     filterOrElse(\n *       (n) => n > 0,\n *       () => 'error'\n *     )\n *   ),\n *   left('a')\n * )\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.filterOrElse = exports.filterOrElseW;\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\nvar _map = function (fa, f) { return function_1.pipe(fa, exports.map(f)); };\nvar _ap = function (fab, fa) { return function_1.pipe(fab, exports.ap(fa)); };\n/* istanbul ignore next */\nvar _chain = function (ma, f) { return function_1.pipe(ma, exports.chain(f)); };\n/* istanbul ignore next */\nvar _reduce = function (fa, b, f) { return function_1.pipe(fa, exports.reduce(b, f)); };\n/* istanbul ignore next */\nvar _foldMap = function (M) { return function (fa, f) {\n    var foldMapM = exports.foldMap(M);\n    return function_1.pipe(fa, foldMapM(f));\n}; };\n/* istanbul ignore next */\nvar _reduceRight = function (fa, b, f) { return function_1.pipe(fa, exports.reduceRight(b, f)); };\nvar _traverse = function (F) {\n    var traverseF = exports.traverse(F);\n    return function (ta, f) { return function_1.pipe(ta, traverseF(f)); };\n};\nvar _bimap = function (fa, f, g) { return function_1.pipe(fa, exports.bimap(f, g)); };\nvar _mapLeft = function (fa, f) { return function_1.pipe(fa, exports.mapLeft(f)); };\n/* istanbul ignore next */\nvar _alt = function (fa, that) { return function_1.pipe(fa, exports.alt(that)); };\n/* istanbul ignore next */\nvar _extend = function (wa, f) { return function_1.pipe(wa, exports.extend(f)); };\nvar _chainRec = function (a, f) {\n    return ChainRec_1.tailRec(f(a), function (e) {\n        return exports.isLeft(e) ? exports.right(exports.left(e.left)) : exports.isLeft(e.right) ? exports.left(f(e.right.left)) : exports.right(exports.right(e.right.right));\n    });\n};\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.0.0\n */\nvar map = function (f) { return function (fa) {\n    return exports.isLeft(fa) ? fa : exports.right(f(fa.right));\n}; };\nexports.map = map;\n/**\n * Map a pair of functions over the two type arguments of the bifunctor.\n *\n * @category Bifunctor\n * @since 2.0.0\n */\nvar bimap = function (f, g) { return function (fa) { return (exports.isLeft(fa) ? exports.left(f(fa.left)) : exports.right(g(fa.right))); }; };\nexports.bimap = bimap;\n/**\n * Map a function over the first type argument of a bifunctor.\n *\n * @category Bifunctor\n * @since 2.0.0\n */\nvar mapLeft = function (f) { return function (fa) {\n    return exports.isLeft(fa) ? exports.left(f(fa.left)) : fa;\n}; };\nexports.mapLeft = mapLeft;\n/**\n * Less strict version of [`ap`](#ap).\n *\n * @category Apply\n * @since 2.8.0\n */\nvar apW = function (fa) { return function (fab) { return (exports.isLeft(fab) ? fab : exports.isLeft(fa) ? fa : exports.right(fab.right(fa.right))); }; };\nexports.apW = apW;\n/**\n * Apply a function to an argument under a type constructor.\n *\n * @category Apply\n * @since 2.0.0\n */\nexports.ap = exports.apW;\n/**\n * @category Pointed\n * @since 2.7.0\n */\nexports.of = exports.right;\n/**\n * Less strict version of [`chain`](#chain).\n *\n * @category Monad\n * @since 2.6.0\n */\nvar chainW = function (f) { return function (ma) {\n    return exports.isLeft(ma) ? ma : f(ma.right);\n}; };\nexports.chainW = chainW;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category Monad\n * @since 2.0.0\n */\nexports.chain = exports.chainW;\n/**\n * The `flatten` function is the conventional monad join operator. It is used to remove one level of monadic structure, projecting its bound argument into the outer level.\n *\n * Derivable from `Chain`.\n *\n * @example\n * import * as E from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(E.flatten(E.right(E.right('a'))), E.right('a'))\n * assert.deepStrictEqual(E.flatten(E.right(E.left('e'))), E.left('e'))\n * assert.deepStrictEqual(E.flatten(E.left('e')), E.left('e'))\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.flatten = \n/*#__PURE__*/\nexports.chain(function_1.identity);\n/**\n * Less strict version of [`alt`](#alt).\n *\n * @category Alt\n * @since 2.9.0\n */\nvar altW = function (that) { return function (fa) { return (exports.isLeft(fa) ? that() : fa); }; };\nexports.altW = altW;\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * @category Alt\n * @since 2.0.0\n */\nexports.alt = exports.altW;\n/**\n * @category Extend\n * @since 2.0.0\n */\nvar extend = function (f) { return function (wa) {\n    return exports.isLeft(wa) ? wa : exports.right(f(wa));\n}; };\nexports.extend = extend;\n/**\n * Derivable from `Extend`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.duplicate = \n/*#__PURE__*/\nexports.extend(function_1.identity);\n/**\n * Left-associative fold of a structure.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as E from 'fp-ts/Either'\n *\n * const startWith = 'prefix'\n * const concat = (a: string, b: string) => `${a}:${b}`\n *\n * assert.deepStrictEqual(\n *   pipe(E.right('a'), E.reduce(startWith, concat)),\n *   'prefix:a'\n * )\n *\n * assert.deepStrictEqual(\n *   pipe(E.left('e'), E.reduce(startWith, concat)),\n *   'prefix'\n * )\n *\n * @category Foldable\n * @since 2.0.0\n */\nvar reduce = function (b, f) { return function (fa) {\n    return exports.isLeft(fa) ? b : f(b, fa.right);\n}; };\nexports.reduce = reduce;\n/**\n * Map each element of the structure to a monoid, and combine the results.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as E from 'fp-ts/Either'\n * import * as S from 'fp-ts/string'\n *\n * const yell = (a: string) => `${a}!`\n *\n * assert.deepStrictEqual(\n *   pipe(E.right('a'), E.foldMap(S.Monoid)(yell)),\n *   'a!'\n * )\n *\n * assert.deepStrictEqual(\n *   pipe(E.left('e'), E.foldMap(S.Monoid)(yell)),\n *   S.Monoid.empty\n * )\n *\n * @category Foldable\n * @since 2.0.0\n */\nvar foldMap = function (M) { return function (f) { return function (fa) {\n    return exports.isLeft(fa) ? M.empty : f(fa.right);\n}; }; };\nexports.foldMap = foldMap;\n/**\n * Right-associative fold of a structure.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as E from 'fp-ts/Either'\n *\n * const startWith = 'postfix'\n * const concat = (a: string, b: string) => `${a}:${b}`\n *\n * assert.deepStrictEqual(\n *   pipe(E.right('a'), E.reduceRight(startWith, concat)),\n *   'a:postfix'\n * )\n *\n * assert.deepStrictEqual(\n *   pipe(E.left('e'), E.reduceRight(startWith, concat)),\n *   'postfix'\n * )\n *\n * @category Foldable\n * @since 2.0.0\n */\nvar reduceRight = function (b, f) { return function (fa) {\n    return exports.isLeft(fa) ? b : f(fa.right, b);\n}; };\nexports.reduceRight = reduceRight;\n/**\n * Map each element of a structure to an action, evaluate these actions from left to right, and collect the results.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import * as E from 'fp-ts/Either'\n * import * as O from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(\n *   pipe(E.right(['a']), E.traverse(O.Applicative)(RA.head)),\n *   O.some(E.right('a'))\n *  )\n *\n * assert.deepStrictEqual(\n *   pipe(E.right([]), E.traverse(O.Applicative)(RA.head)),\n *   O.none\n * )\n *\n * @category Traversable\n * @since 2.6.3\n */\nvar traverse = function (F) { return function (f) { return function (ta) { return (exports.isLeft(ta) ? F.of(exports.left(ta.left)) : F.map(f(ta.right), exports.right)); }; }; };\nexports.traverse = traverse;\n/**\n * Evaluate each monadic action in the structure from left to right, and collect the results.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as E from 'fp-ts/Either'\n * import * as O from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(\n *   pipe(E.right(O.some('a')), E.sequence(O.Applicative)),\n *   O.some(E.right('a'))\n *  )\n *\n * assert.deepStrictEqual(\n *   pipe(E.right(O.none), E.sequence(O.Applicative)),\n *   O.none\n * )\n *\n * @category Traversable\n * @since 2.6.3\n */\nvar sequence = function (F) { return function (ma) {\n    return exports.isLeft(ma) ? F.of(exports.left(ma.left)) : F.map(ma.right, exports.right);\n}; };\nexports.sequence = sequence;\n/**\n * @category MonadThrow\n * @since 2.6.3\n */\nexports.throwError = exports.left;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.0.0\n */\nexports.URI = 'Either';\n/**\n * @category instances\n * @since 2.0.0\n */\nfunction getShow(SE, SA) {\n    return {\n        show: function (ma) { return (exports.isLeft(ma) ? \"left(\" + SE.show(ma.left) + \")\" : \"right(\" + SA.show(ma.right) + \")\"); }\n    };\n}\nexports.getShow = getShow;\n/**\n * @category instances\n * @since 2.0.0\n */\nfunction getEq(EL, EA) {\n    return {\n        equals: function (x, y) {\n            return x === y || (exports.isLeft(x) ? exports.isLeft(y) && EL.equals(x.left, y.left) : exports.isRight(y) && EA.equals(x.right, y.right));\n        }\n    };\n}\nexports.getEq = getEq;\n/**\n * Semigroup returning the left-most non-`Left` value. If both operands are `Right`s then the inner values are\n * concatenated using the provided `Semigroup`\n *\n * @example\n * import { getSemigroup, left, right } from 'fp-ts/Either'\n * import { SemigroupSum } from 'fp-ts/number'\n *\n * const S = getSemigroup<string, number>(SemigroupSum)\n * assert.deepStrictEqual(S.concat(left('a'), left('b')), left('a'))\n * assert.deepStrictEqual(S.concat(left('a'), right(2)), right(2))\n * assert.deepStrictEqual(S.concat(right(1), left('b')), right(1))\n * assert.deepStrictEqual(S.concat(right(1), right(2)), right(3))\n *\n * @category instances\n * @since 2.0.0\n */\nfunction getSemigroup(S) {\n    return {\n        concat: function (x, y) { return (exports.isLeft(y) ? x : exports.isLeft(x) ? y : exports.right(S.concat(x.right, y.right))); }\n    };\n}\nexports.getSemigroup = getSemigroup;\n/**\n * Builds a `Compactable` instance for `Either` given `Monoid` for the left side.\n *\n * @category instances\n * @since 2.10.0\n */\nvar getCompactable = function (M) {\n    var empty = exports.left(M.empty);\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        compact: function (ma) { return (exports.isLeft(ma) ? ma : ma.right._tag === 'None' ? empty : exports.right(ma.right.value)); },\n        separate: function (ma) {\n            return exports.isLeft(ma)\n                ? Separated_1.separated(ma, ma)\n                : exports.isLeft(ma.right)\n                    ? Separated_1.separated(exports.right(ma.right.left), empty)\n                    : Separated_1.separated(empty, exports.right(ma.right.right));\n        }\n    };\n};\nexports.getCompactable = getCompactable;\n/**\n * Builds a `Filterable` instance for `Either` given `Monoid` for the left side\n *\n * @category instances\n * @since 2.10.0\n */\nfunction getFilterable(M) {\n    var empty = exports.left(M.empty);\n    var _a = exports.getCompactable(M), compact = _a.compact, separate = _a.separate;\n    var filter = function (ma, predicate) {\n        return exports.isLeft(ma) ? ma : predicate(ma.right) ? ma : empty;\n    };\n    var partition = function (ma, p) {\n        return exports.isLeft(ma)\n            ? Separated_1.separated(ma, ma)\n            : p(ma.right)\n                ? Separated_1.separated(empty, exports.right(ma.right))\n                : Separated_1.separated(exports.right(ma.right), empty);\n    };\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        map: _map,\n        compact: compact,\n        separate: separate,\n        filter: filter,\n        filterMap: function (ma, f) {\n            if (exports.isLeft(ma)) {\n                return ma;\n            }\n            var ob = f(ma.right);\n            return ob._tag === 'None' ? empty : exports.right(ob.value);\n        },\n        partition: partition,\n        partitionMap: function (ma, f) {\n            if (exports.isLeft(ma)) {\n                return Separated_1.separated(ma, ma);\n            }\n            var e = f(ma.right);\n            return exports.isLeft(e) ? Separated_1.separated(exports.right(e.left), empty) : Separated_1.separated(empty, exports.right(e.right));\n        }\n    };\n}\nexports.getFilterable = getFilterable;\n/**\n * Builds `Witherable` instance for `Either` given `Monoid` for the left side\n *\n * @category instances\n * @since 2.0.0\n */\nfunction getWitherable(M) {\n    var F_ = getFilterable(M);\n    var wither = function (F) {\n        var traverseF = _traverse(F);\n        return function (ma, f) { return F.map(traverseF(ma, f), F_.compact); };\n    };\n    var wilt = function (F) {\n        var traverseF = _traverse(F);\n        return function (ma, f) { return F.map(traverseF(ma, f), F_.separate); };\n    };\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        map: _map,\n        compact: F_.compact,\n        separate: F_.separate,\n        filter: F_.filter,\n        filterMap: F_.filterMap,\n        partition: F_.partition,\n        partitionMap: F_.partitionMap,\n        traverse: _traverse,\n        sequence: exports.sequence,\n        reduce: _reduce,\n        foldMap: _foldMap,\n        reduceRight: _reduceRight,\n        wither: wither,\n        wilt: wilt\n    };\n}\nexports.getWitherable = getWitherable;\n/**\n * @category instances\n * @since 2.7.0\n */\nfunction getApplicativeValidation(SE) {\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        map: _map,\n        ap: function (fab, fa) {\n            return exports.isLeft(fab)\n                ? exports.isLeft(fa)\n                    ? exports.left(SE.concat(fab.left, fa.left))\n                    : fab\n                : exports.isLeft(fa)\n                    ? fa\n                    : exports.right(fab.right(fa.right));\n        },\n        of: exports.of\n    };\n}\nexports.getApplicativeValidation = getApplicativeValidation;\n/**\n * @category instances\n * @since 2.7.0\n */\nfunction getAltValidation(SE) {\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        map: _map,\n        alt: function (me, that) {\n            if (exports.isRight(me)) {\n                return me;\n            }\n            var ea = that();\n            return exports.isLeft(ea) ? exports.left(SE.concat(me.left, ea.left)) : ea;\n        }\n    };\n}\nexports.getAltValidation = getAltValidation;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: _map\n};\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\nexports.flap = \n/*#_PURE_*/\nFunctor_1.flap(exports.Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Pointed = {\n    URI: exports.URI,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Apply = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.apFirst = \n/*#__PURE__*/\nApply_1.apFirst(exports.Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.apSecond = \n/*#__PURE__*/\nApply_1.apSecond(exports.Apply);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Applicative = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Chain = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Monad = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: _chain\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.chainFirst = \n/*#__PURE__*/\nChain_1.chainFirst(exports.Chain);\n/**\n * Less strict version of [`chainFirst`](#chainfirst)\n *\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.8.0\n */\nexports.chainFirstW = exports.chainFirst;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Foldable = {\n    URI: exports.URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Traversable = {\n    URI: exports.URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Bifunctor = {\n    URI: exports.URI,\n    bimap: _bimap,\n    mapLeft: _mapLeft\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Alt = {\n    URI: exports.URI,\n    map: _map,\n    alt: _alt\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Extend = {\n    URI: exports.URI,\n    map: _map,\n    extend: _extend\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.ChainRec = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain,\n    chainRec: _chainRec\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.MonadThrow = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: _chain,\n    throwError: exports.throwError\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.FromEither = {\n    URI: exports.URI,\n    fromEither: function_1.identity\n};\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * Default value for the `onError` argument of `tryCatch`\n *\n * @since 2.0.0\n */\nfunction toError(e) {\n    return e instanceof Error ? e : new Error(String(e));\n}\nexports.toError = toError;\n/**\n * @since 2.0.0\n */\nfunction elem(E) {\n    return function (a, ma) { return (exports.isLeft(ma) ? false : E.equals(a, ma.right)); };\n}\nexports.elem = elem;\n/**\n * Returns `false` if `Left` or returns the result of the application of the given predicate to the `Right` value.\n *\n * @example\n * import { exists, left, right } from 'fp-ts/Either'\n *\n * const gt2 = exists((n: number) => n > 2)\n *\n * assert.strictEqual(gt2(left('a')), false)\n * assert.strictEqual(gt2(right(1)), false)\n * assert.strictEqual(gt2(right(3)), true)\n *\n * @since 2.0.0\n */\nfunction exists(predicate) {\n    return function (ma) { return (exports.isLeft(ma) ? false : predicate(ma.right)); };\n}\nexports.exists = exists;\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.9.0\n */\nexports.Do = \n/*#__PURE__*/\nexports.of({});\n/**\n * @since 2.8.0\n */\nexports.bindTo = \n/*#__PURE__*/\nFunctor_1.bindTo(exports.Functor);\n/**\n * @since 2.8.0\n */\nexports.bind = \n/*#__PURE__*/\nChain_1.bind(exports.Chain);\n/**\n * @since 2.8.0\n */\nexports.bindW = exports.bind;\n// -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.8.0\n */\nexports.apS = \n/*#__PURE__*/\nApply_1.apS(exports.Apply);\n/**\n * @since 2.8.0\n */\nexports.apSW = exports.apS;\n// -------------------------------------------------------------------------------------\n// array utils\n// -------------------------------------------------------------------------------------\n/**\n * Equivalent to `ReadonlyArray#traverseWithIndex(Applicative)`.\n *\n * @since 2.9.0\n */\nvar traverseArrayWithIndex = function (f) { return function (as) {\n    var out = [];\n    for (var i = 0; i < as.length; i++) {\n        var e = f(i, as[i]);\n        if (exports.isLeft(e)) {\n            return e;\n        }\n        out.push(e.right);\n    }\n    return exports.right(out);\n}; };\nexports.traverseArrayWithIndex = traverseArrayWithIndex;\n/**\n * Equivalent to `ReadonlyArray#traverse(Applicative)`.\n *\n * @since 2.9.0\n */\nvar traverseArray = function (f) { return exports.traverseArrayWithIndex(function (_, a) { return f(a); }); };\nexports.traverseArray = traverseArray;\n/**\n * Equivalent to `ReadonlyArray#sequence(Applicative)`.\n *\n * @since 2.9.0\n */\nexports.sequenceArray = \n/*#__PURE__*/\nexports.traverseArray(function_1.identity);\n/**\n * Use [`parse`](./Json.ts.html#parse) instead.\n *\n * @category constructors\n * @since 2.0.0\n * @deprecated\n */\n// tslint:disable-next-line: deprecation\nfunction parseJSON(s, onError) {\n    return exports.tryCatch(function () { return JSON.parse(s); }, onError);\n}\nexports.parseJSON = parseJSON;\n/**\n * Use [`stringify`](./Json.ts.html#stringify) instead.\n *\n * @category constructors\n * @since 2.0.0\n * @deprecated\n */\nvar stringifyJSON = function (u, onError) {\n    return exports.tryCatch(function () {\n        var s = JSON.stringify(u);\n        if (typeof s !== 'string') {\n            throw new Error('Converting unsupported structure to JSON');\n        }\n        return s;\n    }, onError);\n};\nexports.stringifyJSON = stringifyJSON;\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.either = {\n    URI: exports.URI,\n    map: _map,\n    of: exports.of,\n    ap: _ap,\n    chain: _chain,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    bimap: _bimap,\n    mapLeft: _mapLeft,\n    alt: _alt,\n    extend: _extend,\n    chainRec: _chainRec,\n    throwError: exports.throwError\n};\n/**\n * Use [`getApplySemigroup`](./Apply.ts.html#getApplySemigroup) instead.\n *\n * Semigroup returning the left-most `Left` value. If both operands are `Right`s then the inner values\n * are concatenated using the provided `Semigroup`\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.getApplySemigroup = \n/*#__PURE__*/\nApply_1.getApplySemigroup(exports.Apply);\n/**\n * Use [`getApplicativeMonoid`](./Applicative.ts.html#getApplicativeMonoid) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.getApplyMonoid = \n/*#__PURE__*/\nApplicative_1.getApplicativeMonoid(exports.Applicative);\n/**\n * Use [`getApplySemigroup`](./Apply.ts.html#getApplySemigroup) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nvar getValidationSemigroup = function (SE, SA) {\n    return Apply_1.getApplySemigroup(getApplicativeValidation(SE))(SA);\n};\nexports.getValidationSemigroup = getValidationSemigroup;\n/**\n * Use [`getApplicativeMonoid`](./Applicative.ts.html#getApplicativeMonoid) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nvar getValidationMonoid = function (SE, MA) {\n    return Applicative_1.getApplicativeMonoid(getApplicativeValidation(SE))(MA);\n};\nexports.getValidationMonoid = getValidationMonoid;\n/**\n * Use [`getApplicativeValidation`](#getapplicativevalidation) and [`getAltValidation`](#getaltvalidation) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nfunction getValidation(SE) {\n    var ap = getApplicativeValidation(SE).ap;\n    var alt = getAltValidation(SE).alt;\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        map: _map,\n        of: exports.of,\n        chain: _chain,\n        bimap: _bimap,\n        mapLeft: _mapLeft,\n        reduce: _reduce,\n        foldMap: _foldMap,\n        reduceRight: _reduceRight,\n        extend: _extend,\n        traverse: _traverse,\n        sequence: exports.sequence,\n        chainRec: _chainRec,\n        throwError: exports.throwError,\n        ap: ap,\n        alt: alt\n    };\n}\nexports.getValidation = getValidation;\n"]},"metadata":{},"sourceType":"script"}