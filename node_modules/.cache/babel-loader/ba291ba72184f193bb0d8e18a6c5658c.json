{"ast":null,"code":"import _regeneratorRuntime from \"/Users/frankenstein/projects/minter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _classCallCheck from \"/Users/frankenstein/projects/minter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/frankenstein/projects/minter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nexport var BlockExplorer = /*#__PURE__*/function () {\n  function BlockExplorer(rpcUrls) {\n    _classCallCheck(this, BlockExplorer);\n\n    this.rpcUrls = rpcUrls;\n  }\n\n  _createClass(BlockExplorer, [{\n    key: \"getLinkForNetwork\",\n    value: function getLinkForNetwork(network) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", this.rpcUrls[network.type]);\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n    }\n  }]);\n\n  return BlockExplorer;\n}();","map":{"version":3,"sources":["../../../src/utils/block-explorer.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,WAAsB,aAAtB;AACE,yBAA4B,OAA5B,EAAqE;AAAA;;AAAzC,SAAA,OAAA,GAAA,OAAA;AAA6C;;AAD3E;AAAA;AAAA,WAGkB,2BAAkB,OAAlB,EAAkC;;;;;;iDACzC,KAAK,OAAL,CAAa,OAAO,CAAC,IAArB,C;;;;;;;;;AACR;AALH;;AAAA;AAAA","sourceRoot":"","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nexport class BlockExplorer {\n    constructor(rpcUrls) {\n        this.rpcUrls = rpcUrls;\n    }\n    getLinkForNetwork(network) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.rpcUrls[network.type];\n        });\n    }\n}\n//# sourceMappingURL=block-explorer.js.map"]},"metadata":{},"sourceType":"module"}