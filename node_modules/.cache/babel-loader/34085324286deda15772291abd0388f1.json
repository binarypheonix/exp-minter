{"ast":null,"code":"import axios from 'axios';\nexport async function uploadIPFSJSON(api, data) {\n  return axios.post(`${api}/ipfs-json-upload`, data);\n}\nexport async function uploadIPFSFile(api, file) {\n  const formData = new FormData();\n  formData.append('file', file);\n  return axios.post(`${api}/ipfs-file-upload`, formData);\n}\nexport async function uploadIPFSImageWithThumbnail(api, file) {\n  const formData = new FormData();\n  formData.append('file', file);\n  return axios.post(`${api}/ipfs-image-with-thumbnail-upload`, formData);\n} // URI Utils\n\nexport function isIpfsUri(uri) {\n  return /^ipfs:\\/\\/.+/.test(uri);\n}\nexport function ipfsUriToCid(uri) {\n  const baseRegex = /^ipfs:\\/\\//;\n  const ipfsRegex = new RegExp(baseRegex.source + '.+');\n\n  if (ipfsRegex.test(uri)) {\n    return uri.replace(baseRegex, '');\n  }\n\n  return null;\n}\nexport function ipfsUriToGatewayUrl(config, uri) {\n  const cid = ipfsUriToCid(uri);\n  return cid ? `${config.ipfsGateway}/ipfs/${cid}` : uri;\n}\nexport function uriToCid(uri) {\n  const ipfsUriCid = ipfsUriToCid(uri);\n\n  if (ipfsUriCid) {\n    return ipfsUriCid;\n  }\n\n  const baseRegex = /^https:\\/\\/.*\\/ipfs\\//;\n  const httpRegex = new RegExp(baseRegex.source + '.+');\n\n  if (httpRegex.test(uri)) {\n    return uri.replace(baseRegex, '');\n  }\n\n  return null;\n}","map":{"version":3,"sources":["/Users/frankenstein/projects/minter/src/lib/util/ipfs.ts"],"names":["axios","uploadIPFSJSON","api","data","post","uploadIPFSFile","file","formData","FormData","append","uploadIPFSImageWithThumbnail","isIpfsUri","uri","test","ipfsUriToCid","baseRegex","ipfsRegex","RegExp","source","replace","ipfsUriToGatewayUrl","config","cid","ipfsGateway","uriToCid","ipfsUriCid","httpRegex"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAcA,OAAO,eAAeC,cAAf,CAA8BC,GAA9B,EAA2CC,IAA3C,EAAsD;AAC3D,SAAOH,KAAK,CAACI,IAAN,CAA0B,GAAEF,GAAI,mBAAhC,EAAoDC,IAApD,CAAP;AACD;AAED,OAAO,eAAeE,cAAf,CAA8BH,GAA9B,EAA2CI,IAA3C,EAAuD;AAC5D,QAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,EAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBH,IAAxB;AACA,SAAON,KAAK,CAACI,IAAN,CAA0B,GAAEF,GAAI,mBAAhC,EAAoDK,QAApD,CAAP;AACD;AAED,OAAO,eAAeG,4BAAf,CAA4CR,GAA5C,EAAyDI,IAAzD,EAAqE;AAC1E,QAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,EAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBH,IAAxB;AACA,SAAON,KAAK,CAACI,IAAN,CACJ,GAAEF,GAAI,mCADF,EAELK,QAFK,CAAP;AAID,C,CAED;;AAEA,OAAO,SAASI,SAAT,CAAmBC,GAAnB,EAAgC;AACrC,SAAO,eAAeC,IAAf,CAAoBD,GAApB,CAAP;AACD;AAED,OAAO,SAASE,YAAT,CAAsBF,GAAtB,EAAmC;AACxC,QAAMG,SAAS,GAAG,YAAlB;AACA,QAAMC,SAAS,GAAG,IAAIC,MAAJ,CAAWF,SAAS,CAACG,MAAV,GAAmB,IAA9B,CAAlB;;AACA,MAAIF,SAAS,CAACH,IAAV,CAAeD,GAAf,CAAJ,EAAyB;AACvB,WAAOA,GAAG,CAACO,OAAJ,CAAYJ,SAAZ,EAAuB,EAAvB,CAAP;AACD;;AACD,SAAO,IAAP;AACD;AAGD,OAAO,SAASK,mBAAT,CAA6BC,MAA7B,EAAwDT,GAAxD,EAAqE;AAC1E,QAAMU,GAAG,GAAGR,YAAY,CAACF,GAAD,CAAxB;AACA,SAAOU,GAAG,GAAI,GAAED,MAAM,CAACE,WAAY,SAAQD,GAAI,EAArC,GAAyCV,GAAnD;AACD;AAED,OAAO,SAASY,QAAT,CAAkBZ,GAAlB,EAA+B;AACpC,QAAMa,UAAU,GAAGX,YAAY,CAACF,GAAD,CAA/B;;AACA,MAAIa,UAAJ,EAAgB;AACd,WAAOA,UAAP;AACD;;AACD,QAAMV,SAAS,GAAG,uBAAlB;AACA,QAAMW,SAAS,GAAG,IAAIT,MAAJ,CAAWF,SAAS,CAACG,MAAV,GAAmB,IAA9B,CAAlB;;AACA,MAAIQ,SAAS,CAACb,IAAV,CAAeD,GAAf,CAAJ,EAAyB;AACvB,WAAOA,GAAG,CAACO,OAAJ,CAAYJ,SAAZ,EAAuB,EAAvB,CAAP;AACD;;AACD,SAAO,IAAP;AACD","sourcesContent":["import axios from 'axios';\n\nexport interface IpfsContent {\n  cid: string;\n  size: number;\n  ipfsUri: string;\n  url: string;\n  publicGatewayUrl: string;\n}\n\nexport interface IpfsResponse extends IpfsContent {\n  thumbnail: IpfsContent;\n}\n\nexport async function uploadIPFSJSON(api: string, data: any) {\n  return axios.post<IpfsResponse>(`${api}/ipfs-json-upload`, data);\n}\n\nexport async function uploadIPFSFile(api: string, file: File) {\n  const formData = new FormData();\n  formData.append('file', file);\n  return axios.post<IpfsResponse>(`${api}/ipfs-file-upload`, formData);\n}\n\nexport async function uploadIPFSImageWithThumbnail(api: string, file: File) {\n  const formData = new FormData();\n  formData.append('file', file);\n  return axios.post<IpfsResponse>(\n    `${api}/ipfs-image-with-thumbnail-upload`,\n    formData\n  );\n}\n\n// URI Utils\n\nexport function isIpfsUri(uri: string) {\n  return /^ipfs:\\/\\/.+/.test(uri);\n}\n\nexport function ipfsUriToCid(uri: string) {\n  const baseRegex = /^ipfs:\\/\\//;\n  const ipfsRegex = new RegExp(baseRegex.source + '.+');\n  if (ipfsRegex.test(uri)) {\n    return uri.replace(baseRegex, '');\n  }\n  return null;\n}\n\nexport type IpfsGatewayConfig = { ipfsGateway: string };\nexport function ipfsUriToGatewayUrl(config: IpfsGatewayConfig, uri: string) {\n  const cid = ipfsUriToCid(uri);\n  return cid ? `${config.ipfsGateway}/ipfs/${cid}` : uri;\n}\n\nexport function uriToCid(uri: string) {\n  const ipfsUriCid = ipfsUriToCid(uri);\n  if (ipfsUriCid) {\n    return ipfsUriCid;\n  }\n  const baseRegex = /^https:\\/\\/.*\\/ipfs\\//;\n  const httpRegex = new RegExp(baseRegex.source + '.+');\n  if (httpRegex.test(uri)) {\n    return uri.replace(baseRegex, '');\n  }\n  return null;\n}\n"]},"metadata":{},"sourceType":"module"}