{"ast":null,"code":"var _jsxFileName = \"/Users/frankenstein/projects/minter/src/components/Collections/Catalog/index.tsx\";\nimport React, { useEffect } from 'react';\nimport { Flex, Heading, Text, Link, Image } from '@chakra-ui/react';\nimport Sidebar from './Sidebar';\nimport CollectionDisplay from './CollectionDisplay';\nimport { useSelector, useDispatch } from '../../../reducer';\nimport { getWalletAssetContractsQuery, getNftAssetContractQuery } from '../../../reducer/async/queries';\nimport { selectCollection } from '../../../reducer/slices/collections';\nimport { connectWallet } from '../../../reducer/async/wallet';\nimport logo from \"../../common/assets/splash-logo.svg\";\nimport { MinterButton } from '../../common';\nexport default function Catalog() {\n  const system = useSelector(s => s.system);\n  const collections = useSelector(s => s.collections);\n  const dispatch = useDispatch();\n  const globalCollection = collections.collections[collections.globalCollection];\n  useEffect(() => {\n    if (!globalCollection) {\n      dispatch(getNftAssetContractQuery(collections.globalCollection));\n      return;\n    }\n\n    if (collections.selectedCollection === null) {\n      dispatch(selectCollection(collections.globalCollection));\n      return;\n    }\n  }, [globalCollection, collections.selectedCollection, collections.globalCollection, dispatch]);\n  useEffect(() => {\n    if (system.status === 'WalletConnected') {\n      dispatch(getWalletAssetContractsQuery());\n    }\n  }, [system.status, dispatch]);\n  const selectedCollection = collections.selectedCollection;\n\n  if (system.walletReconnectAttempted && system.status !== 'WalletConnected') {\n    return /*#__PURE__*/React.createElement(Flex, {\n      align: \"center\",\n      justifyContent: \"space-between\",\n      w: \"100%\",\n      flex: \"1\",\n      flexDir: \"column\",\n      bg: \"brand.background\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Flex, {\n      flexDir: \"column\",\n      align: \"center\",\n      maxW: \"600px\",\n      pt: 20,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Image, {\n      src: logo,\n      maxW: \"200px\",\n      pb: 40,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Heading, {\n      color: \"white\",\n      size: \"xl\",\n      pb: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }, \"Create NFTs on Tezos\"), /*#__PURE__*/React.createElement(Flex, {\n      minW: \"400px\",\n      justify: \"center\",\n      pb: 20,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(MinterButton, {\n      variant: \"secondaryActionLined\",\n      onClick: e => {\n        e.preventDefault();\n        dispatch(connectWallet());\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, \"Connect your wallet\"))), /*#__PURE__*/React.createElement(Flex, {\n      width: \"100%\",\n      bg: \"brand.darkGray\",\n      color: \"brand.lightGray\",\n      fontFamily: \"mono\",\n      paddingX: 10,\n      paddingY: 4,\n      justifyContent: \"space-between\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      fontSize: \"xs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }, \"OpenMinter Version v\", process.env.REACT_APP_VERSION), /*#__PURE__*/React.createElement(Flex, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      fontSize: \"xs\",\n      textDecor: \"underline\",\n      href: \"https://github.com/tqtezos/minter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, \"GitHub\"))));\n  }\n\n  return /*#__PURE__*/React.createElement(Flex, {\n    flex: \"1\",\n    w: \"100%\",\n    minHeight: \"0\",\n    flexDir: {\n      base: 'column',\n      md: 'row'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Flex, {\n    w: \"250px\",\n    h: \"100%\",\n    flexDir: \"column\",\n    overflowY: \"scroll\",\n    display: {\n      base: 'none',\n      md: 'flex'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Sidebar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(CollectionDisplay, {\n    address: selectedCollection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/frankenstein/projects/minter/src/components/Collections/Catalog/index.tsx"],"names":["React","useEffect","Flex","Heading","Text","Link","Image","Sidebar","CollectionDisplay","useSelector","useDispatch","getWalletAssetContractsQuery","getNftAssetContractQuery","selectCollection","connectWallet","MinterButton","Catalog","system","s","collections","dispatch","globalCollection","selectedCollection","status","walletReconnectAttempted","logo","e","preventDefault","process","env","REACT_APP_VERSION","base","md"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { Flex, Heading, Text, Link, Image } from '@chakra-ui/react';\nimport Sidebar from './Sidebar';\nimport CollectionDisplay from './CollectionDisplay';\nimport { useSelector, useDispatch } from '../../../reducer';\nimport {\n  getWalletAssetContractsQuery,\n  getNftAssetContractQuery\n} from '../../../reducer/async/queries';\nimport { selectCollection } from '../../../reducer/slices/collections';\nimport { connectWallet } from '../../../reducer/async/wallet';\nimport logo from '../../common/assets/splash-logo.svg';\nimport { MinterButton } from '../../common';\n\nexport default function Catalog() {\n  const system = useSelector(s => s.system);\n  const collections = useSelector(s => s.collections);\n  const dispatch = useDispatch();\n\n  const globalCollection =\n    collections.collections[collections.globalCollection];\n\n  useEffect(() => {\n    if (!globalCollection) {\n      dispatch(getNftAssetContractQuery(collections.globalCollection));\n      return;\n    }\n    if (collections.selectedCollection === null) {\n      dispatch(selectCollection(collections.globalCollection));\n      return;\n    }\n  }, [\n    globalCollection,\n    collections.selectedCollection,\n    collections.globalCollection,\n    dispatch\n  ]);\n\n  useEffect(() => {\n    if (system.status === 'WalletConnected') {\n      dispatch(getWalletAssetContractsQuery());\n    }\n  }, [system.status, dispatch]);\n\n  const selectedCollection = collections.selectedCollection;\n  if (system.walletReconnectAttempted && system.status !== 'WalletConnected') {\n    return (\n      <Flex\n        align=\"center\"\n        justifyContent=\"space-between\"\n        w=\"100%\"\n        flex=\"1\"\n        flexDir=\"column\"\n        bg=\"brand.background\"\n      >\n        <Flex flexDir=\"column\" align=\"center\" maxW=\"600px\" pt={20}>\n          <Image src={logo} maxW=\"200px\" pb={40} />\n          <Heading color=\"white\" size=\"xl\" pb={8}>\n            Create NFTs on Tezos\n          </Heading>\n          <Flex minW=\"400px\" justify=\"center\" pb={20}>\n            <MinterButton\n              variant=\"secondaryActionLined\"\n              onClick={e => {\n                e.preventDefault();\n                dispatch(connectWallet());\n              }}\n            >\n              Connect your wallet\n            </MinterButton>\n          </Flex>\n        </Flex>\n        <Flex\n          width=\"100%\"\n          bg=\"brand.darkGray\"\n          color=\"brand.lightGray\"\n          fontFamily=\"mono\"\n          paddingX={10}\n          paddingY={4}\n          justifyContent=\"space-between\"\n        >\n          <Text fontSize=\"xs\">\n            OpenMinter Version v{process.env.REACT_APP_VERSION}\n          </Text>\n          <Flex>\n            <Link\n              fontSize=\"xs\"\n              textDecor=\"underline\"\n              href=\"https://github.com/tqtezos/minter\"\n            >\n              GitHub\n            </Link>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n\n  return (\n    <Flex\n      flex=\"1\"\n      w=\"100%\"\n      minHeight=\"0\"\n      flexDir={{\n        base: 'column',\n        md: 'row'\n      }}\n    >\n      <Flex\n        w=\"250px\"\n        h=\"100%\"\n        flexDir=\"column\"\n        overflowY=\"scroll\"\n        display={{\n          base: 'none',\n          md: 'flex'\n        }}\n      >\n        <Sidebar />\n      </Flex>\n      <CollectionDisplay address={selectedCollection} />\n    </Flex>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}