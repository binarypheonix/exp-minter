{"ast":null,"code":"import axios from 'axios';\n\nfunction mkQueryParams(params) {\n  const finalParams = {\n    limit: '10000',\n    ...params\n  };\n  return new URLSearchParams(finalParams).toString();\n}\n\nexport async function getBigMapKeys(config, id, params) {\n  const uri = `${config.tzkt.api}/v1/bigmaps/${id}/keys?${mkQueryParams(params)}`;\n  const response = await axios.get(uri);\n  return response.data;\n}\nexport async function getBigMapUpdates(config, params) {\n  const uri = `${config.tzkt.api}/v1/bigmaps/updates?${mkQueryParams(params)}`;\n  const response = await axios.get(uri);\n  return response.data;\n}\nexport async function getContracts(config, params) {\n  const uri = `${config.tzkt.api}/v1/contracts?${mkQueryParams(params)}`;\n  const response = await axios.get(uri);\n  return response.data;\n}\nexport async function getContract(config, address, params) {\n  const uri = `${config.tzkt.api}/v1/contracts/${address}?${mkQueryParams(params)}`;\n  const response = await axios.get(uri);\n  return response.data;\n}\nexport async function getContractBigMapKeys(config, address, name, params) {\n  const uri = `${config.tzkt.api}/v1/contracts/${address}/bigmaps/${name}/keys?${mkQueryParams(params)}`;\n  const response = await axios.get(uri);\n  return response.data;\n}\nexport async function getContractStorage(config, address, params) {\n  const uri = `${config.tzkt.api}/v1/contracts/${address}/storage?${mkQueryParams(params)}`;\n  const response = await axios.get(uri);\n  return response.data;\n}\nexport class TzKt {\n  constructor(config) {\n    this.config = void 0;\n    this.config = config;\n  }\n\n  getBigMapKeys(id, params) {\n    return getBigMapKeys(this.config, id, params);\n  }\n\n  getBigMapUpdates(params) {\n    return getBigMapUpdates(this.config, params);\n  }\n\n  getContracts(params) {\n    return getContracts(this.config, params);\n  }\n\n  getContract(address, params) {\n    return getContract(this.config, address, params);\n  }\n\n  getContractBigMapKeys(address, name, params) {\n    return getContractBigMapKeys(this.config, address, name, params);\n  }\n\n  getContractStorage(address, params) {\n    return getContractStorage(this.config, address, params);\n  }\n\n}","map":{"version":3,"sources":["/Users/frankenstein/projects/minter/src/lib/service/tzkt.ts"],"names":["axios","mkQueryParams","params","finalParams","limit","URLSearchParams","toString","getBigMapKeys","config","id","uri","tzkt","api","response","get","data","getBigMapUpdates","getContracts","getContract","address","getContractBigMapKeys","name","getContractStorage","TzKt","constructor"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { Config } from '../system';\n\nexport type Params = Record<string, string>;\n\nfunction mkQueryParams(params: Params | undefined) {\n  const finalParams = { limit: '10000', ...params };\n  return new URLSearchParams(finalParams).toString();\n}\n\nexport async function getBigMapKeys(\n  config: Config,\n  id: number,\n  params?: Params\n) {\n  const uri = `${config.tzkt.api}/v1/bigmaps/${id}/keys?${mkQueryParams(\n    params\n  )}`;\n  const response = await axios.get(uri);\n  return response.data;\n}\n\nexport async function getBigMapUpdates(config: Config, params?: Params) {\n  const uri = `${config.tzkt.api}/v1/bigmaps/updates?${mkQueryParams(params)}`;\n  const response = await axios.get(uri);\n  return response.data;\n}\n\nexport async function getContracts(config: Config, params?: Params) {\n  const uri = `${config.tzkt.api}/v1/contracts?${mkQueryParams(params)}`;\n  const response = await axios.get(uri);\n  return response.data;\n}\n\nexport async function getContract(\n  config: Config,\n  address: string,\n  params?: Params\n) {\n  const uri = `${config.tzkt.api}/v1/contracts/${address}?${mkQueryParams(\n    params\n  )}`;\n  const response = await axios.get(uri);\n  return response.data;\n}\n\nexport async function getContractBigMapKeys(\n  config: Config,\n  address: string,\n  name: string,\n  params?: Params\n) {\n  const uri = `${\n    config.tzkt.api\n  }/v1/contracts/${address}/bigmaps/${name}/keys?${mkQueryParams(params)}`;\n  const response = await axios.get(uri);\n  return response.data;\n}\n\nexport async function getContractStorage(\n  config: Config,\n  address: string,\n  params?: Params\n) {\n  const uri = `${\n    config.tzkt.api\n  }/v1/contracts/${address}/storage?${mkQueryParams(params)}`;\n  const response = await axios.get(uri);\n  return response.data;\n}\n\nexport class TzKt {\n  config: Config;\n\n  constructor(config: Config) {\n    this.config = config;\n  }\n\n  getBigMapKeys(id: number, params?: Params) {\n    return getBigMapKeys(this.config, id, params);\n  }\n\n  getBigMapUpdates(params?: Params) {\n    return getBigMapUpdates(this.config, params);\n  }\n\n  getContracts(params?: Params) {\n    return getContracts(this.config, params);\n  }\n\n  getContract(address: string, params?: Params) {\n    return getContract(this.config, address, params);\n  }\n\n  getContractBigMapKeys(address: string, name: string, params?: Params) {\n    return getContractBigMapKeys(this.config, address, name, params);\n  }\n\n  getContractStorage(address: string, params?: Params) {\n    return getContractStorage(this.config, address, params);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}