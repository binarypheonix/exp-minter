{"ast":null,"code":"var _jsxFileName = \"/Users/frankenstein/projects/minter/src/components/Creator/index.tsx\";\nimport React, { useEffect } from 'react';\nimport { Flex } from '@chakra-ui/react';\nimport CreatorDisplay from './CreatorDisplay';\nimport { useSelector, useDispatch } from '../../reducer';\nimport { getMarketplaceNftsQuery } from '../../reducer/async/queries';\nexport default function Creator({\n  minter\n}) {\n  const system = useSelector(s => s.system);\n  const collections = useSelector(s => s.collections);\n  const {\n    marketplace\n  } = useSelector(s => s.marketplace);\n  const dispatch = useDispatch(); // Don't get assets from other contracts for now\n  // useEffect(() => {\n  //     dispatch(getAssetContractsQuery(minter));\n  // }, [system.status, dispatch, minter, collections.globalCollection]);\n\n  useEffect(() => {\n    dispatch(getMarketplaceNftsQuery(marketplace.address));\n  }, [marketplace.address, dispatch]);\n  const creatorsCollections = {};\n\n  if (!!marketplace.tokens) {\n    marketplace.tokens.filter(token => {\n      var _token$token;\n\n      return (token === null || token === void 0 ? void 0 : (_token$token = token.token) === null || _token$token === void 0 ? void 0 : _token$token.owner) === (minter !== null && minter !== void 0 ? minter : system.tzPublicKey);\n    }).map(token => {\n      var _token$tokenSale, _token$tokenSale$valu, _token$tokenSale$valu2, _token$tokenSale$valu3, _token$tokenSale2, _token$tokenSale2$val, _token$tokenSale2$val2, _token$tokenSale2$val3;\n\n      creatorsCollections[token === null || token === void 0 ? void 0 : (_token$tokenSale = token.tokenSale) === null || _token$tokenSale === void 0 ? void 0 : (_token$tokenSale$valu = _token$tokenSale.value) === null || _token$tokenSale$valu === void 0 ? void 0 : (_token$tokenSale$valu2 = _token$tokenSale$valu.sale_data) === null || _token$tokenSale$valu2 === void 0 ? void 0 : (_token$tokenSale$valu3 = _token$tokenSale$valu2.sale_token) === null || _token$tokenSale$valu3 === void 0 ? void 0 : _token$tokenSale$valu3.fa2_address] = collections.collections[token === null || token === void 0 ? void 0 : (_token$tokenSale2 = token.tokenSale) === null || _token$tokenSale2 === void 0 ? void 0 : (_token$tokenSale2$val = _token$tokenSale2.value) === null || _token$tokenSale2$val === void 0 ? void 0 : (_token$tokenSale2$val2 = _token$tokenSale2$val.sale_data) === null || _token$tokenSale2$val2 === void 0 ? void 0 : (_token$tokenSale2$val3 = _token$tokenSale2$val2.sale_token) === null || _token$tokenSale2$val3 === void 0 ? void 0 : _token$tokenSale2$val3.fa2_address];\n      return null;\n    });\n  }\n\n  Object.keys(collections.collections).filter(key => collections.collections[key].creator.address === (minter !== null && minter !== void 0 ? minter : system.tzPublicKey)).map(addr => {\n    creatorsCollections[addr] = collections.collections[addr];\n    return null;\n  });\n  return /*#__PURE__*/React.createElement(Flex, {\n    flex: \"1\",\n    w: \"100%\",\n    minHeight: \"0\",\n    flexDir: {\n      base: 'column',\n      md: 'row'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CreatorDisplay, {\n    minter: minter,\n    collections: creatorsCollections,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/frankenstein/projects/minter/src/components/Creator/index.tsx"],"names":["React","useEffect","Flex","CreatorDisplay","useSelector","useDispatch","getMarketplaceNftsQuery","Creator","minter","system","s","collections","marketplace","dispatch","address","creatorsCollections","tokens","filter","token","owner","tzPublicKey","map","tokenSale","value","sale_data","sale_token","fa2_address","Object","keys","key","creator","addr","base","md"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,eAAzC;AACA,SACEC,uBADF,QAEO,6BAFP;AAKA,eAAe,SAASC,OAAT,CAAiB;AAAEC,EAAAA;AAAF,CAAjB,EAAiD;AAC9D,QAAMC,MAAM,GAAGL,WAAW,CAACM,CAAC,IAAIA,CAAC,CAACD,MAAR,CAA1B;AACA,QAAME,WAAW,GAAGP,WAAW,CAACM,CAAC,IAAIA,CAAC,CAACC,WAAR,CAA/B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAkBR,WAAW,CAACM,CAAC,IAAIA,CAAC,CAACE,WAAR,CAAnC;AACA,QAAMC,QAAQ,GAAGR,WAAW,EAA5B,CAJ8D,CAM9D;AACA;AACA;AACA;;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,QAAQ,CAACP,uBAAuB,CAACM,WAAW,CAACE,OAAb,CAAxB,CAAR;AACD,GAFQ,EAEN,CAACF,WAAW,CAACE,OAAb,EAAsBD,QAAtB,CAFM,CAAT;AAIA,QAAME,mBAAmB,GAAG,EAA5B;;AAEA,MAAG,CAAC,CAACH,WAAW,CAACI,MAAjB,EAAyB;AACvBJ,IAAAA,WAAW,CAACI,MAAZ,CACCC,MADD,CAEEC,KAAK;AAAA;;AAAA,aACH,CAAAA,KAAK,SAAL,IAAAA,KAAK,WAAL,4BAAAA,KAAK,CAAEA,KAAP,8DAAcC,KAAd,OAAyBX,MAAzB,aAAyBA,MAAzB,cAAyBA,MAAzB,GAAmCC,MAAM,CAACW,WAA1C,CADG;AAAA,KAFP,EAKCC,GALD,CAKKH,KAAK,IAAI;AAAA;;AACZH,MAAAA,mBAAmB,CAACG,KAAD,aAACA,KAAD,2CAACA,KAAK,CAAEI,SAAR,8EAAC,iBAAkBC,KAAnB,oFAAC,sBAAyBC,SAA1B,qFAAC,uBAAoCC,UAArC,2DAAC,uBAAgDC,WAAjD,CAAnB,GAAmFf,WAAW,CAACA,WAAZ,CAAwBO,KAAxB,aAAwBA,KAAxB,4CAAwBA,KAAK,CAAEI,SAA/B,+EAAwB,kBAAkBC,KAA1C,oFAAwB,sBAAyBC,SAAjD,qFAAwB,uBAAoCC,UAA5D,2DAAwB,uBAAgDC,WAAxE,CAAnF;AACA,aAAO,IAAP;AACD,KARD;AASD;;AACDC,EAAAA,MAAM,CAACC,IAAP,CAAYjB,WAAW,CAACA,WAAxB,EACGM,MADH,CAEIY,GAAG,IACDlB,WAAW,CAACA,WAAZ,CAAwBkB,GAAxB,EAA6BC,OAA7B,CAAqChB,OAArC,MACCN,MADD,aACCA,MADD,cACCA,MADD,GACWC,MAAM,CAACW,WADlB,CAHN,EAMGC,GANH,CAMOU,IAAI,IAAI;AACXhB,IAAAA,mBAAmB,CAACgB,IAAD,CAAnB,GAA4BpB,WAAW,CAACA,WAAZ,CAAwBoB,IAAxB,CAA5B;AACA,WAAO,IAAP;AACD,GATH;AAWA,sBACE,oBAAC,IAAD;AACE,IAAA,IAAI,EAAC,GADP;AAEE,IAAA,CAAC,EAAC,MAFJ;AAGE,IAAA,SAAS,EAAC,GAHZ;AAIE,IAAA,OAAO,EAAE;AACPC,MAAAA,IAAI,EAAE,QADC;AAEPC,MAAAA,EAAE,EAAE;AAFG,KAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBASE,oBAAC,cAAD;AAAgB,IAAA,MAAM,EAAEzB,MAAxB;AAAgC,IAAA,WAAW,EAAEO,mBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF;AAaD","sourcesContent":["import React, { useEffect } from 'react';\nimport { Flex } from '@chakra-ui/react';\nimport CreatorDisplay from './CreatorDisplay';\nimport { useSelector, useDispatch } from '../../reducer';\nimport {\n  getMarketplaceNftsQuery\n} from '../../reducer/async/queries';\nimport { Collection } from '../../reducer/slices/collections';\n\nexport default function Creator({ minter }: { minter: string }) {\n  const system = useSelector(s => s.system);\n  const collections = useSelector(s => s.collections);\n  const { marketplace } = useSelector(s => s.marketplace);\n  const dispatch = useDispatch();\n\n  // Don't get assets from other contracts for now\n  // useEffect(() => {\n  //     dispatch(getAssetContractsQuery(minter));\n  // }, [system.status, dispatch, minter, collections.globalCollection]);\n\n  useEffect(() => {\n    dispatch(getMarketplaceNftsQuery(marketplace.address));\n  }, [marketplace.address, dispatch]);\n\n  const creatorsCollections = {} as { [key: string]: Collection };\n\n  if(!!marketplace.tokens) {\n    marketplace.tokens\n    .filter(\n      token =>\n        token?.token?.owner === (minter ?? system.tzPublicKey)\n    )\n    .map(token => {\n      creatorsCollections[token?.tokenSale?.value?.sale_data?.sale_token?.fa2_address] = collections.collections[token?.tokenSale?.value?.sale_data?.sale_token?.fa2_address];\n      return null;\n    });\n  }\n  Object.keys(collections.collections)\n    .filter(\n      key =>\n        collections.collections[key].creator.address ===\n        (minter ?? system.tzPublicKey)\n    )\n    .map(addr => {\n      creatorsCollections[addr] = collections.collections[addr];\n      return null;\n    });\n\n  return (\n    <Flex\n      flex=\"1\"\n      w=\"100%\"\n      minHeight=\"0\"\n      flexDir={{\n        base: 'column',\n        md: 'row'\n      }}\n    >\n      <CreatorDisplay minter={minter} collections={creatorsCollections} />\n    </Flex>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}