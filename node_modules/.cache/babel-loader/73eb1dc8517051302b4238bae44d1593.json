{"ast":null,"code":"import _slicedToArray from\"/Users/frankenstein/projects/minter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{createRef,useCallback}from'react';import{useDropzone}from'react-dropzone';import{Box,Flex,Heading,Text,Image,useDisclosure}from'@chakra-ui/react';import{useSelector,useDispatch}from'../../reducer';import{mintCsvTokensAction,readFileAsDataUrlAction}from'../../reducer/async/actions';import{updateDisplayImageFile}from'../../reducer/slices/createNft';import FormModal from'../common/modals/FormModal';import{useLocation}from'wouter';import{MinterButton}from'../common';import{clearSelectedCsvFile}from'../../reducer/slices/createNftCsvImport';export function FilePreview(_ref){var file=_ref.file;var dispatch=useDispatch();if(/^image\\/.*/.test(file.type)){return/*#__PURE__*/React.createElement(Image,{src:file.objectUrl,width:\"100%\",height:\"100%\",objectFit:\"scale-down\"});}if(/^video\\/.*/.test(file.type)){var canvasRef=createRef();return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"video\",{controls:true,muted:true,onLoadedData:function onLoadedData(e){var canvas=canvasRef.current;if(!canvas){return console.error('`canvasRef` current element is null');}var video=e.currentTarget;canvas.width=video.videoWidth;canvas.height=video.videoHeight;var canvasContext=canvas.getContext('2d');if(!canvasContext){return console.error('`2d` canvas context not supported');}canvasContext.drawImage(video,0,0);var type='image/png';canvas.toBlob(function(blob){if(!blob){return console.error('Could not convert canvas to blob');}dispatch(updateDisplayImageFile({objectUrl:URL.createObjectURL(blob),name:'foo',size:blob.size,type:blob.type}));},type);}},/*#__PURE__*/React.createElement(\"source\",{src:file.objectUrl,type:file.type})),/*#__PURE__*/React.createElement(\"canvas\",{ref:canvasRef,style:{display:'none'}}));}if(file.type==='model/gltf+json'||file.type==='model/gltf-binary'){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"model-viewer\",{\"camera-controls\":true,\"auto-rotate\":true,\"data-js-focus-visible\":true,src:file.objectUrl,class:\"upload-preview\"}));}return null;}export default function FileUpload(){var _state$selectedFile;var state=useSelector(function(s){return s.createNft;});var dispatch=useDispatch();var onDrop=useCallback(function(files){dispatch(readFileAsDataUrlAction({ns:'createNft',file:files[0]}));},[dispatch]);var _useDropzone=useDropzone({onDrop:onDrop,maxFiles:1,maxSize:30*1024*1024,accept:['image/*','video/*','model/gltf-binary','model/gltf+json','.gltf','.glb']}),getRootProps=_useDropzone.getRootProps,getInputProps=_useDropzone.getInputProps;return/*#__PURE__*/React.createElement(Flex,{align:\"center\",flexDir:\"column\",width:\"100%\",flex:\"1\",pt:{base:2,md:12}},/*#__PURE__*/React.createElement(Heading,{size:\"lg\",paddingBottom:8,textAlign:\"center\"},\"Upload your file\"),/*#__PURE__*/React.createElement(Text,{fontSize:\"xs\",color:\"brand.blue\",fontFamily:\"mono\",textAlign:\"center\",pb:4},\"JPG, PNG, GIF, WEBP, SVG, MP4, WebM, Ogg, Gltf, Glb. Max size 30mb\"),/*#__PURE__*/React.createElement(Flex,Object.assign({borderStyle:\"dashed\",borderWidth:\"2px\",borderColor:\"brand.lightBlue\",borderRadius:\"3px\",width:\"100%\",justify:\"center\",align:\"center\"},getRootProps()),/*#__PURE__*/React.createElement(Box,Object.assign({as:\"input\"},getInputProps())),((_state$selectedFile=state.selectedFile)===null||_state$selectedFile===void 0?void 0:_state$selectedFile.objectUrl)?/*#__PURE__*/React.createElement(Box,{p:4},/*#__PURE__*/React.createElement(Flex,{justify:\"center\",align:\"center\",maxWidth:\"400px\",maxHeight:\"400px\",overflow:\"hidden\"},/*#__PURE__*/React.createElement(FilePreview,{file:state.selectedFile}))):/*#__PURE__*/React.createElement(Flex,{borderColor:\"white\",borderWidth:\"1px\",flexDir:\"column\",align:\"center\",py:24,bg:\"brand.brightGray\",flex:\"1\"},/*#__PURE__*/React.createElement(Text,{fontSize:20,textAlign:\"center\",paddingX:4},\"Click or drag file to this area to upload\"),/*#__PURE__*/React.createElement(Text,{fontSize:18,color:\"brand.gray\"},\"Support for single file\"))));}export function CsvFileUpload(){var state=useSelector(function(s){return s.createNftCsvImport;});var dispatch=useDispatch();var disclosure=useDisclosure();var _useLocation=useLocation(),_useLocation2=_slicedToArray(_useLocation,2),setLocation=_useLocation2[1];var onDrop=useCallback(function(files){dispatch(readFileAsDataUrlAction({ns:'createNftCsvImport',file:files[0]}));},[dispatch]);var _useDropzone2=useDropzone({onDrop:onDrop,maxFiles:1,maxSize:30*1024*1024// The type for a csv file is blank in some cases (like in windows chrome)\n// accept: ['text/csv']\n}),getRootProps=_useDropzone2.getRootProps,getInputProps=_useDropzone2.getInputProps;return/*#__PURE__*/React.createElement(Flex,{flexDir:\"column\",align:\"center\"},/*#__PURE__*/React.createElement(Flex,Object.assign({bg:\"brand.brightGray\",border:\"1px solid\",borderColor:\"brand.lightBlue\",borderRadius:\"5px\",display:\"inline-flex\",marginBottom:\"4\",paddingX:16,paddingY:12},getRootProps()),/*#__PURE__*/React.createElement(\"input\",getInputProps()),/*#__PURE__*/React.createElement(Text,{fontWeight:\"500\",fontSize:18},state.selectedCsvFile?\"Selected file: \".concat(state.selectedCsvFile.name):'Click or drag CSV file to this area to upload')),/*#__PURE__*/React.createElement(Flex,{justify:\"center\"},/*#__PURE__*/React.createElement(MinterButton,{variant:state.selectedCsvFile===null?'primaryActionInactive':'primaryAction',onClick:function onClick(){return state.selectedCsvFile&&disclosure.onOpen();}},\"Mint from CSV\")),/*#__PURE__*/React.createElement(FormModal,{disclosure:disclosure,method:\"mintCsvTokens\",dispatchThunk:function dispatchThunk(){return dispatch(mintCsvTokensAction());},onComplete:function onComplete(){return dispatch(clearSelectedCsvFile());},afterClose:function afterClose(){return setLocation('/collections');},dispatchOnOpen:true,pendingAsyncMessage:/*#__PURE__*/React.createElement(React.Fragment,null,\"Opening wallet...\",/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(Text,{fontSize:\"1rem\",fontWeight:\"normal\",marginTop:4,textAlign:\"center\",color:\"gray.500\"},/*#__PURE__*/React.createElement(\"span\",{role:\"img\",\"aria-label\":\"lightbulb\"},\"\\uD83C\\uDF31\"),' ',\"Minting on Tezos produces 1,500,000 times less CO2 emissions than Ethereum.\"))}));}","map":{"version":3,"sources":["/Users/frankenstein/projects/minter/src/components/CreateNonFungiblePage/FileUpload.tsx"],"names":["React","createRef","useCallback","useDropzone","Box","Flex","Heading","Text","Image","useDisclosure","useSelector","useDispatch","mintCsvTokensAction","readFileAsDataUrlAction","updateDisplayImageFile","FormModal","useLocation","MinterButton","clearSelectedCsvFile","FilePreview","file","dispatch","test","type","objectUrl","canvasRef","e","canvas","current","console","error","video","currentTarget","width","videoWidth","height","videoHeight","canvasContext","getContext","drawImage","toBlob","blob","URL","createObjectURL","name","size","display","FileUpload","state","s","createNft","onDrop","files","ns","maxFiles","maxSize","accept","getRootProps","getInputProps","base","md","selectedFile","CsvFileUpload","createNftCsvImport","disclosure","setLocation","selectedCsvFile","onOpen"],"mappings":"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","sourcesContent":["import React, { createRef, useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport {\n  Box,\n  Flex,\n  Heading,\n  Text,\n  Image,\n  useDisclosure\n} from '@chakra-ui/react';\nimport { useSelector, useDispatch } from '../../reducer';\nimport {\n  mintCsvTokensAction,\n  readFileAsDataUrlAction\n} from '../../reducer/async/actions';\nimport {\n  updateDisplayImageFile,\n  SelectedFile\n} from '../../reducer/slices/createNft';\nimport FormModal from '../common/modals/FormModal';\nimport { useLocation } from 'wouter';\nimport { MinterButton } from '../common';\nimport { clearSelectedCsvFile } from '../../reducer/slices/createNftCsvImport';\n\nexport function FilePreview({ file }: { file: SelectedFile }) {\n  const dispatch = useDispatch();\n  if (/^image\\/.*/.test(file.type)) {\n    return (\n      <Image\n        src={file.objectUrl}\n        width=\"100%\"\n        height=\"100%\"\n        objectFit=\"scale-down\"\n      />\n    );\n  }\n  if (/^video\\/.*/.test(file.type)) {\n    const canvasRef = createRef<HTMLCanvasElement>();\n    return (\n      <>\n        <video\n          controls\n          muted\n          onLoadedData={e => {\n            const canvas = canvasRef.current;\n            if (!canvas) {\n              return console.error('`canvasRef` current element is null');\n            }\n            const video = e.currentTarget;\n            canvas.width = video.videoWidth;\n            canvas.height = video.videoHeight;\n            var canvasContext = canvas.getContext('2d');\n            if (!canvasContext) {\n              return console.error('`2d` canvas context not supported');\n            }\n            canvasContext.drawImage(video, 0, 0);\n            const type = 'image/png';\n            canvas.toBlob(blob => {\n              if (!blob) {\n                return console.error('Could not convert canvas to blob');\n              }\n              dispatch(\n                updateDisplayImageFile({\n                  objectUrl: URL.createObjectURL(blob),\n                  name: 'foo',\n                  size: blob.size,\n                  type: blob.type\n                })\n              );\n            }, type);\n          }}\n        >\n          <source src={file.objectUrl} type={file.type} />\n        </video>\n        <canvas ref={canvasRef} style={{ display: 'none' }} />\n      </>\n    );\n  }\n  if (file.type === 'model/gltf+json' || file.type === 'model/gltf-binary') {\n    return (\n      <>\n        <model-viewer\n          camera-controls\n          auto-rotate\n          data-js-focus-visible\n          src={file.objectUrl}\n          class=\"upload-preview\"\n        ></model-viewer>\n      </>\n    );\n  }\n  return null;\n}\n\nexport default function FileUpload() {\n  const state = useSelector(s => s.createNft);\n  const dispatch = useDispatch();\n\n  const onDrop = useCallback(\n    (files: File[]) => {\n      dispatch(readFileAsDataUrlAction({ ns: 'createNft', file: files[0] }));\n    },\n    [dispatch]\n  );\n\n  const { getRootProps, getInputProps } = useDropzone({\n    onDrop,\n    maxFiles: 1,\n    maxSize: 30 * 1024 * 1024,\n    accept: [\n      'image/*',\n      'video/*',\n      'model/gltf-binary',\n      'model/gltf+json',\n      '.gltf',\n      '.glb'\n    ]\n  });\n\n  return (\n    <Flex\n      align=\"center\"\n      flexDir=\"column\"\n      width=\"100%\"\n      flex=\"1\"\n      pt={{\n        base: 2,\n        md: 12\n      }}\n    >\n      <Heading size=\"lg\" paddingBottom={8} textAlign=\"center\">\n        Upload your file\n      </Heading>\n      <Text\n        fontSize=\"xs\"\n        color=\"brand.blue\"\n        fontFamily=\"mono\"\n        textAlign=\"center\"\n        pb={4}\n      >\n        JPG, PNG, GIF, WEBP, SVG, MP4, WebM, Ogg, Gltf, Glb. Max size 30mb\n      </Text>\n      <Flex\n        borderStyle=\"dashed\"\n        borderWidth=\"2px\"\n        borderColor=\"brand.lightBlue\"\n        borderRadius=\"3px\"\n        width=\"100%\"\n        justify=\"center\"\n        align=\"center\"\n        {...getRootProps()}\n      >\n        <Box as=\"input\" {...getInputProps()} />\n        {state.selectedFile?.objectUrl ? (\n          <Box p={4}>\n            <Flex\n              justify=\"center\"\n              align=\"center\"\n              maxWidth=\"400px\"\n              maxHeight=\"400px\"\n              overflow=\"hidden\"\n            >\n              <FilePreview file={state.selectedFile} />\n            </Flex>\n          </Box>\n        ) : (\n          <Flex\n            borderColor=\"white\"\n            borderWidth=\"1px\"\n            flexDir=\"column\"\n            align=\"center\"\n            py={24}\n            bg=\"brand.brightGray\"\n            flex=\"1\"\n          >\n            <Text fontSize={20} textAlign=\"center\" paddingX={4}>\n              Click or drag file to this area to upload\n            </Text>\n            <Text fontSize={18} color=\"brand.gray\">\n              Support for single file\n            </Text>\n          </Flex>\n        )}\n      </Flex>\n    </Flex>\n  );\n}\n\nexport function CsvFileUpload() {\n  const state = useSelector(s => s.createNftCsvImport);\n  const dispatch = useDispatch();\n  const disclosure = useDisclosure();\n  const [, setLocation] = useLocation();\n\n  const onDrop = useCallback(\n    (files: File[]) => {\n      dispatch(\n        readFileAsDataUrlAction({ ns: 'createNftCsvImport', file: files[0] })\n      );\n    },\n    [dispatch]\n  );\n\n  const { getRootProps, getInputProps } = useDropzone({\n    onDrop,\n    maxFiles: 1,\n    maxSize: 30 * 1024 * 1024,\n    // The type for a csv file is blank in some cases (like in windows chrome)\n    // accept: ['text/csv']\n  });\n\n  return (\n    <Flex flexDir=\"column\" align=\"center\">\n      <Flex\n        bg=\"brand.brightGray\"\n        border=\"1px solid\"\n        borderColor=\"brand.lightBlue\"\n        borderRadius=\"5px\"\n        display=\"inline-flex\"\n        marginBottom=\"4\"\n        paddingX={16}\n        paddingY={12}\n        {...getRootProps()}\n      >\n        <input {...getInputProps()} />\n        <Text fontWeight=\"500\" fontSize={18}>\n          {state.selectedCsvFile\n            ? `Selected file: ${state.selectedCsvFile.name}`\n            : 'Click or drag CSV file to this area to upload'}\n        </Text>\n      </Flex>\n      <Flex justify=\"center\">\n        <MinterButton\n          variant={\n            state.selectedCsvFile === null\n              ? 'primaryActionInactive'\n              : 'primaryAction'\n          }\n          onClick={() => state.selectedCsvFile && disclosure.onOpen()}\n        >\n          Mint from CSV\n        </MinterButton>\n      </Flex>\n      <FormModal\n        disclosure={disclosure}\n        method=\"mintCsvTokens\"\n        dispatchThunk={() => dispatch(mintCsvTokensAction())}\n        onComplete={() => dispatch(clearSelectedCsvFile())}\n        afterClose={() => setLocation('/collections')}\n        dispatchOnOpen={true}\n        pendingAsyncMessage={\n          <>\n            Opening wallet...\n            <br />\n            <Text\n              fontSize=\"1rem\"\n              fontWeight=\"normal\"\n              marginTop={4}\n              textAlign=\"center\"\n              color=\"gray.500\"\n            >\n              <span role=\"img\" aria-label=\"lightbulb\">\n                🌱\n              </span>{' '}\n              Minting on Tezos produces 1,500,000 times less CO2 emissions than\n              Ethereum.\n            </Text>\n          </>\n        }\n      />\n    </Flex>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}