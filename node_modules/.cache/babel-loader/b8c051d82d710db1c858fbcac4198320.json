{"ast":null,"code":"var _jsxFileName = \"/Users/frankenstein/projects/minter/src/components/common/modals/CreateCollection.tsx\";\nimport React, { useState } from 'react';\nimport { Box, Text, FormControl, FormLabel, Input, ModalHeader, ModalFooter, ModalBody, ModalCloseButton, useDisclosure } from '@chakra-ui/react';\nimport { Plus } from 'react-feather';\nimport { MinterButton } from '../../common';\nimport { useDispatch } from '../../../reducer';\nimport { createAssetContractAction } from '../../../reducer/async/actions';\nimport FormModal from './FormModal';\n\nfunction CreateCollectionModal(props) {\n  const [contractName, setContractName] = useState('');\n  const dispatch = useDispatch();\n  const initialRef = React.useRef(null);\n  return /*#__PURE__*/React.createElement(FormModal, {\n    disclosure: props.disclosure,\n    sync: props.sync,\n    method: \"createAssetContract\",\n    dispatchThunk: () => dispatch(createAssetContractAction(contractName)),\n    onComplete: () => setContractName(''),\n    initialRef: initialRef,\n    pendingMessage: \"Creating collection...\",\n    completeMessage: \"Collection created\",\n    body: onSubmit => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ModalHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }\n    }, \"New Collection\"), /*#__PURE__*/React.createElement(ModalCloseButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      fontFamily: \"mono\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 15\n      }\n    }, \"Collection Name\"), /*#__PURE__*/React.createElement(Input, {\n      autoFocus: true,\n      ref: initialRef,\n      placeholder: \"Input your collection name\",\n      value: contractName,\n      onChange: e => setContractName(e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(ModalFooter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(MinterButton, {\n      variant: \"primaryAction\",\n      onClick: () => onSubmit(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, \"Create Collection\"))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  });\n}\n\nexport function CreateCollectionButton(props) {\n  const disclosure = useDisclosure();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MinterButton, {\n    variant: \"primaryActionInverted\",\n    onClick: disclosure.onOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    color: \"currentcolor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Plus, {\n    size: 16,\n    strokeWidth: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Text, {\n    ml: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, \"New Collection\")), /*#__PURE__*/React.createElement(CreateCollectionModal, {\n    disclosure: disclosure,\n    sync: props.sync,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/frankenstein/projects/minter/src/components/common/modals/CreateCollection.tsx"],"names":["React","useState","Box","Text","FormControl","FormLabel","Input","ModalHeader","ModalFooter","ModalBody","ModalCloseButton","useDisclosure","Plus","MinterButton","useDispatch","createAssetContractAction","FormModal","CreateCollectionModal","props","contractName","setContractName","dispatch","initialRef","useRef","disclosure","sync","onSubmit","e","target","value","CreateCollectionButton","onOpen"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {\n  Box,\n  Text,\n  FormControl,\n  FormLabel,\n  Input,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  useDisclosure\n} from '@chakra-ui/react';\nimport { Plus } from 'react-feather';\nimport { MinterButton } from '../../common';\nimport { useDispatch } from '../../../reducer';\nimport { createAssetContractAction } from '../../../reducer/async/actions';\nimport FormModal, { BaseModalProps, BaseModalButtonProps } from './FormModal';\n\ninterface CreateCollectionModalProps extends BaseModalProps {}\n\nfunction CreateCollectionModal(props: CreateCollectionModalProps) {\n  const [contractName, setContractName] = useState('');\n  const dispatch = useDispatch();\n  const initialRef = React.useRef(null);\n  return (\n    <FormModal\n      disclosure={props.disclosure}\n      sync={props.sync}\n      method=\"createAssetContract\"\n      dispatchThunk={() => dispatch(createAssetContractAction(contractName))}\n      onComplete={() => setContractName('')}\n      initialRef={initialRef}\n      pendingMessage=\"Creating collection...\"\n      completeMessage=\"Collection created\"\n      body={onSubmit => (\n        <>\n          <ModalHeader>New Collection</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody>\n            <FormControl>\n              <FormLabel fontFamily=\"mono\">Collection Name</FormLabel>\n              <Input\n                autoFocus={true}\n                ref={initialRef}\n                placeholder=\"Input your collection name\"\n                value={contractName}\n                onChange={e => setContractName(e.target.value)}\n              />\n            </FormControl>\n          </ModalBody>\n          <ModalFooter>\n            <MinterButton variant=\"primaryAction\" onClick={() => onSubmit()}>\n              Create Collection\n            </MinterButton>\n          </ModalFooter>\n        </>\n      )}\n    />\n  );\n}\n\ninterface CreateCollectionButtonProps extends BaseModalButtonProps {}\n\nexport function CreateCollectionButton(props: CreateCollectionButtonProps) {\n  const disclosure = useDisclosure();\n  return (\n    <>\n      <MinterButton variant=\"primaryActionInverted\" onClick={disclosure.onOpen}>\n        <Box color=\"currentcolor\">\n          <Plus size={16} strokeWidth=\"3\" />\n        </Box>\n        <Text ml={2}>New Collection</Text>\n      </MinterButton>\n      <CreateCollectionModal disclosure={disclosure} sync={props.sync} />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}