{"ast":null,"code":"var _jsxFileName = \"/Users/frankenstein/projects/minter/src/components/Creator/CreatorDisplay.tsx\";\nimport React, { useEffect } from 'react';\nimport { Flex, Heading, SimpleGrid, Spinner, Text, Image, Box, Link } from '@chakra-ui/react';\nimport { Tabs, TabList, TabPanels, Tab, TabPanel } from '@chakra-ui/react';\nimport { ChevronLeft, Wind } from 'react-feather';\nimport { useDispatch, useSelector } from '../../reducer';\nimport { getContractNftsQuery, getNftAssetContractQuery } from '../../reducer/async/queries';\nimport TokenCard from '../common/TokenCard';\nimport { MinterButton } from '../common';\nimport lk from \"../common/assets/link-icon.svg\";\n\nfunction CreatorDisplay404(props) {\n  return /*#__PURE__*/React.createElement(Flex, {\n    w: \"100%\",\n    flex: \"1\",\n    flexDir: \"column\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Flex, {\n    px: 20,\n    py: 10,\n    bg: \"gray.200\",\n    textAlign: \"center\",\n    align: \"center\",\n    borderRadius: \"5px\",\n    flexDir: \"column\",\n    fontSize: \"xl\",\n    color: \"gray.400\",\n    mt: 28,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Wind, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Text, {\n    fontWeight: \"600\",\n    pt: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, props.ownedOnly ? 'No owned tokens to display' : 'No tokens to display')));\n}\n\nexport default function CreatorDisplay({\n  minter,\n  collections,\n  ownedOnly = true\n}) {\n  const {\n    config\n  } = useSelector(s => s.system);\n  const dispatch = useDispatch();\n  let selectedCollection = Object.keys(collections)[0];\n  useEffect(() => {\n    if (selectedCollection) {\n      dispatch(getNftAssetContractQuery(selectedCollection)).then(() => dispatch(getContractNftsQuery(selectedCollection)));\n    }\n  }, [dispatch, selectedCollection]);\n\n  if (!selectedCollection) {\n    return /*#__PURE__*/React.createElement(CreatorDisplay404, {\n      ownedOnly: ownedOnly,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    });\n  }\n\n  const collection = collections[selectedCollection];\n\n  if (!collection) {\n    return /*#__PURE__*/React.createElement(CreatorDisplay404, {\n      ownedOnly: ownedOnly,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    });\n  }\n\n  if (!collection.loaded) {\n    return /*#__PURE__*/React.createElement(Flex, {\n      flexDir: \"column\",\n      align: \"center\",\n      flex: \"1\",\n      pt: 20,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Spinner, {\n      size: \"xl\",\n      mb: 6,\n      color: \"gray.300\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Heading, {\n      size: \"lg\",\n      textAlign: \"center\",\n      color: \"gray.500\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, \"Loading...\"));\n  }\n\n  if (collection.tokens === null) {\n    return /*#__PURE__*/React.createElement(CreatorDisplay404, {\n      ownedOnly: ownedOnly,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }\n    });\n  }\n\n  const tokens = collection.tokens;\n\n  if (tokens.length === 0) {\n    return /*#__PURE__*/React.createElement(CreatorDisplay404, {\n      ownedOnly: ownedOnly,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Flex, {\n    flexDir: \"column\",\n    h: \"100%\",\n    w: \"100%\",\n    flex: \"1\",\n    bg: \"brand.brightGray\",\n    borderLeftWidth: \"1px\",\n    borderLeftColor: \"brand.lightBlue\",\n    overflowY: \"scroll\",\n    justify: \"start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Flex, {\n    flexDir: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Flex, {\n    justifyContent: \"flex-start\",\n    width: \"4rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MinterButton, {\n    variant: \"primaryActionInverted\",\n    onClick: e => {\n      e.preventDefault();\n      window.history.back();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    color: \"currentcolor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ChevronLeft, {\n    size: 24,\n    strokeWidth: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(Flex, {\n    align: \"center\",\n    overflow: \"hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    width: \"5rem\",\n    src: `https://services.tzkt.io/v1/avatars2/${collection.address}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    display: \"block\",\n    whiteSpace: \"nowrap\",\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\",\n    href: `https://${(config.network + '.').replace('mainnet.', '')}tzkt.io/${minter}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Heading, {\n    fontSize: \"1.5rem\",\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\",\n    overflowWrap: \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, minter, \"\\xA0\", /*#__PURE__*/React.createElement(\"sup\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 118\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: lk,\n    alt: \"\",\n    width: \"auto\",\n    height: \"auto\",\n    style: {\n      display: 'inline-block'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 123\n    }\n  })))))), /*#__PURE__*/React.createElement(Flex, {\n    flexDir: \"column\",\n    h: \"100%\",\n    w: \"100%\",\n    px: {\n      base: 6,\n      md: 10\n    },\n    flex: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Tabs, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TabList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Tab, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, \"Minted\"), /*#__PURE__*/React.createElement(Tab, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }, \"For Sale\")), /*#__PURE__*/React.createElement(TabPanels, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TabPanel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(SimpleGrid, {\n    columns: {\n      sm: 1,\n      md: 2,\n      lg: 3,\n      xl: 4\n    },\n    gap: 8,\n    pb: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 15\n    }\n  }, tokens.filter(({\n    owner,\n    metadata\n  }) => {\n    var _metadata$creators;\n\n    return owner === minter && ((metadata === null || metadata === void 0 ? void 0 : (_metadata$creators = metadata.creators) === null || _metadata$creators === void 0 ? void 0 : _metadata$creators.find(creator => creator === owner)) || (metadata === null || metadata === void 0 ? void 0 : metadata.minter) === owner);\n  }).map(token => {\n    return /*#__PURE__*/React.createElement(TokenCard, Object.assign({\n      key: collection.address + token.id,\n      address: collection.address,\n      config: config\n    }, token, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 23\n      }\n    }));\n  }))), /*#__PURE__*/React.createElement(TabPanel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(SimpleGrid, {\n    columns: {\n      sm: 1,\n      md: 2,\n      lg: 3,\n      xl: 4\n    },\n    gap: 8,\n    pb: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 15\n    }\n  }, tokens.filter(({\n    sale\n  }) => (sale === null || sale === void 0 ? void 0 : sale.seller) === minter).map(token => {\n    return /*#__PURE__*/React.createElement(TokenCard, Object.assign({\n      key: collection.address + token.id,\n      address: collection.address,\n      config: config\n    }, token, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 23\n      }\n    }));\n  })))))));\n}","map":{"version":3,"sources":["/Users/frankenstein/projects/minter/src/components/Creator/CreatorDisplay.tsx"],"names":["React","useEffect","Flex","Heading","SimpleGrid","Spinner","Text","Image","Box","Link","Tabs","TabList","TabPanels","Tab","TabPanel","ChevronLeft","Wind","useDispatch","useSelector","getContractNftsQuery","getNftAssetContractQuery","TokenCard","MinterButton","CreatorDisplay404","props","ownedOnly","CreatorDisplay","minter","collections","config","s","system","dispatch","selectedCollection","Object","keys","then","collection","loaded","tokens","length","e","preventDefault","window","history","back","address","network","replace","lk","display","base","md","sm","lg","xl","filter","owner","metadata","creators","find","creator","map","token","id","sale","seller"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport {\n  Flex,\n  Heading,\n  SimpleGrid,\n  Spinner,\n  Text,\n  Image,\n  Box,\n  Link\n} from '@chakra-ui/react';\nimport { Tabs, TabList, TabPanels, Tab, TabPanel } from '@chakra-ui/react';\nimport { ChevronLeft, Wind } from 'react-feather';\nimport { useDispatch, useSelector } from '../../reducer';\nimport {\n  getContractNftsQuery,\n  getNftAssetContractQuery\n} from '../../reducer/async/queries';\nimport TokenCard from '../common/TokenCard';\nimport { Collection } from '../../reducer/slices/collections';\nimport { MinterButton } from '../common';\nimport lk from '../common/assets/link-icon.svg'\n\ninterface CreatorDisplay404Props {\n  ownedOnly: boolean;\n}\n\nfunction CreatorDisplay404(props: CreatorDisplay404Props) {\n  return (\n    <Flex w=\"100%\" flex=\"1\" flexDir=\"column\" align=\"center\">\n      <Flex\n        px={20}\n        py={10}\n        bg=\"gray.200\"\n        textAlign=\"center\"\n        align=\"center\"\n        borderRadius=\"5px\"\n        flexDir=\"column\"\n        fontSize=\"xl\"\n        color=\"gray.400\"\n        mt={28}\n      >\n        <Wind />\n        <Text fontWeight=\"600\" pt={5}>\n          {props.ownedOnly ? 'No owned tokens to display' : 'No tokens to display'}\n        </Text>\n      </Flex>\n    </Flex>\n  );\n}\n\ninterface CreatorDisplayProps {\n  minter: string;\n  collections: { [key: string]: Collection };\n  ownedOnly?: boolean;\n}\n\nexport default function CreatorDisplay({\n  minter,\n  collections,\n  ownedOnly = true\n}: CreatorDisplayProps) {\n  const { config } = useSelector(s => s.system);\n  const dispatch = useDispatch();\n  let selectedCollection = Object.keys(collections)[0];\n\n  useEffect(() => {\n    if (selectedCollection) {\n      dispatch(getNftAssetContractQuery(selectedCollection)).then(() =>\n        dispatch(getContractNftsQuery(selectedCollection))\n      );\n    }\n  }, [dispatch, selectedCollection]);\n\n  if (!selectedCollection) {\n    return (\n      <CreatorDisplay404 ownedOnly={ownedOnly} />\n    );\n  }\n\n  const collection = collections[selectedCollection];\n  if (!collection) {\n    return (\n      <CreatorDisplay404 ownedOnly={ownedOnly} />\n    );\n  }\n\n  if (!collection.loaded) {\n    return (\n      <Flex flexDir=\"column\" align=\"center\" flex=\"1\" pt={20}>\n        <Spinner size=\"xl\" mb={6} color=\"gray.300\" />\n        <Heading size=\"lg\" textAlign=\"center\" color=\"gray.500\">\n          Loading...\n        </Heading>\n      </Flex>\n    );\n  }\n\n  if (collection.tokens === null) {\n    return (\n      <CreatorDisplay404 ownedOnly={ownedOnly} />\n    );\n  }\n\n  const tokens = collection.tokens;\n\n  if (tokens.length === 0) {\n    return (\n      <CreatorDisplay404 ownedOnly={ownedOnly} />\n    );\n  }\n\n  return (\n    <Flex \n      flexDir=\"column\" \n      h=\"100%\"\n      w=\"100%\"\n      flex=\"1\"\n      bg=\"brand.brightGray\"\n      borderLeftWidth=\"1px\"\n      borderLeftColor=\"brand.lightBlue\"\n      overflowY=\"scroll\"\n      justify=\"start\"\n    >\n      <Flex flexDir=\"row\">\n        <Flex justifyContent=\"flex-start\" width=\"4rem\">\n          <MinterButton\n            variant=\"primaryActionInverted\"\n            onClick={e => {\n              e.preventDefault();\n              window.history.back();\n            }}\n          >\n            <Box color=\"currentcolor\">\n              <ChevronLeft size={24} strokeWidth=\"3\" />\n            </Box>\n          </MinterButton>\n        </Flex>\n        <Flex align=\"center\" overflow=\"hidden\">\n          <Image width=\"5rem\"\n            src={`https://services.tzkt.io/v1/avatars2/${collection.address}`}\n          />\n          <Link display=\"block\" whiteSpace=\"nowrap\" overflow=\"hidden\" textOverflow=\"ellipsis\" href={`https://${(config.network + '.').replace('mainnet.', '')}tzkt.io/${minter}`}>\n            <Heading fontSize=\"1.5rem\" overflow=\"hidden\" textOverflow=\"ellipsis\" overflowWrap=\"normal\">{minter}&nbsp;<sup><img src={lk} alt=\"\" width=\"auto\" height=\"auto\" style={{ display: 'inline-block' }} /></sup></Heading>\n          </Link>\n        </Flex>\n      </Flex>\n\n      <Flex\n        flexDir=\"column\"\n        h=\"100%\"\n        w=\"100%\"\n        px={{ base: 6, md: 10 }}\n        flex=\"1\"\n      >\n        <Tabs>\n          <TabList>\n            <Tab>Minted</Tab>\n            <Tab>For Sale</Tab>\n          </TabList>\n\n          <TabPanels>\n\n            <TabPanel>\n              <SimpleGrid columns={{ sm: 1, md: 2, lg: 3, xl: 4 }} gap={8} pb={8}>\n                {tokens\n                  .filter(\n                    ({ owner, metadata }) =>\n                      owner === minter &&\n                      (metadata?.creators?.find(creator => creator === owner) ||\n                        metadata?.minter === owner)\n                  )\n                  .map(token => {\n                    return (\n                      <TokenCard\n                        key={collection.address + token.id}\n                        address={collection.address}\n                        config={config}\n                        {...token}\n                      />\n                    );\n                  })}\n              </SimpleGrid>\n            </TabPanel>\n\n            <TabPanel>\n              <SimpleGrid columns={{ sm: 1, md: 2, lg: 3, xl: 4 }} gap={8} pb={8}>\n                {tokens\n                  .filter(({ sale }) => sale?.seller === minter)\n                  .map(token => {\n                    return (\n                      <TokenCard\n                        key={collection.address + token.id}\n                        address={collection.address}\n                        config={config}\n                        {...token}\n                      />\n                    );\n                  })}\n              </SimpleGrid>\n            </TabPanel>\n\n          </TabPanels>\n        </Tabs>\n      </Flex>\n    </Flex>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}