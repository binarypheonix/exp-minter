{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getFirstMonoid = exports.getOrd = exports.getEq = exports.getShow = exports.URI = exports.wilt = exports.wither = exports.sequence = exports.traverse = exports.partitionMap = exports.partition = exports.filterMap = exports.filter = exports.separate = exports.compact = exports.reduceRight = exports.foldMap = exports.reduce = exports.duplicate = exports.extend = exports.throwError = exports.zero = exports.alt = exports.altW = exports.flatten = exports.chain = exports.of = exports.ap = exports.map = exports.toUndefined = exports.toNullable = exports.chainNullableK = exports.fromNullableK = exports.tryCatchK = exports.tryCatch = exports.fromNullable = exports.getOrElse = exports.getOrElseW = exports.fold = exports.match = exports.foldW = exports.matchW = exports.fromEither = exports.getRight = exports.getLeft = exports.fromPredicate = exports.some = exports.none = exports.isNone = exports.isSome = void 0;\nexports.getApplyMonoid = exports.getApplySemigroup = exports.option = exports.mapNullable = exports.sequenceArray = exports.traverseArray = exports.traverseArrayWithIndex = exports.apS = exports.bind = exports.bindTo = exports.Do = exports.getRefinement = exports.exists = exports.elem = exports.MonadThrow = exports.Witherable = exports.Traversable = exports.Filterable = exports.Compactable = exports.Extend = exports.Alternative = exports.Alt = exports.Foldable = exports.chainFirst = exports.Monad = exports.Chain = exports.Applicative = exports.apSecond = exports.apFirst = exports.Apply = exports.Pointed = exports.flap = exports.Functor = exports.getMonoid = exports.getLastMonoid = void 0;\n\nvar Applicative_1 = require(\"./Applicative\");\n\nvar Apply_1 = require(\"./Apply\");\n\nvar Chain_1 = require(\"./Chain\");\n\nvar function_1 = require(\"./function\");\n\nvar Functor_1 = require(\"./Functor\");\n\nvar _ = __importStar(require(\"./internal\"));\n\nvar Separated_1 = require(\"./Separated\"); // -------------------------------------------------------------------------------------\n// guards\n// -------------------------------------------------------------------------------------\n\n/**\n * Returns `true` if the option is an instance of `Some`, `false` otherwise.\n *\n * @example\n * import { some, none, isSome } from 'fp-ts/Option'\n *\n * assert.strictEqual(isSome(some(1)), true)\n * assert.strictEqual(isSome(none), false)\n *\n * @category guards\n * @since 2.0.0\n */\n\n\nexports.isSome = _.isSome;\n/**\n * Returns `true` if the option is `None`, `false` otherwise.\n *\n * @example\n * import { some, none, isNone } from 'fp-ts/Option'\n *\n * assert.strictEqual(isNone(some(1)), false)\n * assert.strictEqual(isNone(none), true)\n *\n * @category guards\n * @since 2.0.0\n */\n\nvar isNone = function (fa) {\n  return fa._tag === 'None';\n};\n\nexports.isNone = isNone; // -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n\n/**\n * `None` doesn't have a constructor, instead you can use it directly as a value. Represents a missing value.\n *\n * @category constructors\n * @since 2.0.0\n */\n\nexports.none = {\n  _tag: 'None'\n};\n/**\n * Constructs a `Some`. Represents an optional value that exists.\n *\n * @category constructors\n * @since 2.0.0\n */\n\nvar some = function (a) {\n  return {\n    _tag: 'Some',\n    value: a\n  };\n};\n\nexports.some = some;\n\nfunction fromPredicate(predicate) {\n  return function (a) {\n    return predicate(a) ? exports.some(a) : exports.none;\n  };\n}\n\nexports.fromPredicate = fromPredicate;\n/**\n * Returns the `Left` value of an `Either` if possible.\n *\n * @example\n * import { getLeft, none, some } from 'fp-ts/Option'\n * import { right, left } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(getLeft(right(1)), none)\n * assert.deepStrictEqual(getLeft(left('a')), some('a'))\n *\n * @category constructors\n * @since 2.0.0\n */\n\nfunction getLeft(ma) {\n  return ma._tag === 'Right' ? exports.none : exports.some(ma.left);\n}\n\nexports.getLeft = getLeft;\n/**\n * Returns the `Right` value of an `Either` if possible.\n *\n * @example\n * import { getRight, none, some } from 'fp-ts/Option'\n * import { right, left } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(getRight(right(1)), some(1))\n * assert.deepStrictEqual(getRight(left('a')), none)\n *\n * @category constructors\n * @since 2.0.0\n */\n\nfunction getRight(ma) {\n  return ma._tag === 'Left' ? exports.none : exports.some(ma.right);\n}\n\nexports.getRight = getRight;\n/**\n * Transforms an `Either` to an `Option` discarding the error.\n *\n * Alias of [getRight](#getright)\n *\n * @category constructors\n * @since 2.0.0\n */\n\nexports.fromEither = getRight; // -------------------------------------------------------------------------------------\n// destructors\n// -------------------------------------------------------------------------------------\n\n/**\n * Less strict version of [`match`](#match).\n *\n * @category destructors\n * @since 2.10.0\n */\n\nvar matchW = function (onNone, onSome) {\n  return function (ma) {\n    return exports.isNone(ma) ? onNone() : onSome(ma.value);\n  };\n};\n\nexports.matchW = matchW;\n/**\n * Alias of [`matchW`](#matchw).\n *\n * @category destructors\n * @since 2.10.0\n */\n\nexports.foldW = exports.matchW;\n/**\n * Takes a (lazy) default value, a function, and an `Option` value, if the `Option` value is `None` the default value is\n * returned, otherwise the function is applied to the value inside the `Some` and the result is returned.\n *\n * @example\n * import { some, none, match } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     match(() => 'a none', a => `a some containing ${a}`)\n *   ),\n *   'a some containing 1'\n * )\n *\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     match(() => 'a none', a => `a some containing ${a}`)\n *   ),\n *   'a none'\n * )\n *\n * @category destructors\n * @since 2.10.0\n */\n\nexports.match = exports.matchW;\n/**\n * Alias of [`match`](#match).\n *\n * @category destructors\n * @since 2.0.0\n */\n\nexports.fold = exports.match;\n/**\n * Less strict version of [`getOrElse`](#getorelse).\n *\n * @category destructors\n * @since 2.6.0\n */\n\nvar getOrElseW = function (onNone) {\n  return function (ma) {\n    return exports.isNone(ma) ? onNone() : ma.value;\n  };\n};\n\nexports.getOrElseW = getOrElseW;\n/**\n * Extracts the value out of the structure, if it exists. Otherwise returns the given default value\n *\n * @example\n * import { some, none, getOrElse } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     getOrElse(() => 0)\n *   ),\n *   1\n * )\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     getOrElse(() => 0)\n *   ),\n *   0\n * )\n *\n * @category destructors\n * @since 2.0.0\n */\n\nexports.getOrElse = exports.getOrElseW; // -------------------------------------------------------------------------------------\n// interop\n// -------------------------------------------------------------------------------------\n\n/**\n * Constructs a new `Option` from a nullable type. If the value is `null` or `undefined`, returns `None`, otherwise\n * returns the value wrapped in a `Some`.\n *\n * @example\n * import { none, some, fromNullable } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(fromNullable(undefined), none)\n * assert.deepStrictEqual(fromNullable(null), none)\n * assert.deepStrictEqual(fromNullable(1), some(1))\n *\n * @category interop\n * @since 2.0.0\n */\n\nvar fromNullable = function (a) {\n  return a == null ? exports.none : exports.some(a);\n};\n\nexports.fromNullable = fromNullable;\n/**\n * Transforms an exception into an `Option`. If `f` throws, returns `None`, otherwise returns the output wrapped in a\n * `Some`.\n *\n * See also [`tryCatchK`](#trycatchk).\n *\n * @example\n * import { none, some, tryCatch } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(\n *   tryCatch(() => {\n *     throw new Error()\n *   }),\n *   none\n * )\n * assert.deepStrictEqual(tryCatch(() => 1), some(1))\n *\n * @category interop\n * @since 2.0.0\n */\n\nvar tryCatch = function (f) {\n  try {\n    return exports.some(f());\n  } catch (e) {\n    return exports.none;\n  }\n};\n\nexports.tryCatch = tryCatch;\n/**\n * Converts a function that may throw to one returning a `Option`.\n *\n * @category interop\n * @since 2.10.0\n */\n\nvar tryCatchK = function (f) {\n  return function () {\n    var a = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      a[_i] = arguments[_i];\n    }\n\n    return exports.tryCatch(function () {\n      return f.apply(void 0, a);\n    });\n  };\n};\n\nexports.tryCatchK = tryCatchK;\n/**\n * Returns a *smart constructor* from a function that returns a nullable value.\n *\n * @example\n * import { fromNullableK, none, some } from 'fp-ts/Option'\n *\n * const f = (s: string): number | undefined => {\n *   const n = parseFloat(s)\n *   return isNaN(n) ? undefined : n\n * }\n *\n * const g = fromNullableK(f)\n *\n * assert.deepStrictEqual(g('1'), some(1))\n * assert.deepStrictEqual(g('a'), none)\n *\n * @category interop\n * @since 2.9.0\n */\n\nvar fromNullableK = function (f) {\n  return function_1.flow(f, exports.fromNullable);\n};\n\nexports.fromNullableK = fromNullableK;\n/**\n * This is `chain` + `fromNullable`, useful when working with optional values.\n *\n * @example\n * import { some, none, fromNullable, chainNullableK } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * interface Employee {\n *   readonly company?: {\n *     readonly address?: {\n *       readonly street?: {\n *         readonly name?: string\n *       }\n *     }\n *   }\n * }\n *\n * const employee1: Employee = { company: { address: { street: { name: 'high street' } } } }\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     fromNullable(employee1.company),\n *     chainNullableK(company => company.address),\n *     chainNullableK(address => address.street),\n *     chainNullableK(street => street.name)\n *   ),\n *   some('high street')\n * )\n *\n * const employee2: Employee = { company: { address: { street: {} } } }\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     fromNullable(employee2.company),\n *     chainNullableK(company => company.address),\n *     chainNullableK(address => address.street),\n *     chainNullableK(street => street.name)\n *   ),\n *   none\n * )\n *\n * @category interop\n * @since 2.9.0\n */\n\nvar chainNullableK = function (f) {\n  return function (ma) {\n    return exports.isNone(ma) ? exports.none : exports.fromNullable(f(ma.value));\n  };\n};\n\nexports.chainNullableK = chainNullableK;\n/**\n * Extracts the value out of the structure, if it exists. Otherwise returns `null`.\n *\n * @example\n * import { some, none, toNullable } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     toNullable\n *   ),\n *   1\n * )\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     toNullable\n *   ),\n *   null\n * )\n *\n * @category interop\n * @since 2.0.0\n */\n\nexports.toNullable = /*#__PURE__*/exports.match(function_1.constNull, function_1.identity);\n/**\n * Extracts the value out of the structure, if it exists. Otherwise returns `undefined`.\n *\n * @example\n * import { some, none, toUndefined } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     toUndefined\n *   ),\n *   1\n * )\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     toUndefined\n *   ),\n *   undefined\n * )\n *\n * @category interop\n * @since 2.0.0\n */\n\nexports.toUndefined = /*#__PURE__*/exports.match(function_1.constUndefined, function_1.identity); // -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\n\nvar _map = function (fa, f) {\n  return function_1.pipe(fa, exports.map(f));\n};\n\nvar _ap = function (fab, fa) {\n  return function_1.pipe(fab, exports.ap(fa));\n};\n\nvar _chain = function (ma, f) {\n  return function_1.pipe(ma, exports.chain(f));\n};\n\nvar _reduce = function (fa, b, f) {\n  return function_1.pipe(fa, exports.reduce(b, f));\n};\n\nvar _foldMap = function (M) {\n  var foldMapM = exports.foldMap(M);\n  return function (fa, f) {\n    return function_1.pipe(fa, foldMapM(f));\n  };\n};\n\nvar _reduceRight = function (fa, b, f) {\n  return function_1.pipe(fa, exports.reduceRight(b, f));\n};\n\nvar _traverse = function (F) {\n  var traverseF = exports.traverse(F);\n  return function (ta, f) {\n    return function_1.pipe(ta, traverseF(f));\n  };\n};\n/* istanbul ignore next */\n\n\nvar _alt = function (fa, that) {\n  return function_1.pipe(fa, exports.alt(that));\n};\n\nvar _filter = function (fa, predicate) {\n  return function_1.pipe(fa, exports.filter(predicate));\n};\n/* istanbul ignore next */\n\n\nvar _filterMap = function (fa, f) {\n  return function_1.pipe(fa, exports.filterMap(f));\n};\n/* istanbul ignore next */\n\n\nvar _extend = function (wa, f) {\n  return function_1.pipe(wa, exports.extend(f));\n};\n/* istanbul ignore next */\n\n\nvar _partition = function (fa, predicate) {\n  return function_1.pipe(fa, exports.partition(predicate));\n};\n/* istanbul ignore next */\n\n\nvar _partitionMap = function (fa, f) {\n  return function_1.pipe(fa, exports.partitionMap(f));\n};\n/* istanbul ignore next */\n\n\nvar _wither = function (F) {\n  var witherF = exports.wither(F);\n  return function (fa, f) {\n    return function_1.pipe(fa, witherF(f));\n  };\n};\n/* istanbul ignore next */\n\n\nvar _wilt = function (F) {\n  var wiltF = exports.wilt(F);\n  return function (fa, f) {\n    return function_1.pipe(fa, wiltF(f));\n  };\n}; // -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.0.0\n */\n\n\nvar map = function (f) {\n  return function (fa) {\n    return exports.isNone(fa) ? exports.none : exports.some(f(fa.value));\n  };\n};\n\nexports.map = map;\n/**\n * Apply a function to an argument under a type constructor.\n *\n * @category Apply\n * @since 2.0.0\n */\n\nvar ap = function (fa) {\n  return function (fab) {\n    return exports.isNone(fab) ? exports.none : exports.isNone(fa) ? exports.none : exports.some(fab.value(fa.value));\n  };\n};\n\nexports.ap = ap;\n/**\n * @category Pointed\n * @since 2.7.0\n */\n\nexports.of = exports.some;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category Monad\n * @since 2.0.0\n */\n\nvar chain = function (f) {\n  return function (ma) {\n    return exports.isNone(ma) ? exports.none : f(ma.value);\n  };\n};\n\nexports.chain = chain;\n/**\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.0.0\n */\n\nexports.flatten = /*#__PURE__*/exports.chain(function_1.identity);\n/**\n * Less strict version of [`alt`](#alt).\n *\n * @category Alt\n * @since 2.9.0\n */\n\nvar altW = function (that) {\n  return function (fa) {\n    return exports.isNone(fa) ? that() : fa;\n  };\n};\n\nexports.altW = altW;\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * In case of `Option` returns the left-most non-`None` value.\n *\n * @example\n * import * as O from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     O.some('a'),\n *     O.alt(() => O.some('b'))\n *   ),\n *   O.some('a')\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     O.none,\n *     O.alt(() => O.some('b'))\n *   ),\n *   O.some('b')\n * )\n *\n * @category Alt\n * @since 2.0.0\n */\n\nexports.alt = exports.altW;\n/**\n * @category Alternative\n * @since 2.7.0\n */\n\nvar zero = function () {\n  return exports.none;\n};\n\nexports.zero = zero;\n/**\n * @category MonadThrow\n * @since 2.7.0\n */\n\nvar throwError = function () {\n  return exports.none;\n};\n\nexports.throwError = throwError;\n/**\n * @category Extend\n * @since 2.0.0\n */\n\nvar extend = function (f) {\n  return function (wa) {\n    return exports.isNone(wa) ? exports.none : exports.some(f(wa));\n  };\n};\n\nexports.extend = extend;\n/**\n * Derivable from `Extend`.\n *\n * @category combinators\n * @since 2.0.0\n */\n\nexports.duplicate = /*#__PURE__*/exports.extend(function_1.identity);\n/**\n * @category Foldable\n * @since 2.0.0\n */\n\nvar reduce = function (b, f) {\n  return function (fa) {\n    return exports.isNone(fa) ? b : f(b, fa.value);\n  };\n};\n\nexports.reduce = reduce;\n/**\n * @category Foldable\n * @since 2.0.0\n */\n\nvar foldMap = function (M) {\n  return function (f) {\n    return function (fa) {\n      return exports.isNone(fa) ? M.empty : f(fa.value);\n    };\n  };\n};\n\nexports.foldMap = foldMap;\n/**\n * @category Foldable\n * @since 2.0.0\n */\n\nvar reduceRight = function (b, f) {\n  return function (fa) {\n    return exports.isNone(fa) ? b : f(fa.value, b);\n  };\n};\n\nexports.reduceRight = reduceRight;\n/**\n * @category Compactable\n * @since 2.0.0\n */\n\nexports.compact = exports.flatten;\nvar defaultSeparated = /*#__PURE__*/Separated_1.separated(exports.none, exports.none);\n/**\n * @category Compactable\n * @since 2.0.0\n */\n\nvar separate = function (ma) {\n  return exports.isNone(ma) ? defaultSeparated : Separated_1.separated(getLeft(ma.value), getRight(ma.value));\n};\n\nexports.separate = separate;\n/**\n * @category Filterable\n * @since 2.0.0\n */\n\nvar filter = function (predicate) {\n  return function (fa) {\n    return exports.isNone(fa) ? exports.none : predicate(fa.value) ? fa : exports.none;\n  };\n};\n\nexports.filter = filter;\n/**\n * @category Filterable\n * @since 2.0.0\n */\n\nvar filterMap = function (f) {\n  return function (fa) {\n    return exports.isNone(fa) ? exports.none : f(fa.value);\n  };\n};\n\nexports.filterMap = filterMap;\n/**\n * @category Filterable\n * @since 2.0.0\n */\n\nvar partition = function (predicate) {\n  return function (fa) {\n    return Separated_1.separated(_filter(fa, function (a) {\n      return !predicate(a);\n    }), _filter(fa, predicate));\n  };\n};\n\nexports.partition = partition;\n/**\n * @category Filterable\n * @since 2.0.0\n */\n\nvar partitionMap = function (f) {\n  return function_1.flow(exports.map(f), exports.separate);\n};\n\nexports.partitionMap = partitionMap;\n/**\n * @category Traversable\n * @since 2.6.3\n */\n\nvar traverse = function (F) {\n  return function (f) {\n    return function (ta) {\n      return exports.isNone(ta) ? F.of(exports.none) : F.map(f(ta.value), exports.some);\n    };\n  };\n};\n\nexports.traverse = traverse;\n/**\n * @category Traversable\n * @since 2.6.3\n */\n\nvar sequence = function (F) {\n  return function (ta) {\n    return exports.isNone(ta) ? F.of(exports.none) : F.map(ta.value, exports.some);\n  };\n};\n\nexports.sequence = sequence;\n/**\n * @category Witherable\n * @since 2.6.5\n */\n\nvar wither = function (F) {\n  return function (f) {\n    return function (fa) {\n      return exports.isNone(fa) ? F.of(exports.none) : f(fa.value);\n    };\n  };\n};\n\nexports.wither = wither;\n/**\n * @category Witherable\n * @since 2.6.5\n */\n\nvar wilt = function (F) {\n  return function (f) {\n    return function (fa) {\n      return exports.isNone(fa) ? F.of(defaultSeparated) : F.map(f(fa.value), function (e) {\n        return Separated_1.separated(getLeft(e), getRight(e));\n      });\n    };\n  };\n};\n\nexports.wilt = wilt; // -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n\n/**\n * @category instances\n * @since 2.0.0\n */\n\nexports.URI = 'Option';\n/**\n * @category instances\n * @since 2.0.0\n */\n\nfunction getShow(S) {\n  return {\n    show: function (ma) {\n      return exports.isNone(ma) ? 'none' : \"some(\" + S.show(ma.value) + \")\";\n    }\n  };\n}\n\nexports.getShow = getShow;\n/**\n * @example\n * import { none, some, getEq } from 'fp-ts/Option'\n * import * as N from 'fp-ts/number'\n *\n * const E = getEq(N.Eq)\n * assert.strictEqual(E.equals(none, none), true)\n * assert.strictEqual(E.equals(none, some(1)), false)\n * assert.strictEqual(E.equals(some(1), none), false)\n * assert.strictEqual(E.equals(some(1), some(2)), false)\n * assert.strictEqual(E.equals(some(1), some(1)), true)\n *\n * @category instances\n * @since 2.0.0\n */\n\nfunction getEq(E) {\n  return {\n    equals: function (x, y) {\n      return x === y || (exports.isNone(x) ? exports.isNone(y) : exports.isNone(y) ? false : E.equals(x.value, y.value));\n    }\n  };\n}\n\nexports.getEq = getEq;\n/**\n * The `Ord` instance allows `Option` values to be compared with\n * `compare`, whenever there is an `Ord` instance for\n * the type the `Option` contains.\n *\n * `None` is considered to be less than any `Some` value.\n *\n *\n * @example\n * import { none, some, getOrd } from 'fp-ts/Option'\n * import * as N from 'fp-ts/number'\n *\n * const O = getOrd(N.Ord)\n * assert.strictEqual(O.compare(none, none), 0)\n * assert.strictEqual(O.compare(none, some(1)), -1)\n * assert.strictEqual(O.compare(some(1), none), 1)\n * assert.strictEqual(O.compare(some(1), some(2)), -1)\n * assert.strictEqual(O.compare(some(1), some(1)), 0)\n *\n * @category instances\n * @since 2.0.0\n */\n\nfunction getOrd(O) {\n  return {\n    equals: getEq(O).equals,\n    compare: function (x, y) {\n      return x === y ? 0 : exports.isSome(x) ? exports.isSome(y) ? O.compare(x.value, y.value) : 1 : -1;\n    }\n  };\n}\n\nexports.getOrd = getOrd;\n/**\n * Monoid returning the left-most non-`None` value\n *\n * | x       | y       | concat(x, y) |\n * | ------- | ------- | ------------ |\n * | none    | none    | none         |\n * | some(a) | none    | some(a)      |\n * | none    | some(a) | some(a)      |\n * | some(a) | some(b) | some(a)      |\n *\n * @example\n * import { getFirstMonoid, some, none } from 'fp-ts/Option'\n *\n * const M = getFirstMonoid<number>()\n * assert.deepStrictEqual(M.concat(none, none), none)\n * assert.deepStrictEqual(M.concat(some(1), none), some(1))\n * assert.deepStrictEqual(M.concat(none, some(1)), some(1))\n * assert.deepStrictEqual(M.concat(some(1), some(2)), some(1))\n *\n * @category instances\n * @since 2.0.0\n */\n\nfunction getFirstMonoid() {\n  return {\n    concat: function (x, y) {\n      return exports.isNone(x) ? y : x;\n    },\n    empty: exports.none\n  };\n}\n\nexports.getFirstMonoid = getFirstMonoid;\n/**\n * Monoid returning the right-most non-`None` value\n *\n * | x       | y       | concat(x, y) |\n * | ------- | ------- | ------------ |\n * | none    | none    | none         |\n * | some(a) | none    | some(a)      |\n * | none    | some(a) | some(a)      |\n * | some(a) | some(b) | some(b)      |\n *\n * @example\n * import { getLastMonoid, some, none } from 'fp-ts/Option'\n *\n * const M = getLastMonoid<number>()\n * assert.deepStrictEqual(M.concat(none, none), none)\n * assert.deepStrictEqual(M.concat(some(1), none), some(1))\n * assert.deepStrictEqual(M.concat(none, some(1)), some(1))\n * assert.deepStrictEqual(M.concat(some(1), some(2)), some(2))\n *\n * @category instances\n * @since 2.0.0\n */\n\nfunction getLastMonoid() {\n  return {\n    concat: function (x, y) {\n      return exports.isNone(y) ? x : y;\n    },\n    empty: exports.none\n  };\n}\n\nexports.getLastMonoid = getLastMonoid;\n/**\n * Monoid returning the left-most non-`None` value. If both operands are `Some`s then the inner values are\n * concatenated using the provided `Semigroup`\n *\n * | x       | y       | concat(x, y)       |\n * | ------- | ------- | ------------------ |\n * | none    | none    | none               |\n * | some(a) | none    | some(a)            |\n * | none    | some(a) | some(a)            |\n * | some(a) | some(b) | some(concat(a, b)) |\n *\n * @example\n * import { getMonoid, some, none } from 'fp-ts/Option'\n * import { SemigroupSum } from 'fp-ts/number'\n *\n * const M = getMonoid(SemigroupSum)\n * assert.deepStrictEqual(M.concat(none, none), none)\n * assert.deepStrictEqual(M.concat(some(1), none), some(1))\n * assert.deepStrictEqual(M.concat(none, some(1)), some(1))\n * assert.deepStrictEqual(M.concat(some(1), some(2)), some(3))\n *\n * @category instances\n * @since 2.0.0\n */\n\nfunction getMonoid(S) {\n  return {\n    concat: function (x, y) {\n      return exports.isNone(x) ? y : exports.isNone(y) ? x : exports.some(S.concat(x.value, y.value));\n    },\n    empty: exports.none\n  };\n}\n\nexports.getMonoid = getMonoid;\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Functor = {\n  URI: exports.URI,\n  map: _map\n};\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\n\nexports.flap = /*#__PURE__*/Functor_1.flap(exports.Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\n\nexports.Pointed = {\n  URI: exports.URI,\n  of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\n\nexports.Apply = {\n  URI: exports.URI,\n  map: _map,\n  ap: _ap\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.0.0\n */\n\nexports.apFirst = /*#__PURE__*/Apply_1.apFirst(exports.Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.0.0\n */\n\nexports.apSecond = /*#__PURE__*/Apply_1.apSecond(exports.Apply);\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Applicative = {\n  URI: exports.URI,\n  map: _map,\n  ap: _ap,\n  of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\n\nexports.Chain = {\n  URI: exports.URI,\n  map: _map,\n  ap: _ap,\n  chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Monad = {\n  URI: exports.URI,\n  map: _map,\n  ap: _ap,\n  of: exports.of,\n  chain: _chain\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.0.0\n */\n\nexports.chainFirst = /*#__PURE__*/Chain_1.chainFirst(exports.Chain);\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Foldable = {\n  URI: exports.URI,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Alt = {\n  URI: exports.URI,\n  map: _map,\n  alt: _alt\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Alternative = {\n  URI: exports.URI,\n  map: _map,\n  ap: _ap,\n  of: exports.of,\n  alt: _alt,\n  zero: exports.zero\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Extend = {\n  URI: exports.URI,\n  map: _map,\n  extend: _extend\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Compactable = {\n  URI: exports.URI,\n  compact: exports.compact,\n  separate: exports.separate\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Filterable = {\n  URI: exports.URI,\n  map: _map,\n  compact: exports.compact,\n  separate: exports.separate,\n  filter: _filter,\n  filterMap: _filterMap,\n  partition: _partition,\n  partitionMap: _partitionMap\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Traversable = {\n  URI: exports.URI,\n  map: _map,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight,\n  traverse: _traverse,\n  sequence: exports.sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Witherable = {\n  URI: exports.URI,\n  map: _map,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight,\n  traverse: _traverse,\n  sequence: exports.sequence,\n  compact: exports.compact,\n  separate: exports.separate,\n  filter: _filter,\n  filterMap: _filterMap,\n  partition: _partition,\n  partitionMap: _partitionMap,\n  wither: _wither,\n  wilt: _wilt\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.MonadThrow = {\n  URI: exports.URI,\n  map: _map,\n  ap: _ap,\n  of: exports.of,\n  chain: _chain,\n  throwError: exports.throwError\n}; // -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n\n/**\n * Returns `true` if `ma` contains `a`\n *\n * @example\n * import { some, none, elem } from 'fp-ts/Option'\n * import * as N from 'fp-ts/number'\n *\n * assert.strictEqual(elem(N.Eq)(1, some(1)), true)\n * assert.strictEqual(elem(N.Eq)(2, some(1)), false)\n * assert.strictEqual(elem(N.Eq)(1, none), false)\n *\n * @since 2.0.0\n */\n\nfunction elem(E) {\n  return function (a, ma) {\n    return exports.isNone(ma) ? false : E.equals(a, ma.value);\n  };\n}\n\nexports.elem = elem;\n/**\n * Returns `true` if the predicate is satisfied by the wrapped value\n *\n * @example\n * import { some, none, exists } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     exists(n => n > 0)\n *   ),\n *   true\n * )\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     exists(n => n > 1)\n *   ),\n *   false\n * )\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     exists(n => n > 0)\n *   ),\n *   false\n * )\n *\n * @since 2.0.0\n */\n\nfunction exists(predicate) {\n  return function (ma) {\n    return exports.isNone(ma) ? false : predicate(ma.value);\n  };\n}\n\nexports.exists = exists;\n/**\n * Returns a `Refinement` (i.e. a custom type guard) from a `Option` returning function.\n * This function ensures that a custom type guard definition is type-safe.\n *\n * ```ts\n * import { some, none, getRefinement } from 'fp-ts/Option'\n *\n * type A = { type: 'A' }\n * type B = { type: 'B' }\n * type C = A | B\n *\n * const isA = (c: C): c is A => c.type === 'B' // <= typo but typescript doesn't complain\n * const isA = getRefinement<C, A>(c => (c.type === 'B' ? some(c) : none)) // static error: Type '\"B\"' is not assignable to type '\"A\"'\n * ```\n *\n * @since 2.0.0\n */\n\nfunction getRefinement(getOption) {\n  return function (a) {\n    return exports.isSome(getOption(a));\n  };\n}\n\nexports.getRefinement = getRefinement; // -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n\n/**\n * @since 2.9.0\n */\n\nexports.Do = /*#__PURE__*/exports.of({});\n/**\n * @since 2.8.0\n */\n\nexports.bindTo = /*#__PURE__*/Functor_1.bindTo(exports.Functor);\n/**\n * @since 2.8.0\n */\n\nexports.bind = /*#__PURE__*/Chain_1.bind(exports.Chain); // -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n\n/**\n * @since 2.8.0\n */\n\nexports.apS = /*#__PURE__*/Apply_1.apS(exports.Apply); // -------------------------------------------------------------------------------------\n// array utils\n// -------------------------------------------------------------------------------------\n\n/**\n * Equivalent to `ReadonlyArray#traverseWithIndex(Applicative)`.\n *\n * @since 2.9.0\n */\n\nvar traverseArrayWithIndex = function (f) {\n  return function (as) {\n    var out = [];\n\n    for (var i = 0; i < as.length; i++) {\n      var b = f(i, as[i]);\n\n      if (exports.isNone(b)) {\n        return exports.none;\n      }\n\n      out.push(b.value);\n    }\n\n    return exports.some(out);\n  };\n};\n\nexports.traverseArrayWithIndex = traverseArrayWithIndex;\n/**\n * Equivalent to `ReadonlyArray#traverse(Applicative)`.\n *\n * @since 2.9.0\n */\n\nvar traverseArray = function (f) {\n  return exports.traverseArrayWithIndex(function (_, a) {\n    return f(a);\n  });\n};\n\nexports.traverseArray = traverseArray;\n/**\n * Equivalent to `ReadonlyArray#sequence(Applicative)`.\n *\n * @since 2.9.0\n */\n\nexports.sequenceArray = /*#__PURE__*/exports.traverseArray(function_1.identity); // -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n\n/**\n * Use [`chainNullableK`](#chainnullablek) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\n\nexports.mapNullable = exports.chainNullableK;\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\n\nexports.option = {\n  URI: exports.URI,\n  map: _map,\n  of: exports.of,\n  ap: _ap,\n  chain: _chain,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight,\n  traverse: _traverse,\n  sequence: exports.sequence,\n  zero: exports.zero,\n  alt: _alt,\n  extend: _extend,\n  compact: exports.compact,\n  separate: exports.separate,\n  filter: _filter,\n  filterMap: _filterMap,\n  partition: _partition,\n  partitionMap: _partitionMap,\n  wither: _wither,\n  wilt: _wilt,\n  throwError: exports.throwError\n};\n/**\n * Use [`getApplySemigroup`](./Apply.ts.html#getApplySemigroup) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\n\nexports.getApplySemigroup = /*#__PURE__*/Apply_1.getApplySemigroup(exports.Apply);\n/**\n * Use [`getApplicativeMonoid`](./Applicative.ts.html#getApplicativeMonoid) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\n\nexports.getApplyMonoid = /*#__PURE__*/Applicative_1.getApplicativeMonoid(exports.Applicative);","map":{"version":3,"sources":["/Users/frankenstein/projects/minter/node_modules/fp-ts/lib/Option.js"],"names":["__createBinding","Object","create","o","m","k","k2","undefined","defineProperty","enumerable","get","__setModuleDefault","v","value","__importStar","mod","__esModule","result","prototype","hasOwnProperty","call","exports","getFirstMonoid","getOrd","getEq","getShow","URI","wilt","wither","sequence","traverse","partitionMap","partition","filterMap","filter","separate","compact","reduceRight","foldMap","reduce","duplicate","extend","throwError","zero","alt","altW","flatten","chain","of","ap","map","toUndefined","toNullable","chainNullableK","fromNullableK","tryCatchK","tryCatch","fromNullable","getOrElse","getOrElseW","fold","match","foldW","matchW","fromEither","getRight","getLeft","fromPredicate","some","none","isNone","isSome","getApplyMonoid","getApplySemigroup","option","mapNullable","sequenceArray","traverseArray","traverseArrayWithIndex","apS","bind","bindTo","Do","getRefinement","exists","elem","MonadThrow","Witherable","Traversable","Filterable","Compactable","Extend","Alternative","Alt","Foldable","chainFirst","Monad","Chain","Applicative","apSecond","apFirst","Apply","Pointed","flap","Functor","getMonoid","getLastMonoid","Applicative_1","require","Apply_1","Chain_1","function_1","Functor_1","_","Separated_1","fa","_tag","a","predicate","ma","left","right","onNone","onSome","f","e","_i","arguments","length","apply","flow","constNull","identity","constUndefined","_map","pipe","_ap","fab","_chain","_reduce","b","_foldMap","M","foldMapM","_reduceRight","_traverse","F","traverseF","ta","_alt","that","_filter","_filterMap","_extend","wa","_partition","_partitionMap","_wither","witherF","_wilt","wiltF","empty","defaultSeparated","separated","S","show","E","equals","x","y","O","compare","concat","getOption","as","out","i","push","getApplicativeMonoid"],"mappings":"AAAA;;AACA,IAAIA,eAAe,GAAI,QAAQ,KAAKA,eAAd,KAAmCC,MAAM,CAACC,MAAP,GAAiB,UAASC,CAAT,EAAYC,CAAZ,EAAeC,CAAf,EAAkBC,EAAlB,EAAsB;AAC5F,MAAIA,EAAE,KAAKC,SAAX,EAAsBD,EAAE,GAAGD,CAAL;AACtBJ,EAAAA,MAAM,CAACO,cAAP,CAAsBL,CAAtB,EAAyBG,EAAzB,EAA6B;AAAEG,IAAAA,UAAU,EAAE,IAAd;AAAoBC,IAAAA,GAAG,EAAE,YAAW;AAAE,aAAON,CAAC,CAACC,CAAD,CAAR;AAAc;AAApD,GAA7B;AACH,CAHwD,GAGnD,UAASF,CAAT,EAAYC,CAAZ,EAAeC,CAAf,EAAkBC,EAAlB,EAAsB;AACxB,MAAIA,EAAE,KAAKC,SAAX,EAAsBD,EAAE,GAAGD,CAAL;AACtBF,EAAAA,CAAC,CAACG,EAAD,CAAD,GAAQF,CAAC,CAACC,CAAD,CAAT;AACH,CANqB,CAAtB;;AAOA,IAAIM,kBAAkB,GAAI,QAAQ,KAAKA,kBAAd,KAAsCV,MAAM,CAACC,MAAP,GAAiB,UAASC,CAAT,EAAYS,CAAZ,EAAe;AAC3FX,EAAAA,MAAM,CAACO,cAAP,CAAsBL,CAAtB,EAAyB,SAAzB,EAAoC;AAAEM,IAAAA,UAAU,EAAE,IAAd;AAAoBI,IAAAA,KAAK,EAAED;AAA3B,GAApC;AACH,CAF8D,GAE1D,UAAST,CAAT,EAAYS,CAAZ,EAAe;AAChBT,EAAAA,CAAC,CAAC,SAAD,CAAD,GAAeS,CAAf;AACH,CAJwB,CAAzB;;AAKA,IAAIE,YAAY,GAAI,QAAQ,KAAKA,YAAd,IAA+B,UAAUC,GAAV,EAAe;AAC7D,MAAIA,GAAG,IAAIA,GAAG,CAACC,UAAf,EAA2B,OAAOD,GAAP;AAC3B,MAAIE,MAAM,GAAG,EAAb;AACA,MAAIF,GAAG,IAAI,IAAX,EAAiB,KAAK,IAAIV,CAAT,IAAcU,GAAd,EAAmB,IAAIV,CAAC,KAAK,SAAN,IAAmBJ,MAAM,CAACiB,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCL,GAArC,EAA0CV,CAA1C,CAAvB,EAAqEL,eAAe,CAACiB,MAAD,EAASF,GAAT,EAAcV,CAAd,CAAf;;AACzGM,EAAAA,kBAAkB,CAACM,MAAD,EAASF,GAAT,CAAlB;;AACA,SAAOE,MAAP;AACH,CAND;;AAOAhB,MAAM,CAACO,cAAP,CAAsBa,OAAtB,EAA+B,YAA/B,EAA6C;AAAER,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAQ,OAAO,CAACC,cAAR,GAAyBD,OAAO,CAACE,MAAR,GAAiBF,OAAO,CAACG,KAAR,GAAgBH,OAAO,CAACI,OAAR,GAAkBJ,OAAO,CAACK,GAAR,GAAcL,OAAO,CAACM,IAAR,GAAeN,OAAO,CAACO,MAAR,GAAiBP,OAAO,CAACQ,QAAR,GAAmBR,OAAO,CAACS,QAAR,GAAmBT,OAAO,CAACU,YAAR,GAAuBV,OAAO,CAACW,SAAR,GAAoBX,OAAO,CAACY,SAAR,GAAoBZ,OAAO,CAACa,MAAR,GAAiBb,OAAO,CAACc,QAAR,GAAmBd,OAAO,CAACe,OAAR,GAAkBf,OAAO,CAACgB,WAAR,GAAsBhB,OAAO,CAACiB,OAAR,GAAkBjB,OAAO,CAACkB,MAAR,GAAiBlB,OAAO,CAACmB,SAAR,GAAoBnB,OAAO,CAACoB,MAAR,GAAiBpB,OAAO,CAACqB,UAAR,GAAqBrB,OAAO,CAACsB,IAAR,GAAetB,OAAO,CAACuB,GAAR,GAAcvB,OAAO,CAACwB,IAAR,GAAexB,OAAO,CAACyB,OAAR,GAAkBzB,OAAO,CAAC0B,KAAR,GAAgB1B,OAAO,CAAC2B,EAAR,GAAa3B,OAAO,CAAC4B,EAAR,GAAa5B,OAAO,CAAC6B,GAAR,GAAc7B,OAAO,CAAC8B,WAAR,GAAsB9B,OAAO,CAAC+B,UAAR,GAAqB/B,OAAO,CAACgC,cAAR,GAAyBhC,OAAO,CAACiC,aAAR,GAAwBjC,OAAO,CAACkC,SAAR,GAAoBlC,OAAO,CAACmC,QAAR,GAAmBnC,OAAO,CAACoC,YAAR,GAAuBpC,OAAO,CAACqC,SAAR,GAAoBrC,OAAO,CAACsC,UAAR,GAAqBtC,OAAO,CAACuC,IAAR,GAAevC,OAAO,CAACwC,KAAR,GAAgBxC,OAAO,CAACyC,KAAR,GAAgBzC,OAAO,CAAC0C,MAAR,GAAiB1C,OAAO,CAAC2C,UAAR,GAAqB3C,OAAO,CAAC4C,QAAR,GAAmB5C,OAAO,CAAC6C,OAAR,GAAkB7C,OAAO,CAAC8C,aAAR,GAAwB9C,OAAO,CAAC+C,IAAR,GAAe/C,OAAO,CAACgD,IAAR,GAAehD,OAAO,CAACiD,MAAR,GAAiBjD,OAAO,CAACkD,MAAR,GAAiB,KAAK,CAAx5B;AACAlD,OAAO,CAACmD,cAAR,GAAyBnD,OAAO,CAACoD,iBAAR,GAA4BpD,OAAO,CAACqD,MAAR,GAAiBrD,OAAO,CAACsD,WAAR,GAAsBtD,OAAO,CAACuD,aAAR,GAAwBvD,OAAO,CAACwD,aAAR,GAAwBxD,OAAO,CAACyD,sBAAR,GAAiCzD,OAAO,CAAC0D,GAAR,GAAc1D,OAAO,CAAC2D,IAAR,GAAe3D,OAAO,CAAC4D,MAAR,GAAiB5D,OAAO,CAAC6D,EAAR,GAAa7D,OAAO,CAAC8D,aAAR,GAAwB9D,OAAO,CAAC+D,MAAR,GAAiB/D,OAAO,CAACgE,IAAR,GAAehE,OAAO,CAACiE,UAAR,GAAqBjE,OAAO,CAACkE,UAAR,GAAqBlE,OAAO,CAACmE,WAAR,GAAsBnE,OAAO,CAACoE,UAAR,GAAqBpE,OAAO,CAACqE,WAAR,GAAsBrE,OAAO,CAACsE,MAAR,GAAiBtE,OAAO,CAACuE,WAAR,GAAsBvE,OAAO,CAACwE,GAAR,GAAcxE,OAAO,CAACyE,QAAR,GAAmBzE,OAAO,CAAC0E,UAAR,GAAqB1E,OAAO,CAAC2E,KAAR,GAAgB3E,OAAO,CAAC4E,KAAR,GAAgB5E,OAAO,CAAC6E,WAAR,GAAsB7E,OAAO,CAAC8E,QAAR,GAAmB9E,OAAO,CAAC+E,OAAR,GAAkB/E,OAAO,CAACgF,KAAR,GAAgBhF,OAAO,CAACiF,OAAR,GAAkBjF,OAAO,CAACkF,IAAR,GAAelF,OAAO,CAACmF,OAAR,GAAkBnF,OAAO,CAACoF,SAAR,GAAoBpF,OAAO,CAACqF,aAAR,GAAwB,KAAK,CAAvrB;;AACA,IAAIC,aAAa,GAAGC,OAAO,CAAC,eAAD,CAA3B;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,SAAD,CAArB;;AACA,IAAIE,OAAO,GAAGF,OAAO,CAAC,SAAD,CAArB;;AACA,IAAIG,UAAU,GAAGH,OAAO,CAAC,YAAD,CAAxB;;AACA,IAAII,SAAS,GAAGJ,OAAO,CAAC,WAAD,CAAvB;;AACA,IAAIK,CAAC,GAAGnG,YAAY,CAAC8F,OAAO,CAAC,YAAD,CAAR,CAApB;;AACA,IAAIM,WAAW,GAAGN,OAAO,CAAC,aAAD,CAAzB,C,CACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAvF,OAAO,CAACkD,MAAR,GAAiB0C,CAAC,CAAC1C,MAAnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAID,MAAM,GAAG,UAAU6C,EAAV,EAAc;AAAE,SAAOA,EAAE,CAACC,IAAH,KAAY,MAAnB;AAA4B,CAAzD;;AACA/F,OAAO,CAACiD,MAAR,GAAiBA,MAAjB,C,CACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;AACAjD,OAAO,CAACgD,IAAR,GAAe;AAAE+C,EAAAA,IAAI,EAAE;AAAR,CAAf;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIhD,IAAI,GAAG,UAAUiD,CAAV,EAAa;AAAE,SAAQ;AAAED,IAAAA,IAAI,EAAE,MAAR;AAAgBvG,IAAAA,KAAK,EAAEwG;AAAvB,GAAR;AAAsC,CAAhE;;AACAhG,OAAO,CAAC+C,IAAR,GAAeA,IAAf;;AACA,SAASD,aAAT,CAAuBmD,SAAvB,EAAkC;AAC9B,SAAO,UAAUD,CAAV,EAAa;AAAE,WAAQC,SAAS,CAACD,CAAD,CAAT,GAAehG,OAAO,CAAC+C,IAAR,CAAaiD,CAAb,CAAf,GAAiChG,OAAO,CAACgD,IAAjD;AAAyD,GAA/E;AACH;;AACDhD,OAAO,CAAC8C,aAAR,GAAwBA,aAAxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASD,OAAT,CAAiBqD,EAAjB,EAAqB;AACjB,SAAOA,EAAE,CAACH,IAAH,KAAY,OAAZ,GAAsB/F,OAAO,CAACgD,IAA9B,GAAqChD,OAAO,CAAC+C,IAAR,CAAamD,EAAE,CAACC,IAAhB,CAA5C;AACH;;AACDnG,OAAO,CAAC6C,OAAR,GAAkBA,OAAlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASD,QAAT,CAAkBsD,EAAlB,EAAsB;AAClB,SAAOA,EAAE,CAACH,IAAH,KAAY,MAAZ,GAAqB/F,OAAO,CAACgD,IAA7B,GAAoChD,OAAO,CAAC+C,IAAR,CAAamD,EAAE,CAACE,KAAhB,CAA3C;AACH;;AACDpG,OAAO,CAAC4C,QAAR,GAAmBA,QAAnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA5C,OAAO,CAAC2C,UAAR,GAAqBC,QAArB,C,CACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIF,MAAM,GAAG,UAAU2D,MAAV,EAAkBC,MAAlB,EAA0B;AAAE,SAAO,UAAUJ,EAAV,EAAc;AAC1D,WAAOlG,OAAO,CAACiD,MAAR,CAAeiD,EAAf,IAAqBG,MAAM,EAA3B,GAAgCC,MAAM,CAACJ,EAAE,CAAC1G,KAAJ,CAA7C;AACH,GAFwC;AAErC,CAFJ;;AAGAQ,OAAO,CAAC0C,MAAR,GAAiBA,MAAjB;AACA;AACA;AACA;AACA;AACA;AACA;;AACA1C,OAAO,CAACyC,KAAR,GAAgBzC,OAAO,CAAC0C,MAAxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA1C,OAAO,CAACwC,KAAR,GAAgBxC,OAAO,CAAC0C,MAAxB;AACA;AACA;AACA;AACA;AACA;AACA;;AACA1C,OAAO,CAACuC,IAAR,GAAevC,OAAO,CAACwC,KAAvB;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIF,UAAU,GAAG,UAAU+D,MAAV,EAAkB;AAAE,SAAO,UAAUH,EAAV,EAAc;AAAE,WAAQlG,OAAO,CAACiD,MAAR,CAAeiD,EAAf,IAAqBG,MAAM,EAA3B,GAAgCH,EAAE,CAAC1G,KAA3C;AAAoD,GAA3E;AAA8E,CAAnH;;AACAQ,OAAO,CAACsC,UAAR,GAAqBA,UAArB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAtC,OAAO,CAACqC,SAAR,GAAoBrC,OAAO,CAACsC,UAA5B,C,CACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIF,YAAY,GAAG,UAAU4D,CAAV,EAAa;AAAE,SAAQA,CAAC,IAAI,IAAL,GAAYhG,OAAO,CAACgD,IAApB,GAA2BhD,OAAO,CAAC+C,IAAR,CAAaiD,CAAb,CAAnC;AAAsD,CAAxF;;AACAhG,OAAO,CAACoC,YAAR,GAAuBA,YAAvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAID,QAAQ,GAAG,UAAUoE,CAAV,EAAa;AACxB,MAAI;AACA,WAAOvG,OAAO,CAAC+C,IAAR,CAAawD,CAAC,EAAd,CAAP;AACH,GAFD,CAGA,OAAOC,CAAP,EAAU;AACN,WAAOxG,OAAO,CAACgD,IAAf;AACH;AACJ,CAPD;;AAQAhD,OAAO,CAACmC,QAAR,GAAmBA,QAAnB;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAID,SAAS,GAAG,UAAUqE,CAAV,EAAa;AAAE,SAAO,YAAY;AAC9C,QAAIP,CAAC,GAAG,EAAR;;AACA,SAAK,IAAIS,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGC,SAAS,CAACC,MAAhC,EAAwCF,EAAE,EAA1C,EAA8C;AAC1CT,MAAAA,CAAC,CAACS,EAAD,CAAD,GAAQC,SAAS,CAACD,EAAD,CAAjB;AACH;;AACD,WAAOzG,OAAO,CAACmC,QAAR,CAAiB,YAAY;AAAE,aAAOoE,CAAC,CAACK,KAAF,CAAQ,KAAK,CAAb,EAAgBZ,CAAhB,CAAP;AAA4B,KAA3D,CAAP;AACH,GAN8B;AAM3B,CANJ;;AAOAhG,OAAO,CAACkC,SAAR,GAAoBA,SAApB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAID,aAAa,GAAG,UAAUsE,CAAV,EAAa;AAAE,SAAOb,UAAU,CAACmB,IAAX,CAAgBN,CAAhB,EAAmBvG,OAAO,CAACoC,YAA3B,CAAP;AAAkD,CAArF;;AACApC,OAAO,CAACiC,aAAR,GAAwBA,aAAxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAID,cAAc,GAAG,UAAUuE,CAAV,EAAa;AAAE,SAAO,UAAUL,EAAV,EAAc;AACrD,WAAOlG,OAAO,CAACiD,MAAR,CAAeiD,EAAf,IAAqBlG,OAAO,CAACgD,IAA7B,GAAoChD,OAAO,CAACoC,YAAR,CAAqBmE,CAAC,CAACL,EAAE,CAAC1G,KAAJ,CAAtB,CAA3C;AACH,GAFmC;AAEhC,CAFJ;;AAGAQ,OAAO,CAACgC,cAAR,GAAyBA,cAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAhC,OAAO,CAAC+B,UAAR,GACA,aACA/B,OAAO,CAACwC,KAAR,CAAckD,UAAU,CAACoB,SAAzB,EAAoCpB,UAAU,CAACqB,QAA/C,CAFA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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","sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getFirstMonoid = exports.getOrd = exports.getEq = exports.getShow = exports.URI = exports.wilt = exports.wither = exports.sequence = exports.traverse = exports.partitionMap = exports.partition = exports.filterMap = exports.filter = exports.separate = exports.compact = exports.reduceRight = exports.foldMap = exports.reduce = exports.duplicate = exports.extend = exports.throwError = exports.zero = exports.alt = exports.altW = exports.flatten = exports.chain = exports.of = exports.ap = exports.map = exports.toUndefined = exports.toNullable = exports.chainNullableK = exports.fromNullableK = exports.tryCatchK = exports.tryCatch = exports.fromNullable = exports.getOrElse = exports.getOrElseW = exports.fold = exports.match = exports.foldW = exports.matchW = exports.fromEither = exports.getRight = exports.getLeft = exports.fromPredicate = exports.some = exports.none = exports.isNone = exports.isSome = void 0;\nexports.getApplyMonoid = exports.getApplySemigroup = exports.option = exports.mapNullable = exports.sequenceArray = exports.traverseArray = exports.traverseArrayWithIndex = exports.apS = exports.bind = exports.bindTo = exports.Do = exports.getRefinement = exports.exists = exports.elem = exports.MonadThrow = exports.Witherable = exports.Traversable = exports.Filterable = exports.Compactable = exports.Extend = exports.Alternative = exports.Alt = exports.Foldable = exports.chainFirst = exports.Monad = exports.Chain = exports.Applicative = exports.apSecond = exports.apFirst = exports.Apply = exports.Pointed = exports.flap = exports.Functor = exports.getMonoid = exports.getLastMonoid = void 0;\nvar Applicative_1 = require(\"./Applicative\");\nvar Apply_1 = require(\"./Apply\");\nvar Chain_1 = require(\"./Chain\");\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nvar _ = __importStar(require(\"./internal\"));\nvar Separated_1 = require(\"./Separated\");\n// -------------------------------------------------------------------------------------\n// guards\n// -------------------------------------------------------------------------------------\n/**\n * Returns `true` if the option is an instance of `Some`, `false` otherwise.\n *\n * @example\n * import { some, none, isSome } from 'fp-ts/Option'\n *\n * assert.strictEqual(isSome(some(1)), true)\n * assert.strictEqual(isSome(none), false)\n *\n * @category guards\n * @since 2.0.0\n */\nexports.isSome = _.isSome;\n/**\n * Returns `true` if the option is `None`, `false` otherwise.\n *\n * @example\n * import { some, none, isNone } from 'fp-ts/Option'\n *\n * assert.strictEqual(isNone(some(1)), false)\n * assert.strictEqual(isNone(none), true)\n *\n * @category guards\n * @since 2.0.0\n */\nvar isNone = function (fa) { return fa._tag === 'None'; };\nexports.isNone = isNone;\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * `None` doesn't have a constructor, instead you can use it directly as a value. Represents a missing value.\n *\n * @category constructors\n * @since 2.0.0\n */\nexports.none = { _tag: 'None' };\n/**\n * Constructs a `Some`. Represents an optional value that exists.\n *\n * @category constructors\n * @since 2.0.0\n */\nvar some = function (a) { return ({ _tag: 'Some', value: a }); };\nexports.some = some;\nfunction fromPredicate(predicate) {\n    return function (a) { return (predicate(a) ? exports.some(a) : exports.none); };\n}\nexports.fromPredicate = fromPredicate;\n/**\n * Returns the `Left` value of an `Either` if possible.\n *\n * @example\n * import { getLeft, none, some } from 'fp-ts/Option'\n * import { right, left } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(getLeft(right(1)), none)\n * assert.deepStrictEqual(getLeft(left('a')), some('a'))\n *\n * @category constructors\n * @since 2.0.0\n */\nfunction getLeft(ma) {\n    return ma._tag === 'Right' ? exports.none : exports.some(ma.left);\n}\nexports.getLeft = getLeft;\n/**\n * Returns the `Right` value of an `Either` if possible.\n *\n * @example\n * import { getRight, none, some } from 'fp-ts/Option'\n * import { right, left } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(getRight(right(1)), some(1))\n * assert.deepStrictEqual(getRight(left('a')), none)\n *\n * @category constructors\n * @since 2.0.0\n */\nfunction getRight(ma) {\n    return ma._tag === 'Left' ? exports.none : exports.some(ma.right);\n}\nexports.getRight = getRight;\n/**\n * Transforms an `Either` to an `Option` discarding the error.\n *\n * Alias of [getRight](#getright)\n *\n * @category constructors\n * @since 2.0.0\n */\nexports.fromEither = getRight;\n// -------------------------------------------------------------------------------------\n// destructors\n// -------------------------------------------------------------------------------------\n/**\n * Less strict version of [`match`](#match).\n *\n * @category destructors\n * @since 2.10.0\n */\nvar matchW = function (onNone, onSome) { return function (ma) {\n    return exports.isNone(ma) ? onNone() : onSome(ma.value);\n}; };\nexports.matchW = matchW;\n/**\n * Alias of [`matchW`](#matchw).\n *\n * @category destructors\n * @since 2.10.0\n */\nexports.foldW = exports.matchW;\n/**\n * Takes a (lazy) default value, a function, and an `Option` value, if the `Option` value is `None` the default value is\n * returned, otherwise the function is applied to the value inside the `Some` and the result is returned.\n *\n * @example\n * import { some, none, match } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     match(() => 'a none', a => `a some containing ${a}`)\n *   ),\n *   'a some containing 1'\n * )\n *\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     match(() => 'a none', a => `a some containing ${a}`)\n *   ),\n *   'a none'\n * )\n *\n * @category destructors\n * @since 2.10.0\n */\nexports.match = exports.matchW;\n/**\n * Alias of [`match`](#match).\n *\n * @category destructors\n * @since 2.0.0\n */\nexports.fold = exports.match;\n/**\n * Less strict version of [`getOrElse`](#getorelse).\n *\n * @category destructors\n * @since 2.6.0\n */\nvar getOrElseW = function (onNone) { return function (ma) { return (exports.isNone(ma) ? onNone() : ma.value); }; };\nexports.getOrElseW = getOrElseW;\n/**\n * Extracts the value out of the structure, if it exists. Otherwise returns the given default value\n *\n * @example\n * import { some, none, getOrElse } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     getOrElse(() => 0)\n *   ),\n *   1\n * )\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     getOrElse(() => 0)\n *   ),\n *   0\n * )\n *\n * @category destructors\n * @since 2.0.0\n */\nexports.getOrElse = exports.getOrElseW;\n// -------------------------------------------------------------------------------------\n// interop\n// -------------------------------------------------------------------------------------\n/**\n * Constructs a new `Option` from a nullable type. If the value is `null` or `undefined`, returns `None`, otherwise\n * returns the value wrapped in a `Some`.\n *\n * @example\n * import { none, some, fromNullable } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(fromNullable(undefined), none)\n * assert.deepStrictEqual(fromNullable(null), none)\n * assert.deepStrictEqual(fromNullable(1), some(1))\n *\n * @category interop\n * @since 2.0.0\n */\nvar fromNullable = function (a) { return (a == null ? exports.none : exports.some(a)); };\nexports.fromNullable = fromNullable;\n/**\n * Transforms an exception into an `Option`. If `f` throws, returns `None`, otherwise returns the output wrapped in a\n * `Some`.\n *\n * See also [`tryCatchK`](#trycatchk).\n *\n * @example\n * import { none, some, tryCatch } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(\n *   tryCatch(() => {\n *     throw new Error()\n *   }),\n *   none\n * )\n * assert.deepStrictEqual(tryCatch(() => 1), some(1))\n *\n * @category interop\n * @since 2.0.0\n */\nvar tryCatch = function (f) {\n    try {\n        return exports.some(f());\n    }\n    catch (e) {\n        return exports.none;\n    }\n};\nexports.tryCatch = tryCatch;\n/**\n * Converts a function that may throw to one returning a `Option`.\n *\n * @category interop\n * @since 2.10.0\n */\nvar tryCatchK = function (f) { return function () {\n    var a = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        a[_i] = arguments[_i];\n    }\n    return exports.tryCatch(function () { return f.apply(void 0, a); });\n}; };\nexports.tryCatchK = tryCatchK;\n/**\n * Returns a *smart constructor* from a function that returns a nullable value.\n *\n * @example\n * import { fromNullableK, none, some } from 'fp-ts/Option'\n *\n * const f = (s: string): number | undefined => {\n *   const n = parseFloat(s)\n *   return isNaN(n) ? undefined : n\n * }\n *\n * const g = fromNullableK(f)\n *\n * assert.deepStrictEqual(g('1'), some(1))\n * assert.deepStrictEqual(g('a'), none)\n *\n * @category interop\n * @since 2.9.0\n */\nvar fromNullableK = function (f) { return function_1.flow(f, exports.fromNullable); };\nexports.fromNullableK = fromNullableK;\n/**\n * This is `chain` + `fromNullable`, useful when working with optional values.\n *\n * @example\n * import { some, none, fromNullable, chainNullableK } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * interface Employee {\n *   readonly company?: {\n *     readonly address?: {\n *       readonly street?: {\n *         readonly name?: string\n *       }\n *     }\n *   }\n * }\n *\n * const employee1: Employee = { company: { address: { street: { name: 'high street' } } } }\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     fromNullable(employee1.company),\n *     chainNullableK(company => company.address),\n *     chainNullableK(address => address.street),\n *     chainNullableK(street => street.name)\n *   ),\n *   some('high street')\n * )\n *\n * const employee2: Employee = { company: { address: { street: {} } } }\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     fromNullable(employee2.company),\n *     chainNullableK(company => company.address),\n *     chainNullableK(address => address.street),\n *     chainNullableK(street => street.name)\n *   ),\n *   none\n * )\n *\n * @category interop\n * @since 2.9.0\n */\nvar chainNullableK = function (f) { return function (ma) {\n    return exports.isNone(ma) ? exports.none : exports.fromNullable(f(ma.value));\n}; };\nexports.chainNullableK = chainNullableK;\n/**\n * Extracts the value out of the structure, if it exists. Otherwise returns `null`.\n *\n * @example\n * import { some, none, toNullable } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     toNullable\n *   ),\n *   1\n * )\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     toNullable\n *   ),\n *   null\n * )\n *\n * @category interop\n * @since 2.0.0\n */\nexports.toNullable = \n/*#__PURE__*/\nexports.match(function_1.constNull, function_1.identity);\n/**\n * Extracts the value out of the structure, if it exists. Otherwise returns `undefined`.\n *\n * @example\n * import { some, none, toUndefined } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     toUndefined\n *   ),\n *   1\n * )\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     toUndefined\n *   ),\n *   undefined\n * )\n *\n * @category interop\n * @since 2.0.0\n */\nexports.toUndefined = \n/*#__PURE__*/\nexports.match(function_1.constUndefined, function_1.identity);\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\nvar _map = function (fa, f) { return function_1.pipe(fa, exports.map(f)); };\nvar _ap = function (fab, fa) { return function_1.pipe(fab, exports.ap(fa)); };\nvar _chain = function (ma, f) { return function_1.pipe(ma, exports.chain(f)); };\nvar _reduce = function (fa, b, f) { return function_1.pipe(fa, exports.reduce(b, f)); };\nvar _foldMap = function (M) {\n    var foldMapM = exports.foldMap(M);\n    return function (fa, f) { return function_1.pipe(fa, foldMapM(f)); };\n};\nvar _reduceRight = function (fa, b, f) { return function_1.pipe(fa, exports.reduceRight(b, f)); };\nvar _traverse = function (F) {\n    var traverseF = exports.traverse(F);\n    return function (ta, f) { return function_1.pipe(ta, traverseF(f)); };\n};\n/* istanbul ignore next */\nvar _alt = function (fa, that) { return function_1.pipe(fa, exports.alt(that)); };\nvar _filter = function (fa, predicate) { return function_1.pipe(fa, exports.filter(predicate)); };\n/* istanbul ignore next */\nvar _filterMap = function (fa, f) { return function_1.pipe(fa, exports.filterMap(f)); };\n/* istanbul ignore next */\nvar _extend = function (wa, f) { return function_1.pipe(wa, exports.extend(f)); };\n/* istanbul ignore next */\nvar _partition = function (fa, predicate) {\n    return function_1.pipe(fa, exports.partition(predicate));\n};\n/* istanbul ignore next */\nvar _partitionMap = function (fa, f) { return function_1.pipe(fa, exports.partitionMap(f)); };\n/* istanbul ignore next */\nvar _wither = function (F) {\n    var witherF = exports.wither(F);\n    return function (fa, f) { return function_1.pipe(fa, witherF(f)); };\n};\n/* istanbul ignore next */\nvar _wilt = function (F) {\n    var wiltF = exports.wilt(F);\n    return function (fa, f) { return function_1.pipe(fa, wiltF(f)); };\n};\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.0.0\n */\nvar map = function (f) { return function (fa) {\n    return exports.isNone(fa) ? exports.none : exports.some(f(fa.value));\n}; };\nexports.map = map;\n/**\n * Apply a function to an argument under a type constructor.\n *\n * @category Apply\n * @since 2.0.0\n */\nvar ap = function (fa) { return function (fab) {\n    return exports.isNone(fab) ? exports.none : exports.isNone(fa) ? exports.none : exports.some(fab.value(fa.value));\n}; };\nexports.ap = ap;\n/**\n * @category Pointed\n * @since 2.7.0\n */\nexports.of = exports.some;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category Monad\n * @since 2.0.0\n */\nvar chain = function (f) { return function (ma) {\n    return exports.isNone(ma) ? exports.none : f(ma.value);\n}; };\nexports.chain = chain;\n/**\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.flatten = \n/*#__PURE__*/\nexports.chain(function_1.identity);\n/**\n * Less strict version of [`alt`](#alt).\n *\n * @category Alt\n * @since 2.9.0\n */\nvar altW = function (that) { return function (fa) {\n    return exports.isNone(fa) ? that() : fa;\n}; };\nexports.altW = altW;\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * In case of `Option` returns the left-most non-`None` value.\n *\n * @example\n * import * as O from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     O.some('a'),\n *     O.alt(() => O.some('b'))\n *   ),\n *   O.some('a')\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     O.none,\n *     O.alt(() => O.some('b'))\n *   ),\n *   O.some('b')\n * )\n *\n * @category Alt\n * @since 2.0.0\n */\nexports.alt = exports.altW;\n/**\n * @category Alternative\n * @since 2.7.0\n */\nvar zero = function () { return exports.none; };\nexports.zero = zero;\n/**\n * @category MonadThrow\n * @since 2.7.0\n */\nvar throwError = function () { return exports.none; };\nexports.throwError = throwError;\n/**\n * @category Extend\n * @since 2.0.0\n */\nvar extend = function (f) { return function (wa) {\n    return exports.isNone(wa) ? exports.none : exports.some(f(wa));\n}; };\nexports.extend = extend;\n/**\n * Derivable from `Extend`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.duplicate = \n/*#__PURE__*/\nexports.extend(function_1.identity);\n/**\n * @category Foldable\n * @since 2.0.0\n */\nvar reduce = function (b, f) { return function (fa) {\n    return exports.isNone(fa) ? b : f(b, fa.value);\n}; };\nexports.reduce = reduce;\n/**\n * @category Foldable\n * @since 2.0.0\n */\nvar foldMap = function (M) { return function (f) { return function (fa) {\n    return exports.isNone(fa) ? M.empty : f(fa.value);\n}; }; };\nexports.foldMap = foldMap;\n/**\n * @category Foldable\n * @since 2.0.0\n */\nvar reduceRight = function (b, f) { return function (fa) {\n    return exports.isNone(fa) ? b : f(fa.value, b);\n}; };\nexports.reduceRight = reduceRight;\n/**\n * @category Compactable\n * @since 2.0.0\n */\nexports.compact = exports.flatten;\nvar defaultSeparated = \n/*#__PURE__*/\nSeparated_1.separated(exports.none, exports.none);\n/**\n * @category Compactable\n * @since 2.0.0\n */\nvar separate = function (ma) {\n    return exports.isNone(ma) ? defaultSeparated : Separated_1.separated(getLeft(ma.value), getRight(ma.value));\n};\nexports.separate = separate;\n/**\n * @category Filterable\n * @since 2.0.0\n */\nvar filter = function (predicate) { return function (fa) { return (exports.isNone(fa) ? exports.none : predicate(fa.value) ? fa : exports.none); }; };\nexports.filter = filter;\n/**\n * @category Filterable\n * @since 2.0.0\n */\nvar filterMap = function (f) { return function (fa) {\n    return exports.isNone(fa) ? exports.none : f(fa.value);\n}; };\nexports.filterMap = filterMap;\n/**\n * @category Filterable\n * @since 2.0.0\n */\nvar partition = function (predicate) { return function (fa) {\n    return Separated_1.separated(_filter(fa, function (a) { return !predicate(a); }), _filter(fa, predicate));\n}; };\nexports.partition = partition;\n/**\n * @category Filterable\n * @since 2.0.0\n */\nvar partitionMap = function (f) { return function_1.flow(exports.map(f), exports.separate); };\nexports.partitionMap = partitionMap;\n/**\n * @category Traversable\n * @since 2.6.3\n */\nvar traverse = function (F) { return function (f) { return function (ta) { return (exports.isNone(ta) ? F.of(exports.none) : F.map(f(ta.value), exports.some)); }; }; };\nexports.traverse = traverse;\n/**\n * @category Traversable\n * @since 2.6.3\n */\nvar sequence = function (F) { return function (ta) { return (exports.isNone(ta) ? F.of(exports.none) : F.map(ta.value, exports.some)); }; };\nexports.sequence = sequence;\n/**\n * @category Witherable\n * @since 2.6.5\n */\nvar wither = function (F) { return function (f) { return function (fa) { return (exports.isNone(fa) ? F.of(exports.none) : f(fa.value)); }; }; };\nexports.wither = wither;\n/**\n * @category Witherable\n * @since 2.6.5\n */\nvar wilt = function (F) { return function (f) { return function (fa) {\n    return exports.isNone(fa) ? F.of(defaultSeparated) : F.map(f(fa.value), function (e) { return Separated_1.separated(getLeft(e), getRight(e)); });\n}; }; };\nexports.wilt = wilt;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.0.0\n */\nexports.URI = 'Option';\n/**\n * @category instances\n * @since 2.0.0\n */\nfunction getShow(S) {\n    return {\n        show: function (ma) { return (exports.isNone(ma) ? 'none' : \"some(\" + S.show(ma.value) + \")\"); }\n    };\n}\nexports.getShow = getShow;\n/**\n * @example\n * import { none, some, getEq } from 'fp-ts/Option'\n * import * as N from 'fp-ts/number'\n *\n * const E = getEq(N.Eq)\n * assert.strictEqual(E.equals(none, none), true)\n * assert.strictEqual(E.equals(none, some(1)), false)\n * assert.strictEqual(E.equals(some(1), none), false)\n * assert.strictEqual(E.equals(some(1), some(2)), false)\n * assert.strictEqual(E.equals(some(1), some(1)), true)\n *\n * @category instances\n * @since 2.0.0\n */\nfunction getEq(E) {\n    return {\n        equals: function (x, y) { return x === y || (exports.isNone(x) ? exports.isNone(y) : exports.isNone(y) ? false : E.equals(x.value, y.value)); }\n    };\n}\nexports.getEq = getEq;\n/**\n * The `Ord` instance allows `Option` values to be compared with\n * `compare`, whenever there is an `Ord` instance for\n * the type the `Option` contains.\n *\n * `None` is considered to be less than any `Some` value.\n *\n *\n * @example\n * import { none, some, getOrd } from 'fp-ts/Option'\n * import * as N from 'fp-ts/number'\n *\n * const O = getOrd(N.Ord)\n * assert.strictEqual(O.compare(none, none), 0)\n * assert.strictEqual(O.compare(none, some(1)), -1)\n * assert.strictEqual(O.compare(some(1), none), 1)\n * assert.strictEqual(O.compare(some(1), some(2)), -1)\n * assert.strictEqual(O.compare(some(1), some(1)), 0)\n *\n * @category instances\n * @since 2.0.0\n */\nfunction getOrd(O) {\n    return {\n        equals: getEq(O).equals,\n        compare: function (x, y) { return (x === y ? 0 : exports.isSome(x) ? (exports.isSome(y) ? O.compare(x.value, y.value) : 1) : -1); }\n    };\n}\nexports.getOrd = getOrd;\n/**\n * Monoid returning the left-most non-`None` value\n *\n * | x       | y       | concat(x, y) |\n * | ------- | ------- | ------------ |\n * | none    | none    | none         |\n * | some(a) | none    | some(a)      |\n * | none    | some(a) | some(a)      |\n * | some(a) | some(b) | some(a)      |\n *\n * @example\n * import { getFirstMonoid, some, none } from 'fp-ts/Option'\n *\n * const M = getFirstMonoid<number>()\n * assert.deepStrictEqual(M.concat(none, none), none)\n * assert.deepStrictEqual(M.concat(some(1), none), some(1))\n * assert.deepStrictEqual(M.concat(none, some(1)), some(1))\n * assert.deepStrictEqual(M.concat(some(1), some(2)), some(1))\n *\n * @category instances\n * @since 2.0.0\n */\nfunction getFirstMonoid() {\n    return {\n        concat: function (x, y) { return (exports.isNone(x) ? y : x); },\n        empty: exports.none\n    };\n}\nexports.getFirstMonoid = getFirstMonoid;\n/**\n * Monoid returning the right-most non-`None` value\n *\n * | x       | y       | concat(x, y) |\n * | ------- | ------- | ------------ |\n * | none    | none    | none         |\n * | some(a) | none    | some(a)      |\n * | none    | some(a) | some(a)      |\n * | some(a) | some(b) | some(b)      |\n *\n * @example\n * import { getLastMonoid, some, none } from 'fp-ts/Option'\n *\n * const M = getLastMonoid<number>()\n * assert.deepStrictEqual(M.concat(none, none), none)\n * assert.deepStrictEqual(M.concat(some(1), none), some(1))\n * assert.deepStrictEqual(M.concat(none, some(1)), some(1))\n * assert.deepStrictEqual(M.concat(some(1), some(2)), some(2))\n *\n * @category instances\n * @since 2.0.0\n */\nfunction getLastMonoid() {\n    return {\n        concat: function (x, y) { return (exports.isNone(y) ? x : y); },\n        empty: exports.none\n    };\n}\nexports.getLastMonoid = getLastMonoid;\n/**\n * Monoid returning the left-most non-`None` value. If both operands are `Some`s then the inner values are\n * concatenated using the provided `Semigroup`\n *\n * | x       | y       | concat(x, y)       |\n * | ------- | ------- | ------------------ |\n * | none    | none    | none               |\n * | some(a) | none    | some(a)            |\n * | none    | some(a) | some(a)            |\n * | some(a) | some(b) | some(concat(a, b)) |\n *\n * @example\n * import { getMonoid, some, none } from 'fp-ts/Option'\n * import { SemigroupSum } from 'fp-ts/number'\n *\n * const M = getMonoid(SemigroupSum)\n * assert.deepStrictEqual(M.concat(none, none), none)\n * assert.deepStrictEqual(M.concat(some(1), none), some(1))\n * assert.deepStrictEqual(M.concat(none, some(1)), some(1))\n * assert.deepStrictEqual(M.concat(some(1), some(2)), some(3))\n *\n * @category instances\n * @since 2.0.0\n */\nfunction getMonoid(S) {\n    return {\n        concat: function (x, y) { return (exports.isNone(x) ? y : exports.isNone(y) ? x : exports.some(S.concat(x.value, y.value))); },\n        empty: exports.none\n    };\n}\nexports.getMonoid = getMonoid;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: _map\n};\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\nexports.flap = \n/*#__PURE__*/\nFunctor_1.flap(exports.Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Pointed = {\n    URI: exports.URI,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Apply = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.apFirst = \n/*#__PURE__*/\nApply_1.apFirst(exports.Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.apSecond = \n/*#__PURE__*/\nApply_1.apSecond(exports.Apply);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Applicative = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Chain = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Monad = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: _chain\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.chainFirst = \n/*#__PURE__*/\nChain_1.chainFirst(exports.Chain);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Foldable = {\n    URI: exports.URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Alt = {\n    URI: exports.URI,\n    map: _map,\n    alt: _alt\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Alternative = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    alt: _alt,\n    zero: exports.zero\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Extend = {\n    URI: exports.URI,\n    map: _map,\n    extend: _extend\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Compactable = {\n    URI: exports.URI,\n    compact: exports.compact,\n    separate: exports.separate\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Filterable = {\n    URI: exports.URI,\n    map: _map,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Traversable = {\n    URI: exports.URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Witherable = {\n    URI: exports.URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    wither: _wither,\n    wilt: _wilt\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.MonadThrow = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: _chain,\n    throwError: exports.throwError\n};\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * Returns `true` if `ma` contains `a`\n *\n * @example\n * import { some, none, elem } from 'fp-ts/Option'\n * import * as N from 'fp-ts/number'\n *\n * assert.strictEqual(elem(N.Eq)(1, some(1)), true)\n * assert.strictEqual(elem(N.Eq)(2, some(1)), false)\n * assert.strictEqual(elem(N.Eq)(1, none), false)\n *\n * @since 2.0.0\n */\nfunction elem(E) {\n    return function (a, ma) { return (exports.isNone(ma) ? false : E.equals(a, ma.value)); };\n}\nexports.elem = elem;\n/**\n * Returns `true` if the predicate is satisfied by the wrapped value\n *\n * @example\n * import { some, none, exists } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     exists(n => n > 0)\n *   ),\n *   true\n * )\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     exists(n => n > 1)\n *   ),\n *   false\n * )\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     exists(n => n > 0)\n *   ),\n *   false\n * )\n *\n * @since 2.0.0\n */\nfunction exists(predicate) {\n    return function (ma) { return (exports.isNone(ma) ? false : predicate(ma.value)); };\n}\nexports.exists = exists;\n/**\n * Returns a `Refinement` (i.e. a custom type guard) from a `Option` returning function.\n * This function ensures that a custom type guard definition is type-safe.\n *\n * ```ts\n * import { some, none, getRefinement } from 'fp-ts/Option'\n *\n * type A = { type: 'A' }\n * type B = { type: 'B' }\n * type C = A | B\n *\n * const isA = (c: C): c is A => c.type === 'B' // <= typo but typescript doesn't complain\n * const isA = getRefinement<C, A>(c => (c.type === 'B' ? some(c) : none)) // static error: Type '\"B\"' is not assignable to type '\"A\"'\n * ```\n *\n * @since 2.0.0\n */\nfunction getRefinement(getOption) {\n    return function (a) { return exports.isSome(getOption(a)); };\n}\nexports.getRefinement = getRefinement;\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.9.0\n */\nexports.Do = \n/*#__PURE__*/\nexports.of({});\n/**\n * @since 2.8.0\n */\nexports.bindTo = \n/*#__PURE__*/\nFunctor_1.bindTo(exports.Functor);\n/**\n * @since 2.8.0\n */\nexports.bind = \n/*#__PURE__*/\nChain_1.bind(exports.Chain);\n// -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.8.0\n */\nexports.apS = \n/*#__PURE__*/\nApply_1.apS(exports.Apply);\n// -------------------------------------------------------------------------------------\n// array utils\n// -------------------------------------------------------------------------------------\n/**\n * Equivalent to `ReadonlyArray#traverseWithIndex(Applicative)`.\n *\n * @since 2.9.0\n */\nvar traverseArrayWithIndex = function (f) { return function (as) {\n    var out = [];\n    for (var i = 0; i < as.length; i++) {\n        var b = f(i, as[i]);\n        if (exports.isNone(b)) {\n            return exports.none;\n        }\n        out.push(b.value);\n    }\n    return exports.some(out);\n}; };\nexports.traverseArrayWithIndex = traverseArrayWithIndex;\n/**\n * Equivalent to `ReadonlyArray#traverse(Applicative)`.\n *\n * @since 2.9.0\n */\nvar traverseArray = function (f) {\n    return exports.traverseArrayWithIndex(function (_, a) { return f(a); });\n};\nexports.traverseArray = traverseArray;\n/**\n * Equivalent to `ReadonlyArray#sequence(Applicative)`.\n *\n * @since 2.9.0\n */\nexports.sequenceArray = \n/*#__PURE__*/\nexports.traverseArray(function_1.identity);\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use [`chainNullableK`](#chainnullablek) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nexports.mapNullable = exports.chainNullableK;\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.option = {\n    URI: exports.URI,\n    map: _map,\n    of: exports.of,\n    ap: _ap,\n    chain: _chain,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    zero: exports.zero,\n    alt: _alt,\n    extend: _extend,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    wither: _wither,\n    wilt: _wilt,\n    throwError: exports.throwError\n};\n/**\n * Use [`getApplySemigroup`](./Apply.ts.html#getApplySemigroup) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.getApplySemigroup = \n/*#__PURE__*/\nApply_1.getApplySemigroup(exports.Apply);\n/**\n * Use [`getApplicativeMonoid`](./Applicative.ts.html#getApplicativeMonoid) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.getApplyMonoid = \n/*#__PURE__*/\nApplicative_1.getApplicativeMonoid(exports.Applicative);\n"]},"metadata":{},"sourceType":"script"}