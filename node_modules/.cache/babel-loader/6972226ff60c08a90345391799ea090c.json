{"ast":null,"code":"var _jsxFileName = \"/Users/frankenstein/projects/minter/src/components/Collections/Catalog/Sidebar.tsx\";\nimport React from 'react';\nimport { Flex, Heading } from '@chakra-ui/react';\nimport { CreateCollectionButton } from '../../common/modals/CreateCollection';\nimport { useSelector, useDispatch } from '../../../reducer';\nimport { selectCollection } from '../../../reducer/slices/collections';\nimport CollectionTab from './CollectionTab';\nexport default function Sidebar() {\n  const tzPublicKey = useSelector(s => s.system.tzPublicKey);\n  const state = useSelector(s => s.collections);\n  const dispatch = useDispatch();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Heading, {\n    px: 4,\n    pt: 6,\n    pb: 4,\n    size: \"md\",\n    color: \"brand.darkGray\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, \"Collections\"), /*#__PURE__*/React.createElement(Heading, {\n    fontFamily: \"mono\",\n    px: 4,\n    pb: 2,\n    fontSize: \"sm\",\n    color: \"brand.darkGray\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, \"Featured\"), state.collections[state.globalCollection] ? /*#__PURE__*/React.createElement(CollectionTab, Object.assign({\n    key: state.globalCollection,\n    selected: state.globalCollection === state.selectedCollection,\n    onSelect: address => dispatch(selectCollection(address))\n  }, state.collections[state.globalCollection], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  })) : null, /*#__PURE__*/React.createElement(Heading, {\n    fontFamily: \"mono\",\n    px: 4,\n    pt: 4,\n    pb: 2,\n    fontSize: \"sm\",\n    color: \"brand.darkGray\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \"Your Collections\"), Object.keys(state.collections).filter(address => {\n    var _state$collections$ad, _state$collections$ad2;\n\n    return address !== state.globalCollection && ((_state$collections$ad = state.collections[address]) === null || _state$collections$ad === void 0 ? void 0 : (_state$collections$ad2 = _state$collections$ad.creator) === null || _state$collections$ad2 === void 0 ? void 0 : _state$collections$ad2.address) === tzPublicKey;\n  }).reverse().map((address, idx) => /*#__PURE__*/React.createElement(CollectionTab, Object.assign({\n    key: address + idx,\n    selected: address === state.selectedCollection,\n    onSelect: address => dispatch(selectCollection(address))\n  }, state.collections[address], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Flex, {\n    px: 2,\n    pt: 4,\n    justify: \"center\",\n    pb: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CreateCollectionButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/frankenstein/projects/minter/src/components/Collections/Catalog/Sidebar.tsx"],"names":["React","Flex","Heading","CreateCollectionButton","useSelector","useDispatch","selectCollection","CollectionTab","Sidebar","tzPublicKey","s","system","state","collections","dispatch","globalCollection","selectedCollection","address","Object","keys","filter","creator","reverse","map","idx"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Flex, Heading } from '@chakra-ui/react';\nimport { CreateCollectionButton } from '../../common/modals/CreateCollection';\nimport { useSelector, useDispatch } from '../../../reducer';\nimport {\n  selectCollection\n} from '../../../reducer/slices/collections';\nimport CollectionTab from './CollectionTab';\n\nexport default function Sidebar() {\n  const tzPublicKey = useSelector(s => s.system.tzPublicKey);\n  const state = useSelector(s => s.collections);\n  const dispatch = useDispatch();\n  return (\n    <>\n      <Heading px={4} pt={6} pb={4} size=\"md\" color=\"brand.darkGray\">\n        Collections\n      </Heading>\n      <Heading\n        fontFamily=\"mono\"\n        px={4}\n        pb={2}\n        fontSize=\"sm\"\n        color=\"brand.darkGray\"\n      >\n        Featured\n      </Heading>\n      {state.collections[state.globalCollection] ? (\n        <CollectionTab\n          key={state.globalCollection}\n          selected={state.globalCollection === state.selectedCollection}\n          onSelect={address => dispatch(selectCollection(address))}\n          {...state.collections[state.globalCollection]}\n        />\n      ) : null}\n      <Heading\n        fontFamily=\"mono\"\n        px={4}\n        pt={4}\n        pb={2}\n        fontSize=\"sm\"\n        color=\"brand.darkGray\"\n      >\n        Your Collections\n      </Heading>\n      {Object.keys(state.collections)\n        .filter(\n          address =>\n            address !== state.globalCollection &&\n            state.collections[address]?.creator?.address === tzPublicKey\n        ).reverse()\n        .map((address, idx) => (\n          <CollectionTab\n            key={address + idx}\n            selected={address === state.selectedCollection}\n            onSelect={address => dispatch(selectCollection(address))}\n            {...state.collections[address]}\n          />\n        ))}\n      <Flex px={2} pt={4} justify=\"center\" pb={8}>\n        <CreateCollectionButton />\n      </Flex>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}