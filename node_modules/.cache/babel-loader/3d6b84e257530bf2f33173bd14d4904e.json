{"ast":null,"code":"import _classCallCheck from \"/Users/frankenstein/projects/minter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/frankenstein/projects/minter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { isTextMessageEvent } from '../utils/events';\nexport var MatrixMessageType;\n\n(function (MatrixMessageType) {\n  MatrixMessageType[\"TEXT\"] = \"m.text\";\n})(MatrixMessageType || (MatrixMessageType = {}));\n\nexport var MatrixMessage = /*#__PURE__*/function () {\n  function MatrixMessage(type, sender, content, timestamp) {\n    _classCallCheck(this, MatrixMessage);\n\n    this.type = type;\n    this.sender = sender;\n    this.content = content;\n    this.timestamp = timestamp;\n  }\n  /**\n   * Construct a message from a message event\n   *\n   * @param event\n   */\n\n\n  _createClass(MatrixMessage, null, [{\n    key: \"from\",\n    value: function from(event) {\n      if (isTextMessageEvent(event)) {\n        return new MatrixMessage(event.content.msgtype, event.sender, event.content.body, event.origin_server_ts);\n      } // for now only text messages are supported\n\n\n      return undefined;\n    }\n  }]);\n\n  return MatrixMessage;\n}();","map":{"version":3,"sources":["../../../../src/matrix-client/models/MatrixMessage.ts"],"names":[],"mappings":";;AAAA,SAAS,kBAAT,QAAmC,iBAAnC;AAGA,OAAA,IAAY,iBAAZ;;AAAA,CAAA,UAAY,iBAAZ,EAA6B;AAC3B,EAAA,iBAAA,CAAA,MAAA,CAAA,GAAA,QAAA;AACD,CAFD,EAAY,iBAAiB,KAAjB,iBAAiB,GAAA,EAAA,CAA7B;;AAIA,WAAa,aAAb;AAoBE,yBACkB,IADlB,EAEkB,MAFlB,EAGkB,OAHlB,EAIkB,SAJlB,EAImC;AAAA;;AAHjB,SAAA,IAAA,GAAA,IAAA;AACA,SAAA,MAAA,GAAA,MAAA;AACA,SAAA,OAAA,GAAA,OAAA;AACA,SAAA,SAAA,GAAA,SAAA;AACd;AAxBJ;;;;AAIG;;;AALL;AAAA;AAAA,WAMS,cAAY,KAAZ,EAAmC;AACxC,UAAI,kBAAkB,CAAC,KAAD,CAAtB,EAA+B;AAC7B,eAAO,IAAI,aAAJ,CACL,KAAK,CAAC,OAAN,CAAc,OADT,EAEL,KAAK,CAAC,MAFD,EAGL,KAAK,CAAC,OAAN,CAAc,IAHT,EAIL,KAAK,CAAC,gBAJD,CAAP;AAMD,OARuC,CAUxC;;;AACA,aAAO,SAAP;AACD;AAlBH;;AAAA;AAAA","sourceRoot":"","sourcesContent":["import { isTextMessageEvent } from '../utils/events';\nexport var MatrixMessageType;\n(function (MatrixMessageType) {\n    MatrixMessageType[\"TEXT\"] = \"m.text\";\n})(MatrixMessageType || (MatrixMessageType = {}));\nexport class MatrixMessage {\n    constructor(type, sender, content, timestamp) {\n        this.type = type;\n        this.sender = sender;\n        this.content = content;\n        this.timestamp = timestamp;\n    }\n    /**\n     * Construct a message from a message event\n     *\n     * @param event\n     */\n    static from(event) {\n        if (isTextMessageEvent(event)) {\n            return new MatrixMessage(event.content.msgtype, event.sender, event.content.body, event.origin_server_ts);\n        }\n        // for now only text messages are supported\n        return undefined;\n    }\n}\n//# sourceMappingURL=MatrixMessage.js.map"]},"metadata":{},"sourceType":"module"}