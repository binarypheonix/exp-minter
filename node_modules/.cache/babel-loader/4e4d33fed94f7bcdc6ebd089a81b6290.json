{"ast":null,"code":"import React from'react';import{Box,Button,ModalHeader,ModalFooter,ModalBody,ModalCloseButton,Text,useDisclosure}from'@chakra-ui/react';import{MinterButton}from'../../common';import{useDispatch,useSelector}from'../../../reducer';import{buyTokenAction}from'../../../reducer/async/actions';import FormModal from'./FormModal';import tz from\"../assets/tezos-sym.svg\";export function BuyTokenModal(props){var dispatch=useDispatch();var initialRef=React.useRef(null);return/*#__PURE__*/React.createElement(FormModal,{disclosure:props.disclosure,sync:props.sync,method:\"buyToken\",dispatchThunk:function dispatchThunk(){var _props$token$sale,_props$token$sale2,_props$token$sale3,_props$token$sale4,_props$token$sale5,_props$token$sale6;return dispatch(buyTokenAction({contract:((_props$token$sale=props.token.sale)===null||_props$token$sale===void 0?void 0:_props$token$sale.saleToken.address)||'',tokenId:((_props$token$sale2=props.token.sale)===null||_props$token$sale2===void 0?void 0:_props$token$sale2.saleToken.tokenId)||0,tokenSeller:((_props$token$sale3=props.token.sale)===null||_props$token$sale3===void 0?void 0:_props$token$sale3.seller)||'',salePrice:((_props$token$sale4=props.token.sale)===null||_props$token$sale4===void 0?void 0:_props$token$sale4.price)||0,saleId:((_props$token$sale5=props.token.sale)===null||_props$token$sale5===void 0?void 0:_props$token$sale5.saleId)||0,saleType:((_props$token$sale6=props.token.sale)===null||_props$token$sale6===void 0?void 0:_props$token$sale6.type)||''}));},initialRef:initialRef,pendingMessage:\"Purchasing token...\",completeMessage:\"Token purchased\",body:function body(onSubmit){var _props$token$sale7;return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(ModalHeader,null,\"Checkout\"),/*#__PURE__*/React.createElement(ModalCloseButton,null),/*#__PURE__*/React.createElement(ModalBody,null,/*#__PURE__*/React.createElement(Text,null,\"You are about to purchase\",/*#__PURE__*/React.createElement(Box,{as:\"span\",fontWeight:\"bold\"},' ',props.token.title,\" (\",/*#__PURE__*/React.createElement(\"img\",{src:tz,alt:\"\",width:10,height:\"auto\",style:{display:'inline-block'}}),\" \",(_props$token$sale7=props.token.sale)===null||_props$token$sale7===void 0?void 0:_props$token$sale7.price,\")\"))),/*#__PURE__*/React.createElement(ModalFooter,null,/*#__PURE__*/React.createElement(Button,{variant:\"primaryAction\",onClick:function onClick(){return onSubmit();},isFullWidth:true},\"Buy now\")));}});}export function BuyTokenButton(props){var disclosure=useDisclosure();var _useSelector=useSelector(function(s){return s.status.buyToken;}),status=_useSelector.status;return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(MinterButton,{variant:\"primaryAction\",onClick:disclosure.onOpen,disabled:status==='in_transit'},\"Buy now\"),/*#__PURE__*/React.createElement(BuyTokenModal,Object.assign({},props,{disclosure:disclosure,sync:props.sync})));}","map":{"version":3,"sources":["/Users/frankenstein/projects/minter/src/components/common/modals/BuyToken.tsx"],"names":["React","Box","Button","ModalHeader","ModalFooter","ModalBody","ModalCloseButton","Text","useDisclosure","MinterButton","useDispatch","useSelector","buyTokenAction","FormModal","BuyTokenModal","props","dispatch","initialRef","useRef","disclosure","sync","contract","token","sale","saleToken","address","tokenId","tokenSeller","seller","salePrice","price","saleId","saleType","type","onSubmit","title","tz","display","BuyTokenButton","s","status","buyToken","onOpen"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  Box,\n  Button,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Text,\n  useDisclosure\n} from '@chakra-ui/react';\nimport { MinterButton } from '../../common';\nimport { useDispatch, useSelector } from '../../../reducer';\nimport { buyTokenAction } from '../../../reducer/async/actions';\nimport { Nft } from '../../../lib/nfts/decoders';\nimport FormModal, { BaseModalProps, BaseModalButtonProps } from './FormModal';\nimport tz from '../assets/tezos-sym.svg'\n\ninterface BuyTokenModalProps extends BaseModalProps {\n  token: Nft;\n}\n\nexport function BuyTokenModal(props: BuyTokenModalProps) {\n  const dispatch = useDispatch();\n  const initialRef = React.useRef(null);\n  return (\n    <FormModal\n      disclosure={props.disclosure}\n      sync={props.sync}\n      method=\"buyToken\"\n      dispatchThunk={() =>\n        dispatch(\n          buyTokenAction({\n            contract: props.token.sale?.saleToken.address || '',\n            tokenId: props.token.sale?.saleToken.tokenId || 0,\n            tokenSeller: props.token.sale?.seller || '',\n            salePrice: props.token.sale?.price || 0,\n            saleId: props.token.sale?.saleId || 0,\n            saleType: props.token.sale?.type || ''\n          })\n        )\n      }\n      initialRef={initialRef}\n      pendingMessage=\"Purchasing token...\"\n      completeMessage=\"Token purchased\"\n      body={onSubmit => (\n        <>\n          <ModalHeader>Checkout</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody>\n            <Text>\n              You are about to purchase\n              <Box as=\"span\" fontWeight=\"bold\">\n                {' '}\n                {props.token.title} (<img src={tz} alt=\"\" width={10} height=\"auto\" style={{display: 'inline-block'}}/> {props.token.sale?.price})\n              </Box>\n            </Text>\n          </ModalBody>\n          <ModalFooter>\n            <Button\n              variant=\"primaryAction\"\n              onClick={() => onSubmit()}\n              isFullWidth={true}\n            >\n              Buy now\n            </Button>\n          </ModalFooter>\n        </>\n      )}\n    />\n  );\n}\n\ninterface BuyTokenButtonProps extends BaseModalButtonProps {\n  token: Nft;\n}\n\nexport function BuyTokenButton(props: BuyTokenButtonProps) {\n  const disclosure = useDisclosure();\n  const { status } = useSelector(s => s.status.buyToken)\n\n  return (\n    <>\n      <MinterButton variant=\"primaryAction\" onClick={disclosure.onOpen} disabled={status === 'in_transit'}>\n        Buy now\n      </MinterButton>\n\n      <BuyTokenModal {...props} disclosure={disclosure} sync={props.sync} />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}