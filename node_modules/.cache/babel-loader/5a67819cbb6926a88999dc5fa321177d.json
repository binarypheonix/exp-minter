{"ast":null,"code":"import { createAction } from '@reduxjs/toolkit';\nexport const pushNotification = createAction('sharedAction/pushNotification');\nexport const readNotification = createAction('sharedAction/readNotification');\nexport const deliverNotification = createAction('sharedAction/deliverNotification');\nexport function pendingNotification(requestId, description) {\n  return {\n    requestId,\n    read: false,\n    delivered: false,\n    status: 'pending',\n    title: 'Pending',\n    description,\n    kind: null\n  };\n}\nexport function fulfilledNotification(requestId, description) {\n  return {\n    requestId,\n    read: false,\n    delivered: false,\n    status: 'success',\n    title: 'Complete',\n    description,\n    kind: null\n  };\n}\nexport function notifyPending(requestId, message) {\n  return pushNotification(pendingNotification(requestId, message));\n}\nexport function notifyFulfilled(requestId, message) {\n  return pushNotification(fulfilledNotification(requestId, message));\n}","map":{"version":3,"sources":["/Users/frankenstein/projects/minter/src/reducer/slices/notificationsActions.ts"],"names":["createAction","pushNotification","readNotification","deliverNotification","pendingNotification","requestId","description","read","delivered","status","title","kind","fulfilledNotification","notifyPending","message","notifyFulfilled"],"mappings":"AAAA,SAASA,YAAT,QAA6B,kBAA7B;AAGA,OAAO,MAAMC,gBAAgB,GAAGD,YAAY,CAC1C,+BAD0C,CAArC;AAIP,OAAO,MAAME,gBAAgB,GAAGF,YAAY,CAC1C,+BAD0C,CAArC;AAIP,OAAO,MAAMG,mBAAmB,GAAGH,YAAY,CAC7C,kCAD6C,CAAxC;AAIP,OAAO,SAASI,mBAAT,CACLC,SADK,EAELC,WAFK,EAGS;AACd,SAAO;AACLD,IAAAA,SADK;AAELE,IAAAA,IAAI,EAAE,KAFD;AAGLC,IAAAA,SAAS,EAAE,KAHN;AAILC,IAAAA,MAAM,EAAE,SAJH;AAKLC,IAAAA,KAAK,EAAE,SALF;AAMLJ,IAAAA,WANK;AAOLK,IAAAA,IAAI,EAAE;AAPD,GAAP;AASD;AAED,OAAO,SAASC,qBAAT,CACLP,SADK,EAELC,WAFK,EAGS;AACd,SAAO;AACLD,IAAAA,SADK;AAELE,IAAAA,IAAI,EAAE,KAFD;AAGLC,IAAAA,SAAS,EAAE,KAHN;AAILC,IAAAA,MAAM,EAAE,SAJH;AAKLC,IAAAA,KAAK,EAAE,UALF;AAMLJ,IAAAA,WANK;AAOLK,IAAAA,IAAI,EAAE;AAPD,GAAP;AASD;AAED,OAAO,SAASE,aAAT,CAAuBR,SAAvB,EAA0CS,OAA1C,EAA2D;AAChE,SAAOb,gBAAgB,CAACG,mBAAmB,CAACC,SAAD,EAAYS,OAAZ,CAApB,CAAvB;AACD;AAED,OAAO,SAASC,eAAT,CAAyBV,SAAzB,EAA4CS,OAA5C,EAA6D;AAClE,SAAOb,gBAAgB,CAACW,qBAAqB,CAACP,SAAD,EAAYS,OAAZ,CAAtB,CAAvB;AACD","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\nimport { Notification } from './notifications';\n\nexport const pushNotification = createAction<Notification>(\n  'sharedAction/pushNotification'\n);\n\nexport const readNotification = createAction<string>(\n  'sharedAction/readNotification'\n);\n\nexport const deliverNotification = createAction<string>(\n  'sharedAction/deliverNotification'\n);\n\nexport function pendingNotification(\n  requestId: string,\n  description: string\n): Notification {\n  return {\n    requestId,\n    read: false,\n    delivered: false,\n    status: 'pending',\n    title: 'Pending',\n    description,\n    kind: null\n  };\n}\n\nexport function fulfilledNotification(\n  requestId: string,\n  description: string\n): Notification {\n  return {\n    requestId,\n    read: false,\n    delivered: false,\n    status: 'success',\n    title: 'Complete',\n    description,\n    kind: null\n  };\n}\n\nexport function notifyPending(requestId: string, message: string) {\n  return pushNotification(pendingNotification(requestId, message));\n}\n\nexport function notifyFulfilled(requestId: string, message: string) {\n  return pushNotification(fulfilledNotification(requestId, message));\n}\n"]},"metadata":{},"sourceType":"module"}