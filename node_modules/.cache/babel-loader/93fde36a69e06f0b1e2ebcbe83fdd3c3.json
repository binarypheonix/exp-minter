{"ast":null,"code":"import _regeneratorRuntime from \"/Users/frankenstein/projects/minter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _classCallCheck from \"/Users/frankenstein/projects/minter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/frankenstein/projects/minter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/frankenstein/projects/minter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/frankenstein/projects/minter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport * as sodium from 'libsodium-wrappers';\nimport { windowRef } from '../../MockWindow';\nimport { ExtensionMessageTarget, Origin, Serializer } from '../..';\nimport { openCryptobox } from '../../utils/crypto';\nimport { getSenderId } from '../../utils/get-sender-id';\nimport { MessageBasedClient } from './MessageBasedClient';\n/**\n * @internalapi\n *\n *\n */\n\nexport var PostMessageClient = /*#__PURE__*/function (_MessageBasedClient) {\n  _inherits(PostMessageClient, _MessageBasedClient);\n\n  var _super = _createSuper(PostMessageClient);\n\n  function PostMessageClient() {\n    var _this;\n\n    _classCallCheck(this, PostMessageClient);\n\n    _this = _super.apply(this, arguments);\n    _this.activeListeners = new Map();\n    return _this;\n  }\n\n  _createClass(PostMessageClient, [{\n    key: \"init\",\n    value: function init() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.subscribeToMessages().catch(console.error);\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n    }\n  }, {\n    key: \"listenForEncryptedMessage\",\n    value: function listenForEncryptedMessage(senderPublicKey, messageCallback) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var _this2 = this;\n\n        var callbackFunction;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!this.activeListeners.has(senderPublicKey)) {\n                  _context3.next = 2;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\");\n\n              case 2:\n                callbackFunction = function callbackFunction(message, context) {\n                  return __awaiter(_this2, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n                    var decryptedMessage;\n                    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                      while (1) {\n                        switch (_context2.prev = _context2.next) {\n                          case 0:\n                            _context2.prev = 0;\n                            _context2.next = 3;\n                            return this.decryptMessage(senderPublicKey, message.encryptedPayload);\n\n                          case 3:\n                            decryptedMessage = _context2.sent;\n                            // console.log('calculated sender ID', await getSenderId(senderPublicKey))\n                            // TODO: Add check for correct decryption key / sender ID\n                            messageCallback(decryptedMessage, context);\n                            _context2.next = 9;\n                            break;\n\n                          case 7:\n                            _context2.prev = 7;\n                            _context2.t0 = _context2[\"catch\"](0);\n\n                          case 9:\n                          case \"end\":\n                            return _context2.stop();\n                        }\n                      }\n                    }, _callee2, this, [[0, 7]]);\n                  }));\n                };\n\n                this.activeListeners.set(senderPublicKey, callbackFunction);\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n    }\n  }, {\n    key: \"sendMessage\",\n    value: function sendMessage(message, peer) {\n      var _a;\n\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var payload, targetId, msg;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this.encryptMessage(peer.publicKey, message);\n\n              case 2:\n                payload = _context4.sent;\n                targetId = (_a = peer) === null || _a === void 0 ? void 0 : _a.extensionId; // if no targetId, we remove peer\n\n                msg = {\n                  target: ExtensionMessageTarget.EXTENSION,\n                  encryptedPayload: payload,\n                  targetId: targetId\n                }; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n                windowRef.postMessage(msg, windowRef.location.origin);\n\n              case 6:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n    }\n  }, {\n    key: \"listenForChannelOpening\",\n    value: function listenForChannelOpening(messageCallback) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n        var _this3 = this;\n\n        var fn;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                fn = function fn(event) {\n                  return __awaiter(_this3, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n                    var _a, _b, data, payload, pairingResponse;\n\n                    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n                      while (1) {\n                        switch (_context5.prev = _context5.next) {\n                          case 0:\n                            data = (_a = event === null || event === void 0 ? void 0 : event.data) === null || _a === void 0 ? void 0 : _a.message;\n                            _context5.t0 = data && data.target === ExtensionMessageTarget.PAGE;\n\n                            if (!_context5.t0) {\n                              _context5.next = 6;\n                              break;\n                            }\n\n                            _context5.next = 5;\n                            return this.isChannelOpenMessage(data);\n\n                          case 5:\n                            _context5.t0 = _context5.sent;\n\n                          case 6:\n                            if (!_context5.t0) {\n                              _context5.next = 29;\n                              break;\n                            }\n\n                            payload = Buffer.from(data.payload, 'hex');\n\n                            if (!(payload.length >= sodium.crypto_secretbox_NONCEBYTES + sodium.crypto_secretbox_MACBYTES)) {\n                              _context5.next = 29;\n                              break;\n                            }\n\n                            _context5.prev = 9;\n                            _context5.t1 = JSON;\n                            _context5.next = 13;\n                            return openCryptobox(payload, this.keyPair.publicKey, this.keyPair.privateKey);\n\n                          case 13:\n                            _context5.t2 = _context5.sent;\n                            pairingResponse = _context5.t1.parse.call(_context5.t1, _context5.t2);\n                            _context5.t3 = messageCallback;\n                            _context5.t4 = Object;\n                            _context5.t5 = Object.assign({}, pairingResponse);\n                            _context5.next = 20;\n                            return getSenderId(pairingResponse.publicKey);\n\n                          case 20:\n                            _context5.t6 = _context5.sent;\n                            _context5.t7 = (_b = event === null || event === void 0 ? void 0 : event.data) === null || _b === void 0 ? void 0 : _b.sender.id;\n                            _context5.t8 = {\n                              senderId: _context5.t6,\n                              extensionId: _context5.t7\n                            };\n                            _context5.t9 = _context5.t4.assign.call(_context5.t4, _context5.t5, _context5.t8);\n                            (0, _context5.t3)(_context5.t9);\n                            _context5.next = 29;\n                            break;\n\n                          case 27:\n                            _context5.prev = 27;\n                            _context5.t10 = _context5[\"catch\"](9);\n\n                          case 29:\n                          case \"end\":\n                            return _context5.stop();\n                        }\n                      }\n                    }, _callee5, this, [[9, 27]]);\n                  }));\n                };\n\n                windowRef.addEventListener('message', fn);\n\n              case 2:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n    }\n  }, {\n    key: \"sendPairingRequest\",\n    value: function sendPairingRequest(id) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n        var message;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.t0 = ExtensionMessageTarget.EXTENSION;\n                _context7.t1 = new Serializer();\n                _context7.next = 4;\n                return this.getPairingRequestInfo();\n\n              case 4:\n                _context7.t2 = _context7.sent;\n                _context7.next = 7;\n                return _context7.t1.serialize.call(_context7.t1, _context7.t2);\n\n              case 7:\n                _context7.t3 = _context7.sent;\n                _context7.t4 = id;\n                message = {\n                  target: _context7.t0,\n                  payload: _context7.t3,\n                  targetId: _context7.t4\n                };\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                windowRef.postMessage(message, windowRef.location.origin);\n\n              case 11:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n    }\n  }, {\n    key: \"isChannelOpenMessage\",\n    value: function isChannelOpenMessage(message) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                return _context8.abrupt(\"return\", typeof message === 'object' && message.hasOwnProperty('payload'));\n\n              case 1:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }));\n    }\n  }, {\n    key: \"subscribeToMessages\",\n    value: function subscribeToMessages() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee9() {\n        var _this4 = this;\n\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                windowRef.addEventListener('message', function (message) {\n                  if (typeof message === 'object' && message) {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    var data = message.data;\n\n                    if (data.message && data.message.target === ExtensionMessageTarget.PAGE) {\n                      _this4.activeListeners.forEach(function (listener) {\n                        listener(data.message, {\n                          origin: Origin.EXTENSION,\n                          id: data.sender.id || ''\n                        });\n                      });\n                    }\n                  }\n                });\n\n              case 1:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9);\n      }));\n    }\n  }]);\n\n  return PostMessageClient;\n}(MessageBasedClient);","map":{"version":3,"sources":["../../../../src/transports/clients/PostMessageClient.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport * as sodium from 'libsodium-wrappers';\nimport { windowRef } from '../../MockWindow';\nimport { ExtensionMessageTarget, Origin, Serializer } from '../..';\nimport { openCryptobox } from '../../utils/crypto';\nimport { getSenderId } from '../../utils/get-sender-id';\nimport { MessageBasedClient } from './MessageBasedClient';\n/**\n * @internalapi\n *\n *\n */\nexport class PostMessageClient extends MessageBasedClient {\n    constructor() {\n        super(...arguments);\n        this.activeListeners = new Map();\n    }\n    init() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.subscribeToMessages().catch(console.error);\n        });\n    }\n    listenForEncryptedMessage(senderPublicKey, messageCallback) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.activeListeners.has(senderPublicKey)) {\n                return;\n            }\n            const callbackFunction = (message, context) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    const decryptedMessage = yield this.decryptMessage(senderPublicKey, message.encryptedPayload);\n                    // console.log('calculated sender ID', await getSenderId(senderPublicKey))\n                    // TODO: Add check for correct decryption key / sender ID\n                    messageCallback(decryptedMessage, context);\n                }\n                catch (decryptionError) {\n                    /* NO-OP. We try to decode every message, but some might not be addressed to us. */\n                }\n            });\n            this.activeListeners.set(senderPublicKey, callbackFunction);\n        });\n    }\n    sendMessage(message, peer) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const payload = yield this.encryptMessage(peer.publicKey, message);\n            const targetId = (_a = peer) === null || _a === void 0 ? void 0 : _a.extensionId;\n            // if no targetId, we remove peer\n            const msg = {\n                target: ExtensionMessageTarget.EXTENSION,\n                encryptedPayload: payload,\n                targetId\n            };\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            windowRef.postMessage(msg, windowRef.location.origin);\n        });\n    }\n    listenForChannelOpening(messageCallback) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const fn = (event) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                const data = (_a = event === null || event === void 0 ? void 0 : event.data) === null || _a === void 0 ? void 0 : _a.message;\n                if (data &&\n                    data.target === ExtensionMessageTarget.PAGE &&\n                    (yield this.isChannelOpenMessage(data))) {\n                    const payload = Buffer.from(data.payload, 'hex');\n                    if (payload.length >=\n                        sodium.crypto_secretbox_NONCEBYTES + sodium.crypto_secretbox_MACBYTES) {\n                        try {\n                            const pairingResponse = JSON.parse(yield openCryptobox(payload, this.keyPair.publicKey, this.keyPair.privateKey));\n                            messageCallback(Object.assign(Object.assign({}, pairingResponse), { senderId: yield getSenderId(pairingResponse.publicKey), extensionId: (_b = event === null || event === void 0 ? void 0 : event.data) === null || _b === void 0 ? void 0 : _b.sender.id }));\n                        }\n                        catch (decryptionError) {\n                            /* NO-OP. We try to decode every message, but some might not be addressed to us. */\n                        }\n                    }\n                }\n            });\n            windowRef.addEventListener('message', fn);\n        });\n    }\n    sendPairingRequest(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const message = {\n                target: ExtensionMessageTarget.EXTENSION,\n                payload: yield new Serializer().serialize(yield this.getPairingRequestInfo()),\n                targetId: id\n            };\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            windowRef.postMessage(message, windowRef.location.origin);\n        });\n    }\n    isChannelOpenMessage(message) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return typeof message === 'object' && message.hasOwnProperty('payload');\n        });\n    }\n    subscribeToMessages() {\n        return __awaiter(this, void 0, void 0, function* () {\n            windowRef.addEventListener('message', (message) => {\n                if (typeof message === 'object' && message) {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    const data = message.data;\n                    if (data.message && data.message.target === ExtensionMessageTarget.PAGE) {\n                        this.activeListeners.forEach((listener) => {\n                            listener(data.message, {\n                                origin: Origin.EXTENSION,\n                                id: data.sender.id || ''\n                            });\n                        });\n                    }\n                }\n            });\n        });\n    }\n}\n//# sourceMappingURL=PostMessageClient.js.map"]},"metadata":{},"sourceType":"module"}