{"ast":null,"code":"import _createForOfIteratorHelper from\"/Users/frankenstein/projects/minter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _toConsumableArray from\"/Users/frankenstein/projects/minter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"/Users/frankenstein/projects/minter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"/Users/frankenstein/projects/minter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"/Users/frankenstein/projects/minter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";/* eslint-disable no-redeclare */import{Buffer}from'buffer';import*as t from'io-ts';import _ from'lodash';import{isLeft}from'fp-ts/lib/Either';import{compact}from'fp-ts/lib/Array';import{getRight}from'fp-ts/lib/Option';import*as D from'./decoders';function fromHexString(input){if(/^([A-Fa-f0-9]{2})*$/.test(input)){return Buffer.from(input,'hex').toString();}return input;}//// Data retrieval and decoding functions\nfunction getAssetMetadataBigMap(_x,_x2){return _getAssetMetadataBigMap.apply(this,arguments);}function _getAssetMetadataBigMap(){_getAssetMetadataBigMap=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(tzkt,address){var path,data,decoded;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:path='metadata';_context2.next=3;return tzkt.getContractBigMapKeys(address,path);case 3:data=_context2.sent;decoded=D.LedgerBigMap.decode(data);if(!isLeft(decoded)){_context2.next=7;break;}throw Error('Failed to decode `getAssetMetadata` response');case 7:return _context2.abrupt(\"return\",decoded.right);case 8:case\"end\":return _context2.stop();}}},_callee2);}));return _getAssetMetadataBigMap.apply(this,arguments);}function getLedgerBigMap(_x3,_x4){return _getLedgerBigMap.apply(this,arguments);}function _getLedgerBigMap(){_getLedgerBigMap=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(tzkt,address){var path,data,decoded;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:path='assets.ledger';_context3.next=3;return tzkt.getContractBigMapKeys(address,path);case 3:data=_context3.sent;decoded=D.LedgerBigMap.decode(data);if(!isLeft(decoded)){_context3.next=7;break;}throw Error('Failed to decode `getLedger` response');case 7:return _context3.abrupt(\"return\",decoded.right);case 8:case\"end\":return _context3.stop();}}},_callee3);}));return _getLedgerBigMap.apply(this,arguments);}function getTokenMetadataBigMap(_x5,_x6){return _getTokenMetadataBigMap.apply(this,arguments);}function _getTokenMetadataBigMap(){_getTokenMetadataBigMap=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(tzkt,address){var path,data,decoded;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:path='assets.token_metadata';_context4.next=3;return tzkt.getContractBigMapKeys(address,path);case 3:data=_context4.sent;decoded=D.TokenMetadataBigMap.decode(data);if(!isLeft(decoded)){_context4.next=7;break;}throw Error('Failed to decode `getTokenMetadata` response');case 7:return _context4.abrupt(\"return\",decoded.right);case 8:case\"end\":return _context4.stop();}}},_callee4);}));return _getTokenMetadataBigMap.apply(this,arguments);}function getFixedPriceSalesBigMap(_x7,_x8){return _getFixedPriceSalesBigMap.apply(this,arguments);}function _getFixedPriceSalesBigMap(){_getFixedPriceSalesBigMap=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(tzkt,address){var fixedPriceStorage,fixedPriceBigMapId,fixedPriceSales,decoded;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.t0=D.FixedPriceSaleStorage;_context5.next=3;return tzkt.getContractStorage(address);case 3:_context5.t1=_context5.sent;fixedPriceStorage=_context5.t0.decode.call(_context5.t0,_context5.t1);if(!isLeft(fixedPriceStorage)){_context5.next=7;break;}throw Error('Failed to decode `getFixedPriceSales` bigMap ID');case 7:fixedPriceBigMapId=fixedPriceStorage.right.sales;_context5.next=10;return tzkt.getBigMapKeys(fixedPriceBigMapId);case 10:fixedPriceSales=_context5.sent;decoded=D.FixedPriceSaleBigMap.decode(fixedPriceSales);if(!isLeft(decoded)){_context5.next=14;break;}throw Error('Failed to decode `getFixedPriceSales` response');case 14:return _context5.abrupt(\"return\",decoded.right);case 15:case\"end\":return _context5.stop();}}},_callee5);}));return _getFixedPriceSalesBigMap.apply(this,arguments);}function getBigMapUpdates(_x9,_x10,_x11){return _getBigMapUpdates.apply(this,arguments);}function _getBigMapUpdates(){_getBigMapUpdates=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(tzkt,params,content){var bigMapUpdates,decoder,decoded;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.next=2;return tzkt.getBigMapUpdates(params);case 2:bigMapUpdates=_context6.sent;decoder=t.array(D.BigMapUpdateRow(content));decoded=decoder.decode(bigMapUpdates);if(!isLeft(decoded)){_context6.next=7;break;}throw Error('Failed to decode `getBigMapUpdates` response');case 7:return _context6.abrupt(\"return\",decoded.right);case 8:case\"end\":return _context6.stop();}}},_callee6);}));return _getBigMapUpdates.apply(this,arguments);}function getContracts(_x12,_x13,_x14){return _getContracts.apply(this,arguments);}function _getContracts(){_getContracts=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(tzkt,params,storage){var contracts,contractsArray,decodedArray;return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:_context7.next=2;return tzkt.getContracts(params);case 2:contracts=_context7.sent;contractsArray=t.array(t.unknown).decode(contracts);if(!isLeft(contractsArray)){_context7.next=6;break;}throw Error('Failed to decode `getContracts` response');case 6:decodedArray=contractsArray.right.map(D.ContractRow(storage).decode);return _context7.abrupt(\"return\",compact(decodedArray.map(getRight)));case 8:case\"end\":return _context7.stop();}}},_callee7);}));return _getContracts.apply(this,arguments);}function getContract(_x15,_x16,_x17,_x18){return _getContract.apply(this,arguments);}//// Main query functions\nfunction _getContract(){_getContract=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee8(tzkt,address,params,storage){var contract,decoded;return _regeneratorRuntime.wrap(function _callee8$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:_context8.next=2;return tzkt.getContract(address,params);case 2:contract=_context8.sent;decoded=D.ContractRow(storage).decode(contract);if(!isLeft(decoded)){_context8.next=6;break;}throw Error('Failed to decode `getContracts` response');case 6:return _context8.abrupt(\"return\",decoded.right);case 7:case\"end\":return _context8.stop();}}},_callee8);}));return _getContract.apply(this,arguments);}export function getContractNfts(_x19,_x20){return _getContractNfts.apply(this,arguments);}function _getContractNfts(){_getContractNfts=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee10(system,address){var ledger,tokens,mktAddress,tokenSales,activeSales,tokensSorted;return _regeneratorRuntime.wrap(function _callee10$(_context10){while(1){switch(_context10.prev=_context10.next){case 0:_context10.next=2;return getLedgerBigMap(system.tzkt,address);case 2:ledger=_context10.sent;_context10.next=5;return getTokenMetadataBigMap(system.tzkt,address);case 5:tokens=_context10.sent;mktAddress=system.config.contracts.marketplace.fixedPrice.tez;_context10.next=9;return getFixedPriceSalesBigMap(system.tzkt,mktAddress);case 9:tokenSales=_context10.sent;activeSales=tokenSales.filter(function(sale){return sale.active;});// Sort by token id - descending\ntokensSorted=_toConsumableArray(tokens).sort(function(a,b){return-(Number.parseInt(a.value.token_id,10)-Number.parseInt(b.value.token_id,10));});return _context10.abrupt(\"return\",Promise.all(tokensSorted.map(/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee9(token){var _ledger$find;var _token$value,tokenId,tokenInfo,decodedInfo,resolvedInfo,metadata,saleData,sale;return _regeneratorRuntime.wrap(function _callee9$(_context9){while(1){switch(_context9.prev=_context9.next){case 0:_token$value=token.value,tokenId=_token$value.token_id,tokenInfo=_token$value.token_info;// TODO: Write decoder function for data retrieval\n// TODO: Write decoder function for data retrieval\ndecodedInfo=_.mapValues(tokenInfo,fromHexString);_context9.next=4;return system.resolveMetadata(decodedInfo[''],address);case 4:resolvedInfo=_context9.sent;metadata=_objectSpread(_objectSpread({},decodedInfo),resolvedInfo.metadata);saleData=activeSales.find(function(v){return v.value.sale_data.sale_token.fa2_address===address&&v.value.sale_data.sale_token.token_id===tokenId;});sale=saleData&&{id:saleData.id,seller:saleData.value.seller,price:Number.parseInt(saleData.value.sale_data.price,10)/1000000,mutez:Number.parseInt(saleData.value.sale_data.price,10),saleToken:{address:saleData.value.sale_data.sale_token.fa2_address,tokenId:Number.parseInt(saleData.value.sale_data.sale_token.token_id)},saleId:saleData.value.isLegacy?0:Number.parseInt(saleData.key),type:saleData.value.isLegacy?'fixedPriceLegacy':'fixedPrice'};return _context9.abrupt(\"return\",{id:parseInt(tokenId,10),owner:(_ledger$find=ledger.find(function(e){return e.key===tokenId;}))===null||_ledger$find===void 0?void 0:_ledger$find.value,title:metadata.name,description:metadata.description,artifactUri:metadata.artifactUri,metadata:metadata,sale:sale});case 9:case\"end\":return _context9.stop();}}},_callee9);}));return function(_x30){return _ref3.apply(this,arguments);};}())));case 13:case\"end\":return _context10.stop();}}},_callee10);}));return _getContractNfts.apply(this,arguments);}export function getNftAssetContract(_x21,_x22){return _getNftAssetContract.apply(this,arguments);}function _getNftAssetContract(){_getNftAssetContract=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee11(system,address){var _metaBigMap$find;var contract,metaBigMap,metaUri,_yield$system$resolve,metadata,decoded;return _regeneratorRuntime.wrap(function _callee11$(_context11){while(1){switch(_context11.prev=_context11.next){case 0:_context11.next=2;return getContract(system.tzkt,address,{},t.unknown);case 2:contract=_context11.sent;_context11.next=5;return getAssetMetadataBigMap(system.tzkt,address);case 5:metaBigMap=_context11.sent;metaUri=(_metaBigMap$find=metaBigMap.find(function(v){return v.key==='';}))===null||_metaBigMap$find===void 0?void 0:_metaBigMap$find.value;if(metaUri){_context11.next=9;break;}throw Error(\"Could not extract metadata URI from \".concat(address,\" storage\"));case 9:_context11.next=11;return system.resolveMetadata(fromHexString(metaUri),address);case 11:_yield$system$resolve=_context11.sent;metadata=_yield$system$resolve.metadata;decoded=D.AssetContractMetadata.decode(metadata);if(!isLeft(decoded)){_context11.next=16;break;}throw Error('Metadata validation failed');case 16:return _context11.abrupt(\"return\",_objectSpread(_objectSpread({},contract),{},{metadata:decoded.right}));case 17:case\"end\":return _context11.stop();}}},_callee11);}));return _getNftAssetContract.apply(this,arguments);}export function getWalletNftAssetContracts(_x23){return _getWalletNftAssetContracts.apply(this,arguments);}function _getWalletNftAssetContracts(){_getWalletNftAssetContracts=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee12(system){return _regeneratorRuntime.wrap(function _callee12$(_context12){while(1){switch(_context12.prev=_context12.next){case 0:_context12.next=2;return getNftAssetContracts(system,system.tzPublicKey);case 2:return _context12.abrupt(\"return\",_context12.sent);case 3:case\"end\":return _context12.stop();}}},_callee12);}));return _getWalletNftAssetContracts.apply(this,arguments);};export function getNftAssetContracts(_x24,_x25){return _getNftAssetContracts.apply(this,arguments);}function _getNftAssetContracts(){_getNftAssetContracts=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee13(system,tzPublicKey){var contracts,addresses,results,assetBigMapRows,_iterator,_step,_loop,_ret;return _regeneratorRuntime.wrap(function _callee13$(_context14){while(1){switch(_context14.prev=_context14.next){case 0:_context14.next=2;return getContracts(system.tzkt,{creator:tzPublicKey,includeStorage:'true'},t.unknown);case 2:contracts=_context14.sent;addresses=_.uniq(contracts.filter(function(c){var _c$tzips;return c.kind==='asset'&&((_c$tzips=c.tzips)===null||_c$tzips===void 0?void 0:_c$tzips.includes('fa2'));}).map(function(c){return c.address;}));results=[];if(!(addresses.length===0)){_context14.next=7;break;}return _context14.abrupt(\"return\",results);case 7:_context14.next=9;return getBigMapUpdates(system.tzkt,{path:'metadata',action:'add_key','contract.in':addresses.join(','),limit:'10000'},{key:t.string,value:t.string});case 9:assetBigMapRows=_context14.sent.filter(function(v){return v.content.key==='';});_iterator=_createForOfIteratorHelper(assetBigMapRows);_context14.prev=11;_loop=/*#__PURE__*/_regeneratorRuntime.mark(function _loop(){var row,contract,metaUri,_yield$system$resolve2,metadata,decoded;return _regeneratorRuntime.wrap(function _loop$(_context13){while(1){switch(_context13.prev=_context13.next){case 0:row=_step.value;contract=contracts.find(function(c){return c.address===row.contract.address;});if(contract){_context13.next=4;break;}return _context13.abrupt(\"return\",\"continue\");case 4:_context13.prev=4;metaUri=row.content.value;_context13.next=8;return system.resolveMetadata(fromHexString(metaUri),contract.address);case 8:_yield$system$resolve2=_context13.sent;metadata=_yield$system$resolve2.metadata;decoded=D.AssetContractMetadata.decode(metadata);if(!isLeft(decoded)){results.push(_objectSpread(_objectSpread({},contract),{},{metadata:decoded.right}));}_context13.next=17;break;case 14:_context13.prev=14;_context13.t0=_context13[\"catch\"](4);console.log(_context13.t0);case 17:case\"end\":return _context13.stop();}}},_loop,null,[[4,14]]);});_iterator.s();case 14:if((_step=_iterator.n()).done){_context14.next=21;break;}return _context14.delegateYield(_loop(),\"t0\",16);case 16:_ret=_context14.t0;if(!(_ret===\"continue\")){_context14.next=19;break;}return _context14.abrupt(\"continue\",19);case 19:_context14.next=14;break;case 21:_context14.next=26;break;case 23:_context14.prev=23;_context14.t1=_context14[\"catch\"](11);_iterator.e(_context14.t1);case 26:_context14.prev=26;_iterator.f();return _context14.finish(26);case 29:return _context14.abrupt(\"return\",results);case 30:case\"end\":return _context14.stop();}}},_callee13,null,[[11,23,26,29]]);}));return _getNftAssetContracts.apply(this,arguments);}export function getMarketplaceNfts(_x26,_x27){return _getMarketplaceNfts.apply(this,arguments);}function _getMarketplaceNfts(){_getMarketplaceNfts=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee14(system,address){var tokenSales,activeSales,addresses,uniqueAddresses,tokenBigMapRows,salesToView,salesWithTokenMetadata;return _regeneratorRuntime.wrap(function _callee14$(_context15){while(1){switch(_context15.prev=_context15.next){case 0:_context15.next=2;return getFixedPriceSalesBigMap(system.tzkt,address);case 2:tokenSales=_context15.sent;activeSales=tokenSales.filter(function(v){return v.active;});addresses=_.uniq(activeSales.map(function(s){return s.value.sale_data.sale_token.fa2_address;}));uniqueAddresses=Array.from(new Set(addresses));if(!(uniqueAddresses.length===0)){_context15.next=8;break;}return _context15.abrupt(\"return\",[]);case 8:_context15.next=10;return getBigMapUpdates(system.tzkt,{path:'assets.token_metadata',action:'add_key','contract.in':addresses.join(','),limit:'10000'},{key:t.string,value:t.type({token_id:t.string,token_info:t.record(t.string,t.string)})});case 10:tokenBigMapRows=_context15.sent;// Sort descending (newest first)\nsalesToView=_toConsumableArray(activeSales).reverse();salesWithTokenMetadata=salesToView.map(function(x){return{tokenSale:x,tokenItem:tokenBigMapRows.find(function(item){return x.value.sale_data.sale_token.fa2_address===item.contract.address&&x.value.sale_data.sale_token.token_id===item.content.value.token_id+'';})};}).map(function(x){var _x$tokenItem,_x$tokenItem$content,_x$tokenItem$content$;return{loaded:false,token:null,tokenSale:x.tokenSale,tokenMetadata:(_x$tokenItem=x.tokenItem)===null||_x$tokenItem===void 0?void 0:(_x$tokenItem$content=_x$tokenItem.content)===null||_x$tokenItem$content===void 0?void 0:(_x$tokenItem$content$=_x$tokenItem$content.value)===null||_x$tokenItem$content$===void 0?void 0:_x$tokenItem$content$.token_info['']};});return _context15.abrupt(\"return\",salesWithTokenMetadata);case 14:case\"end\":return _context15.stop();}}},_callee14);}));return _getMarketplaceNfts.apply(this,arguments);}export var loadMarketplaceNft=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(system,tokenLoadData){var token,loaded,tokenSale,tokenMetadata,result,_tokenSale$value$sale,saleAddress,tokenIdStr,tokenId,mutez,sale,_ref2,metadata;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:token=tokenLoadData.token,loaded=tokenLoadData.loaded,tokenSale=tokenLoadData.tokenSale,tokenMetadata=tokenLoadData.tokenMetadata;result=_objectSpread({},tokenLoadData);if(!(token||loaded)){_context.next=4;break;}return _context.abrupt(\"return\",result);case 4:result.loaded=true;_context.prev=5;_tokenSale$value$sale=tokenSale.value.sale_data.sale_token,saleAddress=_tokenSale$value$sale.fa2_address,tokenIdStr=_tokenSale$value$sale.token_id;tokenId=parseInt(tokenIdStr,10);mutez=Number.parseInt(tokenSale.value.sale_data.price,10);sale={id:tokenSale.id,seller:tokenSale.value.seller,price:mutez/1000000,mutez:mutez,saleToken:{address:tokenSale.value.sale_data.sale_token.fa2_address,tokenId:Number.parseInt(tokenSale.value.sale_data.sale_token.token_id)},saleId:tokenSale.value.isLegacy?0:Number.parseInt(tokenSale.key),type:tokenSale.value.isLegacy?'fixedPriceLegacy':'fixedPrice'};if(tokenMetadata){_context.next=14;break;}result.error=\"Couldn't retrieve tokenMetadata\";console.error(\"Couldn't retrieve tokenMetadata\",{tokenSale:tokenSale});return _context.abrupt(\"return\",result);case 14:_context.next=16;return system.resolveMetadata(fromHexString(tokenMetadata),saleAddress);case 16:_ref2=_context.sent;metadata=_ref2.metadata;result.token={address:saleAddress,id:tokenId,title:metadata.name||'',owner:sale.seller,description:metadata.description||'',artifactUri:metadata.artifactUri||'',metadata:metadata,sale:sale};return _context.abrupt(\"return\",result);case 22:_context.prev=22;_context.t0=_context[\"catch\"](5);result.error=\"Couldn't load token\";console.error(\"Couldn't load token\",{tokenSale:tokenSale,err:_context.t0});return _context.abrupt(\"return\",result);case 27:case\"end\":return _context.stop();}}},_callee,null,[[5,22]]);}));return function loadMarketplaceNft(_x28,_x29){return _ref.apply(this,arguments);};}();","map":{"version":3,"sources":["/Users/frankenstein/projects/minter/src/lib/nfts/queries.ts"],"names":["Buffer","t","_","isLeft","compact","getRight","D","fromHexString","input","test","from","toString","getAssetMetadataBigMap","tzkt","address","path","getContractBigMapKeys","data","decoded","LedgerBigMap","decode","Error","right","getLedgerBigMap","getTokenMetadataBigMap","TokenMetadataBigMap","getFixedPriceSalesBigMap","FixedPriceSaleStorage","getContractStorage","fixedPriceStorage","fixedPriceBigMapId","sales","getBigMapKeys","fixedPriceSales","FixedPriceSaleBigMap","getBigMapUpdates","params","content","bigMapUpdates","decoder","array","BigMapUpdateRow","getContracts","storage","contracts","contractsArray","unknown","decodedArray","map","ContractRow","getContract","contract","getContractNfts","system","ledger","tokens","mktAddress","config","marketplace","fixedPrice","tez","tokenSales","activeSales","filter","sale","active","tokensSorted","sort","a","b","Number","parseInt","value","token_id","Promise","all","token","tokenId","tokenInfo","token_info","decodedInfo","mapValues","resolveMetadata","resolvedInfo","metadata","saleData","find","v","sale_data","sale_token","fa2_address","id","seller","price","mutez","saleToken","saleId","isLegacy","key","type","owner","e","title","name","description","artifactUri","getNftAssetContract","metaBigMap","metaUri","AssetContractMetadata","getWalletNftAssetContracts","getNftAssetContracts","tzPublicKey","creator","includeStorage","addresses","uniq","c","kind","tzips","includes","results","length","action","join","limit","string","assetBigMapRows","row","push","console","log","getMarketplaceNfts","s","uniqueAddresses","Array","Set","record","tokenBigMapRows","salesToView","reverse","salesWithTokenMetadata","x","tokenSale","tokenItem","item","loaded","tokenMetadata","loadMarketplaceNft","tokenLoadData","result","saleAddress","tokenIdStr","error","err"],"mappings":"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","sourcesContent":["/* eslint-disable no-redeclare */\nimport { Buffer } from 'buffer';\nimport * as t from 'io-ts';\nimport _ from 'lodash';\nimport { SystemWithToolkit, SystemWithWallet } from '../system';\nimport { TzKt, Params } from '../service/tzkt';\nimport { isLeft } from 'fp-ts/lib/Either';\nimport { compact } from 'fp-ts/lib/Array';\nimport { getRight } from 'fp-ts/lib/Option';\nimport * as D from './decoders';\n\nfunction fromHexString(input: string) {\n  if (/^([A-Fa-f0-9]{2})*$/.test(input)) {\n    return Buffer.from(input, 'hex').toString();\n  }\n  return input;\n}\n\n//// Data retrieval and decoding functions\n\nasync function getAssetMetadataBigMap(\n  tzkt: TzKt,\n  address: string\n): Promise<D.AssetMetadataBigMap> {\n  const path = 'metadata';\n  const data = await tzkt.getContractBigMapKeys(address, path);\n  const decoded = D.LedgerBigMap.decode(data);\n  if (isLeft(decoded)) {\n    throw Error('Failed to decode `getAssetMetadata` response');\n  }\n  return decoded.right;\n}\n\nasync function getLedgerBigMap(\n  tzkt: TzKt,\n  address: string\n): Promise<D.LedgerBigMap> {\n  const path = 'assets.ledger';\n  const data = await tzkt.getContractBigMapKeys(address, path);\n  const decoded = D.LedgerBigMap.decode(data);\n  if (isLeft(decoded)) {\n    throw Error('Failed to decode `getLedger` response');\n  }\n  return decoded.right;\n}\n\nasync function getTokenMetadataBigMap(\n  tzkt: TzKt,\n  address: string\n): Promise<D.TokenMetadataBigMap> {\n  const path = 'assets.token_metadata';\n  const data = await tzkt.getContractBigMapKeys(address, path);\n  const decoded = D.TokenMetadataBigMap.decode(data);\n  if (isLeft(decoded)) {\n    throw Error('Failed to decode `getTokenMetadata` response');\n  }\n  return decoded.right;\n}\n\nasync function getFixedPriceSalesBigMap(\n  tzkt: TzKt,\n  address: string\n): Promise<D.FixedPriceSaleBigMap> {\n  const fixedPriceStorage = D.FixedPriceSaleStorage.decode(\n    await tzkt.getContractStorage(address)\n  );\n  if (isLeft(fixedPriceStorage)) {\n    throw Error('Failed to decode `getFixedPriceSales` bigMap ID');\n  }\n  const fixedPriceBigMapId = fixedPriceStorage.right.sales;\n  const fixedPriceSales = await tzkt.getBigMapKeys(fixedPriceBigMapId);\n  const decoded = D.FixedPriceSaleBigMap.decode(fixedPriceSales);\n  if (isLeft(decoded)) {\n    throw Error('Failed to decode `getFixedPriceSales` response');\n  }\n  return decoded.right;\n}\n\nasync function getBigMapUpdates<K extends t.Mixed, V extends t.Mixed>(\n  tzkt: TzKt,\n  params: Params,\n  content: { key: K; value: V }\n) {\n  const bigMapUpdates = await tzkt.getBigMapUpdates(params);\n  const decoder = t.array(D.BigMapUpdateRow(content));\n  const decoded = decoder.decode(bigMapUpdates);\n  if (isLeft(decoded)) {\n    throw Error('Failed to decode `getBigMapUpdates` response');\n  }\n  return decoded.right;\n}\n\nasync function getContracts<S extends t.Mixed>(\n  tzkt: TzKt,\n  params: Params,\n  storage: S\n) {\n  const contracts = await tzkt.getContracts(params);\n  const contractsArray = t.array(t.unknown).decode(contracts);\n  if (isLeft(contractsArray)) {\n    throw Error('Failed to decode `getContracts` response');\n  }\n  const decodedArray = contractsArray.right.map(D.ContractRow(storage).decode);\n  return compact(decodedArray.map(getRight));\n}\n\nasync function getContract<S extends t.Mixed>(\n  tzkt: TzKt,\n  address: string,\n  params: Params,\n  storage: S\n) {\n  const contract = await tzkt.getContract(address, params);\n  const decoded = D.ContractRow(storage).decode(contract);\n  if (isLeft(decoded)) {\n    throw Error('Failed to decode `getContracts` response');\n  }\n  return decoded.right;\n}\n\n//// Main query functions\n\nexport async function getContractNfts(\n  system: SystemWithToolkit | SystemWithWallet,\n  address: string\n): Promise<D.Nft[]> {\n  const ledger = await getLedgerBigMap(system.tzkt, address);\n  const tokens = await getTokenMetadataBigMap(system.tzkt, address);\n  const mktAddress = system.config.contracts.marketplace.fixedPrice.tez;\n  const tokenSales = await getFixedPriceSalesBigMap(system.tzkt, mktAddress);\n  const activeSales = tokenSales.filter(sale => sale.active);\n\n  // Sort by token id - descending\n  const tokensSorted = [...tokens].sort((a,b)=>- (Number.parseInt(a.value.token_id, 10) - Number.parseInt(b.value.token_id, 10)));\n\n  return Promise.all(\n    tokensSorted.map(\n      async (token): Promise<D.Nft> => {\n        const { token_id: tokenId, token_info: tokenInfo } = token.value;\n\n        // TODO: Write decoder function for data retrieval\n        const decodedInfo = _.mapValues(tokenInfo, fromHexString) as any;\n        const resolvedInfo = await system.resolveMetadata(\n          decodedInfo[''],\n          address\n        );\n        const metadata = { ...decodedInfo, ...resolvedInfo.metadata };\n\n        const saleData = activeSales.find(\n          v =>\n            v.value.sale_data.sale_token.fa2_address === address &&\n            v.value.sale_data.sale_token.token_id === tokenId\n        );\n\n        const sale = saleData && {\n          id: saleData.id,\n          seller: saleData.value.seller,\n          price: Number.parseInt(saleData.value.sale_data.price, 10) / 1000000,\n          mutez: Number.parseInt(saleData.value.sale_data.price, 10),\n          saleToken: {\n            address: saleData.value.sale_data.sale_token.fa2_address,\n            tokenId: Number.parseInt(saleData.value.sale_data.sale_token.token_id)\n          },\n          saleId: saleData.value.isLegacy ? 0 : Number.parseInt(saleData.key),\n          type: saleData.value.isLegacy ? 'fixedPriceLegacy' : 'fixedPrice'\n        };\n\n        return {\n          id: parseInt(tokenId, 10),\n          owner: ledger.find(e => e.key === tokenId)?.value!,\n          title: metadata.name,\n          description: metadata.description,\n          artifactUri: metadata.artifactUri,\n          metadata: metadata,\n          sale\n        };\n      }\n    )\n  );\n}\n\nexport async function getNftAssetContract(\n  system: SystemWithToolkit | SystemWithWallet,\n  address: string\n): Promise<D.AssetContract> {\n  const contract = await getContract(system.tzkt, address, {}, t.unknown);\n  const metaBigMap = await getAssetMetadataBigMap(system.tzkt, address);\n  const metaUri = metaBigMap.find(v => v.key === '')?.value;\n  if (!metaUri) {\n    throw Error(`Could not extract metadata URI from ${address} storage`);\n  }\n\n  const { metadata } = await system.resolveMetadata(\n    fromHexString(metaUri),\n    address\n  );\n  const decoded = D.AssetContractMetadata.decode(metadata);\n\n  if (isLeft(decoded)) {\n    throw Error('Metadata validation failed');\n  }\n  return { ...contract, metadata: decoded.right };\n}\n\nexport async function getWalletNftAssetContracts(\n  system: SystemWithWallet\n): Promise<D.AssetContract[]> {\n  return await getNftAssetContracts(system, system.tzPublicKey);\n};\n\nexport async function getNftAssetContracts(\n  system: SystemWithWallet,\n  tzPublicKey: string\n): Promise<D.AssetContract[]> {\n  const contracts = await getContracts(\n    system.tzkt,\n    {\n      creator: tzPublicKey,\n      includeStorage: 'true'\n    },\n    t.unknown\n  );\n\n  const addresses = _.uniq(\n    contracts\n      .filter(c => c.kind === 'asset' && c.tzips?.includes('fa2'))\n      .map(c => c.address)\n  );\n\n  const results: D.AssetContract[] = [];\n\n  if (addresses.length === 0) {\n    return results;\n  }\n\n  const assetBigMapRows = (\n    await getBigMapUpdates(\n      system.tzkt,\n      {\n        path: 'metadata',\n        action: 'add_key',\n        'contract.in': addresses.join(','),\n        limit: '10000'\n      },\n      {\n        key: t.string,\n        value: t.string\n      }\n    )\n  ).filter(v => v.content.key === '');\n\n  for (const row of assetBigMapRows) {\n    const contract = contracts.find(c => c.address === row.contract.address);\n    if (!contract) {\n      continue;\n    }\n    try {\n      const metaUri = row.content.value;\n      const { metadata } = await system.resolveMetadata(\n        fromHexString(metaUri),\n        contract.address\n      );\n      const decoded = D.AssetContractMetadata.decode(metadata);\n      if (!isLeft(decoded)) {\n        results.push({ ...contract, metadata: decoded.right });\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  return results;\n}\n\nexport type MarketplaceNftLoadingData = {\n  loaded: boolean;\n  error?: string;\n  token: null | D.Nft;\n  tokenSale: D.FixedPriceSaleBigMap[number];\n  tokenMetadata: undefined | string;\n};\n\nexport async function getMarketplaceNfts(\n  system: SystemWithToolkit | SystemWithWallet,\n  address: string\n): Promise<MarketplaceNftLoadingData[]> {\n  const tokenSales = await getFixedPriceSalesBigMap(system.tzkt, address);\n  const activeSales = tokenSales.filter(v => v.active);\n  const addresses = _.uniq(\n    activeSales.map(s => s.value.sale_data.sale_token.fa2_address)\n  );\n\n  const uniqueAddresses = Array.from(new Set(addresses));\n\n  if (uniqueAddresses.length === 0) {\n    return [];\n  }\n\n  const tokenBigMapRows = await getBigMapUpdates(\n    system.tzkt,\n    {\n      path: 'assets.token_metadata',\n      action: 'add_key',\n      'contract.in': addresses.join(','),\n      limit: '10000'\n    },\n    {\n      key: t.string,\n      value: t.type({\n        token_id: t.string,\n        token_info: t.record(t.string, t.string)\n      })\n    }\n  );\n\n  // Sort descending (newest first)\n  const salesToView = [...activeSales].reverse();\n  const salesWithTokenMetadata = salesToView\n    .map(x => ({\n      tokenSale: x,\n      tokenItem: tokenBigMapRows.find(\n        item =>\n          x.value.sale_data.sale_token.fa2_address === item.contract.address &&\n          x.value.sale_data.sale_token.token_id ===\n            item.content.value.token_id + ''\n      )\n    }))\n    .map(x => ({\n      loaded: false,\n      token: null,\n      tokenSale: x.tokenSale,\n      tokenMetadata: x.tokenItem?.content?.value?.token_info['']\n    }));\n\n  return salesWithTokenMetadata;\n}\n\nexport const loadMarketplaceNft = async (\n  system: SystemWithToolkit | SystemWithWallet,\n  tokenLoadData: MarketplaceNftLoadingData\n): Promise<MarketplaceNftLoadingData> => {\n  const { token, loaded, tokenSale, tokenMetadata } = tokenLoadData;\n  const result = { ...tokenLoadData };\n\n  if (token || loaded) {\n    return result;\n  }\n  result.loaded = true;\n\n  try {\n    const {\n      fa2_address: saleAddress,\n      token_id: tokenIdStr\n    } = tokenSale.value.sale_data.sale_token;\n\n    const tokenId = parseInt(tokenIdStr, 10);\n    const mutez = Number.parseInt(tokenSale.value.sale_data.price, 10);\n    const sale = {\n      id: tokenSale.id,\n      seller: tokenSale.value.seller,\n      price: mutez / 1000000,\n      mutez: mutez,\n      saleToken: {\n        address: tokenSale.value.sale_data.sale_token.fa2_address,\n        tokenId: Number.parseInt(tokenSale.value.sale_data.sale_token.token_id)\n      },\n      saleId: tokenSale.value.isLegacy ? 0 : Number.parseInt(tokenSale.key),\n      type: tokenSale.value.isLegacy ? 'fixedPriceLegacy' : 'fixedPrice'\n    };\n\n    if (!tokenMetadata) {\n      result.error = \"Couldn't retrieve tokenMetadata\";\n      console.error(\"Couldn't retrieve tokenMetadata\", { tokenSale });\n      return result;\n    }\n\n    const { metadata } = (await system.resolveMetadata(\n      fromHexString(tokenMetadata),\n      saleAddress\n    )) as any;\n\n    result.token = {\n      address: saleAddress,\n      id: tokenId,\n      title: metadata.name || '',\n      owner: sale.seller,\n      description: metadata.description || '',\n      artifactUri: metadata.artifactUri || '',\n      metadata: metadata,\n      sale: sale\n    };\n\n    return result;\n  } catch (err) {\n    result.error = \"Couldn't load token\";\n    console.error(\"Couldn't load token\", { tokenSale, err });\n    return result;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}