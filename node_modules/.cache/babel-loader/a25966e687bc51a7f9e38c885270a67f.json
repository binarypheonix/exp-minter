{"ast":null,"code":"var _jsxFileName = \"/Users/frankenstein/projects/minter/src/components/Marketplace/Catalog/index.tsx\";\nimport React, { useEffect } from 'react';\nimport { Text, Flex, Heading, SimpleGrid, Spinner, Box } from '@chakra-ui/react';\nimport { Wind } from 'react-feather';\nimport { useSelector, useDispatch } from '../../../reducer';\nimport { getMarketplaceNftsQuery, loadMoreMarketplaceNftsQuery } from '../../../reducer/async/queries';\nimport TokenCard from '../../common/TokenCard';\nimport FeaturedToken from './FeaturedToken';\nimport { VisibilityTrigger } from '../../common/VisibilityTrigger';\nexport default function Catalog() {\n  var _state$marketplace$to, _state$marketplace$to2, _state$marketplace$to3;\n\n  const {\n    system,\n    marketplace: state\n  } = useSelector(s => s);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getMarketplaceNftsQuery(state.marketplace.address));\n  }, [state.marketplace.address, dispatch]);\n\n  const loadMore = () => {\n    dispatch(loadMoreMarketplaceNftsQuery({}));\n  };\n\n  let tokens = (_state$marketplace$to = (_state$marketplace$to2 = state.marketplace.tokens) === null || _state$marketplace$to2 === void 0 ? void 0 : _state$marketplace$to2.filter(x => x.token).map(x => x.token)) !== null && _state$marketplace$to !== void 0 ? _state$marketplace$to : [];\n  return /*#__PURE__*/React.createElement(Flex, {\n    w: \"100vw\",\n    h: \"100%\",\n    bg: \"brand.brightGray\",\n    px: 10,\n    pt: 6,\n    overflowY: \"scroll\",\n    justify: \"start\",\n    flexDir: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, state.marketplace.loaded && tokens.length > 0 ? /*#__PURE__*/React.createElement(Flex, {\n    width: \"calc(100vw - 5rem)\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FeaturedToken, Object.assign({\n    config: system.config\n  }, tokens[0], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }))) : null, /*#__PURE__*/React.createElement(Flex, {\n    flex: \"1\",\n    w: \"100%\",\n    flexDir: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, !state.marketplace.loaded ? /*#__PURE__*/React.createElement(Flex, {\n    flexDir: \"column\",\n    align: \"center\",\n    flex: \"1\",\n    pt: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    size: \"xl\",\n    mb: 6,\n    color: \"gray.300\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Heading, {\n    size: \"lg\",\n    textAlign: \"center\",\n    color: \"gray.500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, \"Loading...\")) : tokens.length === 0 ? /*#__PURE__*/React.createElement(Flex, {\n    w: \"100%\",\n    flex: \"1\",\n    flexDir: \"column\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Flex, {\n    px: 20,\n    py: 10,\n    bg: \"gray.200\",\n    textAlign: \"center\",\n    align: \"center\",\n    borderRadius: \"5px\",\n    flexDir: \"column\",\n    fontSize: \"xl\",\n    color: \"gray.400\",\n    mt: 28,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Wind, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Text, {\n    fontWeight: \"600\",\n    pt: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }, \"No tokens to display in this marketplace\"))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SimpleGrid, {\n    columns: {\n      sm: 1,\n      md: 2,\n      lg: 3,\n      xl: 4\n    },\n    gap: 7,\n    pb: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, tokens.slice(1).map(token => {\n    return /*#__PURE__*/React.createElement(Box, {\n      display: \"grid\",\n      transition: \"250ms padding\",\n      padding: 1,\n      _hover: {\n        padding: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TokenCard, Object.assign({\n      key: `${token.address}-${token.id}`,\n      config: system.config\n    }, token, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 23\n      }\n    })));\n  }), /*#__PURE__*/React.createElement(VisibilityTrigger, {\n    key: ((_state$marketplace$to3 = state.marketplace.tokens) === null || _state$marketplace$to3 === void 0 ? void 0 : _state$marketplace$to3.length) + ':' + tokens.length,\n    onVisible: loadMore,\n    allowedDistanceToViewport: 600,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }))))));\n}","map":{"version":3,"sources":["/Users/frankenstein/projects/minter/src/components/Marketplace/Catalog/index.tsx"],"names":["React","useEffect","Text","Flex","Heading","SimpleGrid","Spinner","Box","Wind","useSelector","useDispatch","getMarketplaceNftsQuery","loadMoreMarketplaceNftsQuery","TokenCard","FeaturedToken","VisibilityTrigger","Catalog","system","marketplace","state","s","dispatch","address","loadMore","tokens","filter","x","token","map","loaded","length","config","sm","md","lg","xl","slice","padding","id"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { Text, Flex, Heading, SimpleGrid, Spinner, Box } from '@chakra-ui/react';\nimport { Wind } from 'react-feather';\nimport { useSelector, useDispatch } from '../../../reducer';\nimport {\n  getMarketplaceNftsQuery,\n  loadMoreMarketplaceNftsQuery\n} from '../../../reducer/async/queries';\nimport TokenCard from '../../common/TokenCard';\nimport FeaturedToken from './FeaturedToken';\nimport { VisibilityTrigger } from '../../common/VisibilityTrigger';\n\nexport default function Catalog() {\n  const { system, marketplace: state } = useSelector(s => s);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getMarketplaceNftsQuery(state.marketplace.address));\n  }, [state.marketplace.address, dispatch]);\n\n  const loadMore = () => {\n    dispatch(loadMoreMarketplaceNftsQuery({}));\n  };\n\n  let tokens =\n    state.marketplace.tokens?.filter(x => x.token).map(x => x.token!) ?? [];\n\n  return (\n    <Flex\n      w=\"100vw\"\n      h=\"100%\"\n      bg=\"brand.brightGray\"\n      px={10}\n      pt={6}\n      overflowY=\"scroll\"\n      justify=\"start\"\n      flexDir=\"column\"\n    >\n      {state.marketplace.loaded && tokens.length > 0 ? (\n        <Flex width=\"calc(100vw - 5rem)\" justifyContent=\"center\" alignItems=\"center\">\n          <FeaturedToken config={system.config} {...tokens[0]} />\n        </Flex>\n      ) : null}\n      <Flex\n        flex=\"1\"\n        w=\"100%\"\n        flexDir=\"column\"\n      >\n        {!state.marketplace.loaded ? (\n          <Flex flexDir=\"column\" align=\"center\" flex=\"1\" pt={20}>\n            <Spinner size=\"xl\" mb={6} color=\"gray.300\" />\n            <Heading size=\"lg\" textAlign=\"center\" color=\"gray.500\">\n              Loading...\n              </Heading>\n          </Flex>\n        ) : tokens.length === 0 ? (\n          <Flex w=\"100%\" flex=\"1\" flexDir=\"column\" align=\"center\">\n            <Flex\n              px={20}\n              py={10}\n              bg=\"gray.200\"\n              textAlign=\"center\"\n              align=\"center\"\n              borderRadius=\"5px\"\n              flexDir=\"column\"\n              fontSize=\"xl\"\n              color=\"gray.400\"\n              mt={28}\n            >\n              <Wind />\n              <Text fontWeight=\"600\" pt={5}>\n                No tokens to display in this marketplace\n                </Text>\n            </Flex>\n          </Flex>\n        ) : (\n          <>\n            <SimpleGrid\n              columns={{ sm: 1, md: 2, lg: 3, xl: 4 }}\n              gap={7}\n              pb={8}\n            >\n              <>\n                {tokens.slice(1).map(token => {\n                  return (\n                    <Box display=\"grid\" transition=\"250ms padding\" padding={1} _hover={{padding: 0}}>\n                      <TokenCard\n                        key={`${token.address}-${token.id}`}\n                        config={system.config}\n                        {...token}\n                      />\n                    </Box>\n                  );\n                })}\n                <VisibilityTrigger\n                  key={state.marketplace.tokens?.length + ':' + tokens.length}\n                  onVisible={loadMore}\n                  allowedDistanceToViewport={600}\n                />\n              </>\n            </SimpleGrid>\n          </>\n        )}\n      </Flex>\n    </Flex>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}