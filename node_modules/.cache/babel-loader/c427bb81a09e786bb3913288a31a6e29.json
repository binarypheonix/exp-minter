{"ast":null,"code":"import React,{useEffect}from'react';import{Flex,Heading,Box,Button,Menu,MenuButton,MenuList,MenuOptionGroup,MenuItemOption}from'@chakra-ui/react';import{CreateCollectionButton}from'../common/modals/CreateCollection';import{useSelector,useDispatch}from'../../reducer';import{selectCollection}from'../../reducer/slices/createNft';import{getWalletAssetContractsQuery}from'../../reducer/async/queries';import{ChevronDown}from'react-feather';export default function CollectionSelect(){var _collections$state$co,_collections$state$co2;var collections=useSelector(function(s){return s.collections.collections;});var state=useSelector(function(s){return s.createNft;});var dispatch=useDispatch();useEffect(function(){dispatch(getWalletAssetContractsQuery());},[collections,dispatch]);return/*#__PURE__*/React.createElement(Flex,{pb:8,flexDir:\"column\"},/*#__PURE__*/React.createElement(Flex,{pb:4,align:\"center\",justify:\"space-between\"},/*#__PURE__*/React.createElement(Heading,{size:\"md\"},\"Select a collection\"),/*#__PURE__*/React.createElement(CreateCollectionButton,{sync:true})),/*#__PURE__*/React.createElement(Menu,null,/*#__PURE__*/React.createElement(MenuButton,{as:Button,border:\"1px solid\",borderColor:\"brand.gray\",fontSize:\"lg\",fontWeight:\"normal\",py:3,height:\"auto\",backgroundColor:\"white\",color:state.collectionAddress?'brand.black':'brand.gray'},/*#__PURE__*/React.createElement(Flex,{align:\"center\"},/*#__PURE__*/React.createElement(Box,{mr:3},/*#__PURE__*/React.createElement(ChevronDown,null)),state.collectionAddress&&((_collections$state$co=collections[state.collectionAddress])===null||_collections$state$co===void 0?void 0:(_collections$state$co2=_collections$state$co.metadata)===null||_collections$state$co2===void 0?void 0:_collections$state$co2.name)||'No collection selected')),/*#__PURE__*/React.createElement(MenuList,null,/*#__PURE__*/React.createElement(MenuOptionGroup,{type:\"radio\",defaultValue:state.collectionAddress||''},Object.keys(collections).map(function(address){return/*#__PURE__*/React.createElement(MenuItemOption,{key:address,value:address,selected:address===state.collectionAddress,onClick:function onClick(){return dispatch(selectCollection(address));}},collections[address].metadata.name);})))));}","map":{"version":3,"sources":["/Users/frankenstein/projects/minter/src/components/CreateNonFungiblePage/CollectionSelect.tsx"],"names":["React","useEffect","Flex","Heading","Box","Button","Menu","MenuButton","MenuList","MenuOptionGroup","MenuItemOption","CreateCollectionButton","useSelector","useDispatch","selectCollection","getWalletAssetContractsQuery","ChevronDown","CollectionSelect","collections","s","state","createNft","dispatch","collectionAddress","metadata","name","Object","keys","map","address"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OACEC,IADF,CAEEC,OAFF,CAGEC,GAHF,CAIEC,MAJF,CAKEC,IALF,CAMEC,UANF,CAOEC,QAPF,CAQEC,eARF,CASEC,cATF,KAUO,kBAVP,CAWA,OAASC,sBAAT,KAAuC,mCAAvC,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,eAAzC,CACA,OAASC,gBAAT,KAAiC,gCAAjC,CACA,OAASC,4BAAT,KAA6C,6BAA7C,CACA,OAASC,WAAT,KAA4B,eAA5B,CAEA,cAAe,SAASC,CAAAA,gBAAT,EAA4B,kDACzC,GAAMC,CAAAA,WAAW,CAAGN,WAAW,CAAC,SAAAO,CAAC,QAAIA,CAAAA,CAAC,CAACD,WAAF,CAAcA,WAAlB,EAAF,CAA/B,CACA,GAAME,CAAAA,KAAK,CAAGR,WAAW,CAAC,SAAAO,CAAC,QAAIA,CAAAA,CAAC,CAACE,SAAN,EAAF,CAAzB,CACA,GAAMC,CAAAA,QAAQ,CAAGT,WAAW,EAA5B,CAEAZ,SAAS,CAAC,UAAM,CACdqB,QAAQ,CAACP,4BAA4B,EAA7B,CAAR,CACD,CAFQ,CAEN,CAACG,WAAD,CAAcI,QAAd,CAFM,CAAT,CAIA,mBACE,oBAAC,IAAD,EAAM,EAAE,CAAE,CAAV,CAAa,OAAO,CAAC,QAArB,eACE,oBAAC,IAAD,EAAM,EAAE,CAAE,CAAV,CAAa,KAAK,CAAC,QAAnB,CAA4B,OAAO,CAAC,eAApC,eACE,oBAAC,OAAD,EAAS,IAAI,CAAC,IAAd,wBADF,cAEE,oBAAC,sBAAD,EAAwB,IAAI,CAAE,IAA9B,EAFF,CADF,cAKE,oBAAC,IAAD,mBACE,oBAAC,UAAD,EACE,EAAE,CAAEjB,MADN,CAEE,MAAM,CAAC,WAFT,CAGE,WAAW,CAAC,YAHd,CAIE,QAAQ,CAAC,IAJX,CAKE,UAAU,CAAC,QALb,CAME,EAAE,CAAE,CANN,CAOE,MAAM,CAAC,MAPT,CAQE,eAAe,CAAC,OARlB,CASE,KAAK,CAAEe,KAAK,CAACG,iBAAN,CAA0B,aAA1B,CAA0C,YATnD,eAWE,oBAAC,IAAD,EAAM,KAAK,CAAC,QAAZ,eACE,oBAAC,GAAD,EAAK,EAAE,CAAE,CAAT,eACE,oBAAC,WAAD,MADF,CADF,CAIIH,KAAK,CAACG,iBAAN,0BACAL,WAAW,CAACE,KAAK,CAACG,iBAAP,CADX,wEACA,sBAAsCC,QADtC,iDACA,uBAAgDC,IADhD,CAAD,EAEC,wBANJ,CAXF,CADF,cAqBE,oBAAC,QAAD,mBACE,oBAAC,eAAD,EACE,IAAI,CAAC,OADP,CAEE,YAAY,CAAEL,KAAK,CAACG,iBAAN,EAA2B,EAF3C,EAIGG,MAAM,CAACC,IAAP,CAAYT,WAAZ,EAAyBU,GAAzB,CAA6B,SAAAC,OAAO,qBACnC,oBAAC,cAAD,EACE,GAAG,CAAEA,OADP,CAEE,KAAK,CAAEA,OAFT,CAGE,QAAQ,CAAEA,OAAO,GAAKT,KAAK,CAACG,iBAH9B,CAIE,OAAO,CAAE,yBAAMD,CAAAA,QAAQ,CAACR,gBAAgB,CAACe,OAAD,CAAjB,CAAd,EAJX,EAMGX,WAAW,CAACW,OAAD,CAAX,CAAqBL,QAArB,CAA8BC,IANjC,CADmC,EAApC,CAJH,CADF,CArBF,CALF,CADF,CA+CD","sourcesContent":["import React, { useEffect } from 'react';\nimport {\n  Flex,\n  Heading,\n  Box,\n  Button,\n  Menu,\n  MenuButton,\n  MenuList,\n  MenuOptionGroup,\n  MenuItemOption\n} from '@chakra-ui/react';\nimport { CreateCollectionButton } from '../common/modals/CreateCollection';\nimport { useSelector, useDispatch } from '../../reducer';\nimport { selectCollection } from '../../reducer/slices/createNft';\nimport { getWalletAssetContractsQuery } from '../../reducer/async/queries';\nimport { ChevronDown } from 'react-feather';\n\nexport default function CollectionSelect() {\n  const collections = useSelector(s => s.collections.collections);\n  const state = useSelector(s => s.createNft);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getWalletAssetContractsQuery());\n  }, [collections, dispatch]);\n\n  return (\n    <Flex pb={8} flexDir=\"column\">\n      <Flex pb={4} align=\"center\" justify=\"space-between\">\n        <Heading size=\"md\">Select a collection</Heading>\n        <CreateCollectionButton sync={true} />\n      </Flex>\n      <Menu>\n        <MenuButton\n          as={Button}\n          border=\"1px solid\"\n          borderColor=\"brand.gray\"\n          fontSize=\"lg\"\n          fontWeight=\"normal\"\n          py={3}\n          height=\"auto\"\n          backgroundColor=\"white\"\n          color={state.collectionAddress ? 'brand.black' : 'brand.gray'}\n        >\n          <Flex align=\"center\">\n            <Box mr={3}>\n              <ChevronDown />\n            </Box>\n            {(state.collectionAddress &&\n              collections[state.collectionAddress]?.metadata?.name) ||\n              'No collection selected'}\n          </Flex>\n        </MenuButton>\n        <MenuList>\n          <MenuOptionGroup\n            type=\"radio\"\n            defaultValue={state.collectionAddress || ''}\n          >\n            {Object.keys(collections).map(address => (\n              <MenuItemOption\n                key={address}\n                value={address}\n                selected={address === state.collectionAddress}\n                onClick={() => dispatch(selectCollection(address))}\n              >\n                {collections[address].metadata.name}\n              </MenuItemOption>\n            ))}\n          </MenuOptionGroup>\n        </MenuList>\n      </Menu>\n    </Flex>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}