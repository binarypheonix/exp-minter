{"ast":null,"code":"import{createSlice}from'@reduxjs/toolkit';import{readFileAsDataUrlAction}from'../async/actions';// State\nexport var steps=['file_upload','asset_details','confirm'];export var CreateStatus;(function(CreateStatus){CreateStatus[\"Ready\"]=\"ready\";CreateStatus[\"InProgress\"]=\"inProgress\";CreateStatus[\"Complete\"]=\"complete\";})(CreateStatus||(CreateStatus={}));export var initialState={step:'file_upload',selectedFile:null,displayImageFile:null,uploadedArtifact:null,fields:{name:null,description:null},attributes:[],collectionAddress:null,createStatus:CreateStatus.Ready};// Async Thunks\n// Reducers & Slice\nvar slice=createSlice({name:'createNft',initialState:initialState,reducers:{incrementStep:function incrementStep(state){var stepIdx=steps.indexOf(state.step);if(stepIdx+1<steps.length){state.step=steps[stepIdx+1];}},decrementStep:function decrementStep(state){var stepIdx=steps.indexOf(state.step);if(stepIdx>0){state.step=steps[stepIdx-1];}},updateField:function updateField(state,action){state.fields[action.payload.name]=action.payload.value;},updateSelectedFile:function updateSelectedFile(state,action){state.selectedFile=action.payload;},clearSelectedfile:function clearSelectedfile(state){state.selectedFile=null;},updateDisplayImageFile:function updateDisplayImageFile(state,action){state.displayImageFile=action.payload;},clearDisplayImagFile:function clearDisplayImagFile(state){state.displayImageFile=null;},addMetadataRow:function addMetadataRow(state){state.attributes.push({name:'',value:''});},updateMetadataRowName:function updateMetadataRowName(state,action){if(state.attributes[action.payload.key]){state.attributes[action.payload.key].name=action.payload.name;}},updateMetadataRowValue:function updateMetadataRowValue(state,action){if(state.attributes[action.payload.key]){state.attributes[action.payload.key].value=action.payload.value;}},deleteMetadataRow:function deleteMetadataRow(state,action){state.attributes.splice(action.payload.key,1);},selectCollection:function selectCollection(state,action){state.collectionAddress=action.payload;},setCreateStatus:function setCreateStatus(state,action){state.createStatus=action.payload;},clearForm:function clearForm(){return initialState;}},extraReducers:function extraReducers(_ref){var addCase=_ref.addCase;addCase(readFileAsDataUrlAction.fulfilled,function(state,action){if(action.payload.ns==='createNft'){state.selectedFile=action.payload.result;}});}});var _slice$actions=slice.actions,incrementStep=_slice$actions.incrementStep,decrementStep=_slice$actions.decrementStep,updateField=_slice$actions.updateField,updateSelectedFile=_slice$actions.updateSelectedFile,clearSelectedfile=_slice$actions.clearSelectedfile,updateDisplayImageFile=_slice$actions.updateDisplayImageFile,addMetadataRow=_slice$actions.addMetadataRow,updateMetadataRowName=_slice$actions.updateMetadataRowName,updateMetadataRowValue=_slice$actions.updateMetadataRowValue,deleteMetadataRow=_slice$actions.deleteMetadataRow,selectCollection=_slice$actions.selectCollection,setCreateStatus=_slice$actions.setCreateStatus,clearForm=_slice$actions.clearForm;export{incrementStep,decrementStep,updateField,updateSelectedFile,clearSelectedfile,updateDisplayImageFile,addMetadataRow,updateMetadataRowName,updateMetadataRowValue,deleteMetadataRow,selectCollection,setCreateStatus,clearForm};export default slice;","map":{"version":3,"sources":["/Users/frankenstein/projects/minter/src/reducer/slices/createNft.ts"],"names":["createSlice","readFileAsDataUrlAction","steps","CreateStatus","initialState","step","selectedFile","displayImageFile","uploadedArtifact","fields","name","description","attributes","collectionAddress","createStatus","Ready","slice","reducers","incrementStep","state","stepIdx","indexOf","length","decrementStep","updateField","action","payload","value","updateSelectedFile","clearSelectedfile","updateDisplayImageFile","clearDisplayImagFile","addMetadataRow","push","updateMetadataRowName","key","updateMetadataRowValue","deleteMetadataRow","splice","selectCollection","setCreateStatus","clearForm","extraReducers","addCase","fulfilled","ns","result","actions"],"mappings":"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","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { NftMetadataAttribute } from '../../lib/nfts/decoders';\nimport { readFileAsDataUrlAction } from '../async/actions';\n\n// State\n\ntype Step = 'file_upload' | 'asset_details' | 'collection_select' | 'confirm';\n\nexport const steps: Step[] = ['file_upload', 'asset_details', 'confirm'];\n\ninterface Fields {\n  name: string | null;\n  description: string | null;\n}\n\nexport enum CreateStatus {\n  Ready = 'ready',\n  InProgress = 'inProgress',\n  Complete = 'complete'\n}\n\nexport interface SelectedFile {\n  objectUrl: string;\n  name: string;\n  type: string;\n  size: number;\n}\n\nexport interface UploadedArtifact {\n  artifactUri: string;\n  thumbnailUri: string;\n}\n\nexport interface CreateNftState {\n  step: Step;\n  selectedFile: SelectedFile | null;\n  displayImageFile: SelectedFile | null;\n  uploadedArtifact: UploadedArtifact | null;\n  fields: Fields;\n  attributes: Array<NftMetadataAttribute>;\n  collectionAddress: string | null;\n  createStatus: CreateStatus;\n}\n\nexport const initialState: CreateNftState = {\n  step: 'file_upload',\n  selectedFile: null,\n  displayImageFile: null,\n  uploadedArtifact: null,\n  fields: {\n    name: null,\n    description: null\n  },\n  attributes: [],\n  collectionAddress: null,\n  createStatus: CreateStatus.Ready\n};\n\n// Async Thunks\n\n// Reducers & Slice\n\ntype UpdateFieldAction = PayloadAction<{ name: keyof Fields; value: string }>;\ntype UpdateRowNameAction = PayloadAction<{ key: number; name: string }>;\ntype UpdateRowValueAction = PayloadAction<{ key: number; value: string }>;\n\nconst slice = createSlice({\n  name: 'createNft',\n  initialState,\n  reducers: {\n    incrementStep(state) {\n      const stepIdx = steps.indexOf(state.step);\n      if (stepIdx + 1 < steps.length) {\n        state.step = steps[stepIdx + 1];\n      }\n    },\n    decrementStep(state) {\n      const stepIdx = steps.indexOf(state.step);\n      if (stepIdx > 0) {\n        state.step = steps[stepIdx - 1];\n      }\n    },\n    updateField(state, action: UpdateFieldAction) {\n      state.fields[action.payload.name] = action.payload.value;\n    },\n    updateSelectedFile(state, action: PayloadAction<SelectedFile>) {\n      state.selectedFile = action.payload;\n    },\n    clearSelectedfile(state) {\n      state.selectedFile = null;\n    },\n    updateDisplayImageFile(state, action: PayloadAction<SelectedFile>) {\n      state.displayImageFile = action.payload;\n    },\n    clearDisplayImagFile(state) {\n      state.displayImageFile = null;\n    },\n    addMetadataRow(state) {\n      state.attributes.push({ name: '', value: '' });\n    },\n    updateMetadataRowName(state, action: UpdateRowNameAction) {\n      if (state.attributes[action.payload.key]) {\n        state.attributes[action.payload.key].name = action.payload.name;\n      }\n    },\n    updateMetadataRowValue(state, action: UpdateRowValueAction) {\n      if (state.attributes[action.payload.key]) {\n        state.attributes[action.payload.key].value = action.payload.value;\n      }\n    },\n    deleteMetadataRow(state, action: PayloadAction<{ key: number }>) {\n      state.attributes.splice(action.payload.key, 1);\n    },\n    selectCollection(state, action: PayloadAction<string>) {\n      state.collectionAddress = action.payload;\n    },\n    setCreateStatus(state, action: PayloadAction<CreateStatus>) {\n      state.createStatus = action.payload;\n    },\n    clearForm() {\n      return initialState;\n    }\n  },\n  extraReducers: ({ addCase }) => {\n    addCase(readFileAsDataUrlAction.fulfilled, (state, action) => {\n      if (action.payload.ns === 'createNft') {\n        state.selectedFile = action.payload.result;\n      }\n    });\n  }\n});\n\nexport const {\n  incrementStep,\n  decrementStep,\n  updateField,\n  updateSelectedFile,\n  clearSelectedfile,\n  updateDisplayImageFile,\n  addMetadataRow,\n  updateMetadataRowName,\n  updateMetadataRowValue,\n  deleteMetadataRow,\n  selectCollection,\n  setCreateStatus,\n  clearForm\n} = slice.actions;\n\nexport default slice;\n"]},"metadata":{},"sourceType":"module"}