{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { getMarketplaceNftsQuery, loadMoreMarketplaceNftsQuery } from '../async/queries';\nimport config from '../../config.json'; //// State\n// Types\n\n// Data\nconst globalMarketplaceAddress = config.contracts.marketplace.fixedPrice.tez;\nexport const initialState = {\n  marketplace: {\n    address: globalMarketplaceAddress,\n    tokens: null,\n    loaded: false\n  }\n}; //// Reducers & Slice\n\nconst populateMarketplaceR = (state, {\n  payload\n}) => {\n  state.marketplace.tokens = payload.tokens;\n  state.marketplace.loaded = true;\n};\n\nconst slice = createSlice({\n  name: 'marketplace',\n  initialState,\n  reducers: {\n    populateMarketplace: populateMarketplaceR\n  },\n  extraReducers: ({\n    addCase\n  }) => {\n    addCase(getMarketplaceNftsQuery.fulfilled, populateMarketplaceR);\n    addCase(loadMoreMarketplaceNftsQuery.fulfilled, populateMarketplaceR);\n  }\n});\nexport const {\n  populateMarketplace\n} = slice.actions;\nexport default slice;","map":{"version":3,"sources":["/Users/frankenstein/projects/minter/src/reducer/slices/marketplace.ts"],"names":["createSlice","getMarketplaceNftsQuery","loadMoreMarketplaceNftsQuery","config","globalMarketplaceAddress","contracts","marketplace","fixedPrice","tez","initialState","address","tokens","loaded","populateMarketplaceR","state","payload","slice","name","reducers","populateMarketplace","extraReducers","addCase","fulfilled","actions"],"mappings":"AAAA,SAASA,WAAT,QAAwD,kBAAxD;AACA,SACEC,uBADF,EAEEC,4BAFF,QAGO,kBAHP;AAMA,OAAOC,MAAP,MAAmB,mBAAnB,C,CAEA;AAEA;;AAgBA;AAEA,MAAMC,wBAAwB,GAAGD,MAAM,CAACE,SAAP,CAAiBC,WAAjB,CAA6BC,UAA7B,CAAwCC,GAAzE;AAEA,OAAO,MAAMC,YAA8B,GAAG;AAC5CH,EAAAA,WAAW,EAAE;AACXI,IAAAA,OAAO,EAAEN,wBADE;AAEXO,IAAAA,MAAM,EAAE,IAFG;AAGXC,IAAAA,MAAM,EAAE;AAHG;AAD+B,CAAvC,C,CAQP;;AAIA,MAAMC,oBAAyC,GAAG,CAACC,KAAD,EAAQ;AAAEC,EAAAA;AAAF,CAAR,KAAwB;AACxED,EAAAA,KAAK,CAACR,WAAN,CAAkBK,MAAlB,GAA2BI,OAAO,CAACJ,MAAnC;AACAG,EAAAA,KAAK,CAACR,WAAN,CAAkBM,MAAlB,GAA2B,IAA3B;AACD,CAHD;;AAKA,MAAMI,KAAK,GAAGhB,WAAW,CAAC;AACxBiB,EAAAA,IAAI,EAAE,aADkB;AAExBR,EAAAA,YAFwB;AAGxBS,EAAAA,QAAQ,EAAE;AACRC,IAAAA,mBAAmB,EAAEN;AADb,GAHc;AAMxBO,EAAAA,aAAa,EAAE,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAiB;AAC9BA,IAAAA,OAAO,CAACpB,uBAAuB,CAACqB,SAAzB,EAAoCT,oBAApC,CAAP;AACAQ,IAAAA,OAAO,CAACnB,4BAA4B,CAACoB,SAA9B,EAAyCT,oBAAzC,CAAP;AACD;AATuB,CAAD,CAAzB;AAYA,OAAO,MAAM;AAAEM,EAAAA;AAAF,IAA0BH,KAAK,CAACO,OAAtC;AAEP,eAAeP,KAAf","sourcesContent":["import { createSlice, PayloadAction, CaseReducer } from '@reduxjs/toolkit';\nimport {\n  getMarketplaceNftsQuery,\n  loadMoreMarketplaceNftsQuery\n} from '../async/queries';\nimport { Nft } from '../../lib/nfts/decoders';\nimport { MarketplaceNftLoadingData } from '../../lib/nfts/queries';\nimport config from '../../config.json';\n\n//// State\n\n// Types\n\nexport type Token = Nft;\n\nexport interface Marketplace {\n  address: string;\n  tokens: MarketplaceNftLoadingData[] | null;\n  loaded: boolean;\n}\n\nexport interface MarketplaceState {\n  marketplace: Marketplace;\n}\n\ntype Reducer<A> = CaseReducer<MarketplaceState, PayloadAction<A>>;\n\n// Data\n\nconst globalMarketplaceAddress = config.contracts.marketplace.fixedPrice.tez;\n\nexport const initialState: MarketplaceState = {\n  marketplace: {\n    address: globalMarketplaceAddress,\n    tokens: null,\n    loaded: false\n  }\n};\n\n//// Reducers & Slice\n\ntype PopulateMarketplace = Reducer<{ tokens: MarketplaceNftLoadingData[] }>;\n\nconst populateMarketplaceR: PopulateMarketplace = (state, { payload }) => {\n  state.marketplace.tokens = payload.tokens;\n  state.marketplace.loaded = true;\n};\n\nconst slice = createSlice({\n  name: 'marketplace',\n  initialState,\n  reducers: {\n    populateMarketplace: populateMarketplaceR\n  },\n  extraReducers: ({ addCase }) => {\n    addCase(getMarketplaceNftsQuery.fulfilled, populateMarketplaceR);\n    addCase(loadMoreMarketplaceNftsQuery.fulfilled, populateMarketplaceR);\n  }\n});\n\nexport const { populateMarketplace } = slice.actions;\n\nexport default slice;\n"]},"metadata":{},"sourceType":"module"}