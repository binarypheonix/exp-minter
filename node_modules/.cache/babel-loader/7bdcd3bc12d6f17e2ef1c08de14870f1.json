{"ast":null,"code":"import{createSlice}from'@reduxjs/toolkit';import{readFileAsDataUrlAction}from'../async/actions';export var initialState={selectedCsvFile:null};var slice=createSlice({name:'createNftCsvImport',initialState:initialState,reducers:{updateSelectedCsvFile:function updateSelectedCsvFile(state,action){state.selectedCsvFile=action.payload;},clearSelectedCsvFile:function clearSelectedCsvFile(state){state.selectedCsvFile=null;}},extraReducers:function extraReducers(_ref){var addCase=_ref.addCase;addCase(readFileAsDataUrlAction.fulfilled,function(state,action){if(action.payload.ns==='createNftCsvImport'){state.selectedCsvFile=action.payload.result;}});}});var _slice$actions=slice.actions,updateSelectedCsvFile=_slice$actions.updateSelectedCsvFile,clearSelectedCsvFile=_slice$actions.clearSelectedCsvFile;export{updateSelectedCsvFile,clearSelectedCsvFile};export default slice;","map":{"version":3,"sources":["/Users/frankenstein/projects/minter/src/reducer/slices/createNftCsvImport.ts"],"names":["createSlice","readFileAsDataUrlAction","initialState","selectedCsvFile","slice","name","reducers","updateSelectedCsvFile","state","action","payload","clearSelectedCsvFile","extraReducers","addCase","fulfilled","ns","result","actions"],"mappings":"AAAA,OAASA,WAAT,KAA2C,kBAA3C,CACA,OAASC,uBAAT,KAAwC,kBAAxC,CAaA,MAAO,IAAMC,CAAAA,YAAqC,CAAG,CACnDC,eAAe,CAAE,IADkC,CAA9C,CAIP,GAAMC,CAAAA,KAAK,CAAGJ,WAAW,CAAC,CACxBK,IAAI,CAAE,oBADkB,CAExBH,YAAY,CAAZA,YAFwB,CAGxBI,QAAQ,CAAE,CACRC,qBADQ,gCACcC,KADd,CACqBC,MADrB,CAC0D,CAChED,KAAK,CAACL,eAAN,CAAwBM,MAAM,CAACC,OAA/B,CACD,CAHO,CAIRC,oBAJQ,+BAIaH,KAJb,CAIoB,CAC1BA,KAAK,CAACL,eAAN,CAAwB,IAAxB,CACD,CANO,CAHc,CAWxBS,aAAa,CAAE,4BAAiB,IAAdC,CAAAA,OAAc,MAAdA,OAAc,CAC9BA,OAAO,CAACZ,uBAAuB,CAACa,SAAzB,CAAoC,SAACN,KAAD,CAAQC,MAAR,CAAmB,CAC5D,GAAIA,MAAM,CAACC,OAAP,CAAeK,EAAf,GAAsB,oBAA1B,CAAgD,CAC9CP,KAAK,CAACL,eAAN,CAAwBM,MAAM,CAACC,OAAP,CAAeM,MAAvC,CACD,CACF,CAJM,CAAP,CAKD,CAjBuB,CAAD,CAAzB,CAoBO,mBAAwDZ,KAAK,CAACa,OAA9D,CAAQV,qBAAR,gBAAQA,qBAAR,CAA+BI,oBAA/B,gBAA+BA,oBAA/B,C,mDAEP,cAAeP,CAAAA,KAAf","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { readFileAsDataUrlAction } from '../async/actions';\n\nexport interface SelectedFile {\n  objectUrl: string;\n  name: string;\n  type: string;\n  size: number;\n}\n\nexport interface CreateNftCsvImportState {\n  selectedCsvFile: SelectedFile | null;\n}\n\nexport const initialState: CreateNftCsvImportState = {\n  selectedCsvFile: null\n};\n\nconst slice = createSlice({\n  name: 'createNftCsvImport',\n  initialState,\n  reducers: {\n    updateSelectedCsvFile(state, action: PayloadAction<SelectedFile>) {\n      state.selectedCsvFile = action.payload;\n    },\n    clearSelectedCsvFile(state) {\n      state.selectedCsvFile = null;\n    }\n  },\n  extraReducers: ({ addCase }) => {\n    addCase(readFileAsDataUrlAction.fulfilled, (state, action) => {\n      if (action.payload.ns === 'createNftCsvImport') {\n        state.selectedCsvFile = action.payload.result;\n      }\n    });\n  }\n});\n\nexport const { updateSelectedCsvFile, clearSelectedCsvFile } = slice.actions;\n\nexport default slice;\n"]},"metadata":{},"sourceType":"module"}