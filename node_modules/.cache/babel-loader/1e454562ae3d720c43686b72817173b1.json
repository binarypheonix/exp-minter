{"ast":null,"code":"import React,{useEffect}from'react';import{Switch,Route}from'wouter';import CreateNonFungiblePage from'../CreateNonFungiblePage';import CollectionsCatalog from'../Collections/Catalog';import CollectionDisplay from'../Collections/Catalog/CollectionDisplay';import CollectionsTokenDetail from'../Collections/TokenDetail';import MarketplaceCatalog from'../Marketplace/Catalog';import Header from'../common/Header';import{Flex}from'@chakra-ui/react';import Notifications from'../common/Notifications';import{useSelector,useDispatch}from'../../reducer';import{reconnectWallet}from'../../reducer/async/wallet';import Creator from'../Creator';// import { getMarketplaceNftsQuery } from '../../reducer/async/queries';\nexport default function App(){var dispatch=useDispatch();var state=useSelector(function(s){return s;});var walletReconnectAttempted=state.system.walletReconnectAttempted;// // This causes excessive resource consumption as *all* marketplace data\n// // loads when the app is mounted, even if the user has not landed or will\n// // not land on the `/marketplace` view\n//\n// useEffect(() => {\n//   dispatch(getMarketplaceNftsQuery(state.marketplace.marketplace.address));\n// }, [state.marketplace.marketplace.address, dispatch]);\nuseEffect(function(){if(!walletReconnectAttempted){dispatch(reconnectWallet());}},[walletReconnectAttempted,dispatch]);return/*#__PURE__*/React.createElement(Flex,{pos:\"absolute\",w:\"100%\",h:\"100%\"},/*#__PURE__*/React.createElement(Flex,{justifyContent:\"space-between\",width:\"100%\",flexDir:\"column\"},/*#__PURE__*/React.createElement(Header,null),/*#__PURE__*/React.createElement(Switch,null,/*#__PURE__*/React.createElement(Route,{path:\"/\"},/*#__PURE__*/React.createElement(MarketplaceCatalog,null)),/*#__PURE__*/React.createElement(Route,{path:\"/create\"},/*#__PURE__*/React.createElement(CreateNonFungiblePage,null)),/*#__PURE__*/React.createElement(Route,{path:\"/collections\"},/*#__PURE__*/React.createElement(CollectionsCatalog,null)),/*#__PURE__*/React.createElement(Route,{path:\"/marketplace\"},/*#__PURE__*/React.createElement(MarketplaceCatalog,null)),/*#__PURE__*/React.createElement(Route,{path:\"/creator/:minter\"},function(_ref){var minter=_ref.minter;return/*#__PURE__*/React.createElement(Creator,{minter:minter});}),/*#__PURE__*/React.createElement(Route,{path:\"/collection/:contractAddress\"},function(_ref2){var contractAddress=_ref2.contractAddress;return/*#__PURE__*/React.createElement(CollectionDisplay,{address:contractAddress,ownedOnly:false});}),/*#__PURE__*/React.createElement(Route,{path:\"/collection/:contractAddress/token/:tokenId\"},function(_ref3){var contractAddress=_ref3.contractAddress,tokenId=_ref3.tokenId;return/*#__PURE__*/React.createElement(CollectionsTokenDetail,{contractAddress:contractAddress,tokenId:parseInt(tokenId)});})),/*#__PURE__*/React.createElement(Notifications,null)));}","map":{"version":3,"sources":["/Users/frankenstein/projects/minter/src/components/App/index.tsx"],"names":["React","useEffect","Switch","Route","CreateNonFungiblePage","CollectionsCatalog","CollectionDisplay","CollectionsTokenDetail","MarketplaceCatalog","Header","Flex","Notifications","useSelector","useDispatch","reconnectWallet","Creator","App","dispatch","state","s","walletReconnectAttempted","system","minter","contractAddress","tokenId","parseInt"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,MAAT,CAAiBC,KAAjB,KAA8B,QAA9B,CACA,MAAOC,CAAAA,qBAAP,KAAkC,0BAAlC,CACA,MAAOC,CAAAA,kBAAP,KAA+B,wBAA/B,CACA,MAAOC,CAAAA,iBAAP,KAA8B,0CAA9B,CACA,MAAOC,CAAAA,sBAAP,KAAmC,4BAAnC,CACA,MAAOC,CAAAA,kBAAP,KAA+B,wBAA/B,CACA,MAAOC,CAAAA,MAAP,KAAmB,kBAAnB,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,MAAOC,CAAAA,aAAP,KAA0B,yBAA1B,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,eAAzC,CACA,OAASC,eAAT,KAAgC,4BAAhC,CACA,MAAOC,CAAAA,OAAP,KAAoB,YAApB,CACA;AAEA,cAAe,SAASC,CAAAA,GAAT,EAAe,CAC5B,GAAMC,CAAAA,QAAQ,CAAGJ,WAAW,EAA5B,CACA,GAAMK,CAAAA,KAAK,CAAGN,WAAW,CAAC,SAAAO,CAAC,QAAIA,CAAAA,CAAJ,EAAF,CAAzB,CAEA,GAAIC,CAAAA,wBAAwB,CAAGF,KAAK,CAACG,MAAN,CAAaD,wBAA5C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAnB,SAAS,CAAC,UAAM,CACd,GAAI,CAACmB,wBAAL,CAA+B,CAC7BH,QAAQ,CAACH,eAAe,EAAhB,CAAR,CACD,CACF,CAJQ,CAIN,CAACM,wBAAD,CAA2BH,QAA3B,CAJM,CAAT,CAMA,mBACE,oBAAC,IAAD,EAAM,GAAG,CAAC,UAAV,CAAqB,CAAC,CAAC,MAAvB,CAA8B,CAAC,CAAC,MAAhC,eACE,oBAAC,IAAD,EAAM,cAAc,CAAC,eAArB,CAAqC,KAAK,CAAC,MAA3C,CAAkD,OAAO,CAAC,QAA1D,eACE,oBAAC,MAAD,MADF,cAEE,oBAAC,MAAD,mBACE,oBAAC,KAAD,EAAO,IAAI,CAAC,GAAZ,eACE,oBAAC,kBAAD,MADF,CADF,cAIE,oBAAC,KAAD,EAAO,IAAI,CAAC,SAAZ,eACE,oBAAC,qBAAD,MADF,CAJF,cAOE,oBAAC,KAAD,EAAO,IAAI,CAAC,cAAZ,eACE,oBAAC,kBAAD,MADF,CAPF,cAUE,oBAAC,KAAD,EAAO,IAAI,CAAC,cAAZ,eACE,oBAAC,kBAAD,MADF,CAVF,cAaE,oBAAC,KAAD,EAAO,IAAI,CAAC,kBAAZ,EACG,kBAAGK,CAAAA,MAAH,MAAGA,MAAH,oBAAgB,oBAAC,OAAD,EAAS,MAAM,CAAEA,MAAjB,EAAhB,EADH,CAbF,cAgBE,oBAAC,KAAD,EAAO,IAAI,CAAC,8BAAZ,EACG,mBAAGC,CAAAA,eAAH,OAAGA,eAAH,oBACC,oBAAC,iBAAD,EAAmB,OAAO,CAAEA,eAA5B,CAA6C,SAAS,CAAE,KAAxD,EADD,EADH,CAhBF,cAqBE,oBAAC,KAAD,EAAO,IAAI,CAAC,6CAAZ,EACG,mBAAGA,CAAAA,eAAH,OAAGA,eAAH,CAAoBC,OAApB,OAAoBA,OAApB,oBACC,oBAAC,sBAAD,EACE,eAAe,CAAED,eADnB,CAEE,OAAO,CAAEE,QAAQ,CAACD,OAAD,CAFnB,EADD,EADH,CArBF,CAFF,cAgCE,oBAAC,aAAD,MAhCF,CADF,CADF,CAsCD","sourcesContent":["import React, { useEffect } from 'react';\nimport { Switch, Route } from 'wouter';\nimport CreateNonFungiblePage from '../CreateNonFungiblePage';\nimport CollectionsCatalog from '../Collections/Catalog';\nimport CollectionDisplay from '../Collections/Catalog/CollectionDisplay';\nimport CollectionsTokenDetail from '../Collections/TokenDetail';\nimport MarketplaceCatalog from '../Marketplace/Catalog';\nimport Header from '../common/Header';\nimport { Flex } from '@chakra-ui/react';\nimport Notifications from '../common/Notifications';\nimport { useSelector, useDispatch } from '../../reducer';\nimport { reconnectWallet } from '../../reducer/async/wallet';\nimport Creator from '../Creator';\n// import { getMarketplaceNftsQuery } from '../../reducer/async/queries';\n\nexport default function App() {\n  const dispatch = useDispatch();\n  const state = useSelector(s => s);\n\n  let walletReconnectAttempted = state.system.walletReconnectAttempted;\n\n  // // This causes excessive resource consumption as *all* marketplace data\n  // // loads when the app is mounted, even if the user has not landed or will\n  // // not land on the `/marketplace` view\n  //\n  // useEffect(() => {\n  //   dispatch(getMarketplaceNftsQuery(state.marketplace.marketplace.address));\n  // }, [state.marketplace.marketplace.address, dispatch]);\n\n  useEffect(() => {\n    if (!walletReconnectAttempted) {\n      dispatch(reconnectWallet());\n    }\n  }, [walletReconnectAttempted, dispatch]);\n\n  return (\n    <Flex pos=\"absolute\" w=\"100%\" h=\"100%\">\n      <Flex justifyContent=\"space-between\" width=\"100%\" flexDir=\"column\">\n        <Header />\n        <Switch>\n          <Route path=\"/\">\n            <MarketplaceCatalog />\n          </Route>\n          <Route path=\"/create\">\n            <CreateNonFungiblePage />\n          </Route>\n          <Route path=\"/collections\">\n            <CollectionsCatalog />\n          </Route>\n          <Route path=\"/marketplace\">\n            <MarketplaceCatalog />\n          </Route>\n          <Route path=\"/creator/:minter\">\n            {({ minter }) => <Creator minter={minter} />}\n          </Route>\n          <Route path=\"/collection/:contractAddress\">\n            {({ contractAddress }) => (\n              <CollectionDisplay address={contractAddress} ownedOnly={false} />\n            )}\n          </Route>\n          <Route path=\"/collection/:contractAddress/token/:tokenId\">\n            {({ contractAddress, tokenId }) => (\n              <CollectionsTokenDetail\n                contractAddress={contractAddress}\n                tokenId={parseInt(tokenId)}\n              />\n            )}\n          </Route>\n        </Switch>\n        <Notifications />\n      </Flex>\n    </Flex>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}