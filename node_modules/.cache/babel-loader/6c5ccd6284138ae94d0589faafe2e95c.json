{"ast":null,"code":"import _regeneratorRuntime from \"/Users/frankenstein/projects/minter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _classCallCheck from \"/Users/frankenstein/projects/minter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/frankenstein/projects/minter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"/Users/frankenstein/projects/minter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/Users/frankenstein/projects/minter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/frankenstein/projects/minter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/frankenstein/projects/minter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { Serializer, Client, LocalStorage, TransportStatus, WalletP2PTransport } from '../..';\nimport { PermissionManager } from '../../managers/PermissionManager';\nimport { AppMetadataManager } from '../../managers/AppMetadataManager';\nimport { IncomingRequestInterceptor } from '../../interceptors/IncomingRequestInterceptor';\nimport { OutgoingResponseInterceptor } from '../../interceptors/OutgoingResponseInterceptor';\nimport { BeaconMessageType } from '../../types/beacon/BeaconMessageType';\nimport { getSenderId } from '../../utils/get-sender-id';\nimport { ExposedPromise } from '../../utils/exposed-promise';\nimport { Logger } from '../../utils/Logger';\nvar logger = new Logger('WalletClient');\n/**\n * @publicapi\n *\n * The WalletClient has to be used in the wallet. It handles all the logic related to connecting to beacon-compatible\n * dapps and handling/responding to requests.\n *\n * @category Wallet\n */\n\nexport var WalletClient = /*#__PURE__*/function (_Client) {\n  _inherits(WalletClient, _Client);\n\n  var _super2 = _createSuper(WalletClient);\n\n  function WalletClient(config) {\n    var _this;\n\n    _classCallCheck(this, WalletClient);\n\n    _this = _super2.call(this, Object.assign({\n      storage: new LocalStorage()\n    }, config));\n    /**\n     * Returns whether or not the transport is connected\n     */\n\n    _this._isConnected = new ExposedPromise();\n    /**\n     * This array stores pending requests, meaning requests we received and have not yet handled / sent a response.\n     */\n\n    _this.pendingRequests = [];\n    _this.permissionManager = new PermissionManager(new LocalStorage());\n    _this.appMetadataManager = new AppMetadataManager(new LocalStorage());\n    return _this;\n  }\n\n  _createClass(WalletClient, [{\n    key: \"isConnected\",\n    get: function get() {\n      return this._isConnected.promise;\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      var _this2 = this;\n\n      var _super = Object.create(null, {\n        init: {\n          get: function get() {\n            return _get(_getPrototypeOf(WalletClient.prototype), \"init\", _this2);\n          }\n        }\n      });\n\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var keyPair, p2pTransport;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.keyPair;\n\n              case 2:\n                keyPair = _context.sent;\n                // We wait for keypair here so the P2P Transport creation is not delayed and causing issues\n                p2pTransport = new WalletP2PTransport(this.name, keyPair, this.storage, this.matrixNodes, this.iconUrl, this.appUrl);\n                return _context.abrupt(\"return\", _super.init.call(this, p2pTransport));\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n    }\n    /**\n     * This method initiates a connection to the P2P network and registers a callback that will be called\n     * whenever a message is received.\n     *\n     * @param newMessageCallback The callback that will be invoked for every message the transport receives.\n     */\n\n  }, {\n    key: \"connect\",\n    value: function connect(newMessageCallback) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var _this3 = this;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.handleResponse = function (message, connectionContext) {\n                  return __awaiter(_this3, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n                    var transport, peers, peer;\n                    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                      while (1) {\n                        switch (_context2.prev = _context2.next) {\n                          case 0:\n                            if (!(message.type === BeaconMessageType.Disconnect)) {\n                              _context2.next = 12;\n                              break;\n                            }\n\n                            _context2.next = 3;\n                            return this.transport;\n\n                          case 3:\n                            transport = _context2.sent;\n                            _context2.next = 6;\n                            return transport.getPeers();\n\n                          case 6:\n                            peers = _context2.sent;\n                            peer = peers.find(function (peerEl) {\n                              return peerEl.senderId === message.senderId;\n                            });\n\n                            if (!peer) {\n                              _context2.next = 11;\n                              break;\n                            }\n\n                            _context2.next = 11;\n                            return this.removePeer(peer);\n\n                          case 11:\n                            return _context2.abrupt(\"return\");\n\n                          case 12:\n                            if (this.pendingRequests.some(function (request) {\n                              return request[0].id === message.id;\n                            })) {\n                              _context2.next = 19;\n                              break;\n                            }\n\n                            this.pendingRequests.push([message, connectionContext]);\n\n                            if (!(message.version !== '1')) {\n                              _context2.next = 17;\n                              break;\n                            }\n\n                            _context2.next = 17;\n                            return this.sendAcknowledgeResponse(message, connectionContext);\n\n                          case 17:\n                            _context2.next = 19;\n                            return IncomingRequestInterceptor.intercept({\n                              message: message,\n                              connectionInfo: connectionContext,\n                              appMetadataManager: this.appMetadataManager,\n                              interceptorCallback: newMessageCallback\n                            });\n\n                          case 19:\n                          case \"end\":\n                            return _context2.stop();\n                        }\n                      }\n                    }, _callee2, this);\n                  }));\n                };\n\n                return _context3.abrupt(\"return\", this._connect());\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n    }\n    /**\n     * The method will attempt to initiate a connection using the active transport.\n     */\n\n  }, {\n    key: \"_connect\",\n    value: function _connect() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        var _this4 = this;\n\n        var transport;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return this.transport;\n\n              case 2:\n                transport = _context5.sent;\n\n                if (!(transport.connectionStatus === TransportStatus.NOT_CONNECTED)) {\n                  _context5.next = 10;\n                  break;\n                }\n\n                _context5.next = 6;\n                return transport.connect();\n\n              case 6:\n                transport.addListener(function (message, connectionInfo) {\n                  return __awaiter(_this4, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n                    var deserializedMessage;\n                    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n                      while (1) {\n                        switch (_context4.prev = _context4.next) {\n                          case 0:\n                            if (!(typeof message === 'string')) {\n                              _context4.next = 5;\n                              break;\n                            }\n\n                            _context4.next = 3;\n                            return new Serializer().deserialize(message);\n\n                          case 3:\n                            deserializedMessage = _context4.sent;\n                            this.handleResponse(deserializedMessage, connectionInfo);\n\n                          case 5:\n                          case \"end\":\n                            return _context4.stop();\n                        }\n                      }\n                    }, _callee4, this);\n                  }));\n                }).catch(function (error) {\n                  return logger.log('_connect', error);\n                });\n\n                this._isConnected.resolve(true);\n\n                _context5.next = 10;\n                break;\n\n              case 10:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n    }\n    /**\n     * This method sends a response for a specific request back to the DApp\n     *\n     * @param message The BeaconResponseMessage that will be sent back to the DApp\n     */\n\n  }, {\n    key: \"respond\",\n    value: function respond(message) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n        var _this5 = this;\n\n        var request;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                request = this.pendingRequests.find(function (pendingRequest) {\n                  return pendingRequest[0].id === message.id;\n                });\n\n                if (request) {\n                  _context7.next = 3;\n                  break;\n                }\n\n                throw new Error('No matching request found!');\n\n              case 3:\n                this.pendingRequests = this.pendingRequests.filter(function (pendingRequest) {\n                  return pendingRequest[0].id !== message.id;\n                });\n                _context7.t0 = OutgoingResponseInterceptor;\n                _context7.t1 = getSenderId;\n                _context7.next = 8;\n                return this.beaconId;\n\n              case 8:\n                _context7.t2 = _context7.sent;\n                _context7.next = 11;\n                return (0, _context7.t1)(_context7.t2);\n\n              case 11:\n                _context7.t3 = _context7.sent;\n                _context7.t4 = request[0];\n                _context7.t5 = message;\n                _context7.next = 16;\n                return this.getOwnAppMetadata();\n\n              case 16:\n                _context7.t6 = _context7.sent;\n                _context7.t7 = this.permissionManager;\n                _context7.t8 = this.appMetadataManager;\n\n                _context7.t9 = function interceptorCallback(response) {\n                  return __awaiter(_this5, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n                    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n                      while (1) {\n                        switch (_context6.prev = _context6.next) {\n                          case 0:\n                            _context6.next = 2;\n                            return this.respondToMessage(response, request[1]);\n\n                          case 2:\n                          case \"end\":\n                            return _context6.stop();\n                        }\n                      }\n                    }, _callee6, this);\n                  }));\n                };\n\n                _context7.t10 = {\n                  senderId: _context7.t3,\n                  request: _context7.t4,\n                  message: _context7.t5,\n                  ownAppMetadata: _context7.t6,\n                  permissionManager: _context7.t7,\n                  appMetadataManager: _context7.t8,\n                  interceptorCallback: _context7.t9\n                };\n                _context7.next = 23;\n                return _context7.t0.intercept.call(_context7.t0, _context7.t10);\n\n              case 23:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n    }\n  }, {\n    key: \"getAppMetadataList\",\n    value: function getAppMetadataList() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                return _context8.abrupt(\"return\", this.appMetadataManager.getAppMetadataList());\n\n              case 1:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n    }\n  }, {\n    key: \"getAppMetadata\",\n    value: function getAppMetadata(senderId) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee9() {\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                return _context9.abrupt(\"return\", this.appMetadataManager.getAppMetadata(senderId));\n\n              case 1:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n    }\n  }, {\n    key: \"removeAppMetadata\",\n    value: function removeAppMetadata(senderId) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee10() {\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                return _context10.abrupt(\"return\", this.appMetadataManager.removeAppMetadata(senderId));\n\n              case 1:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n    }\n  }, {\n    key: \"removeAllAppMetadata\",\n    value: function removeAllAppMetadata() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee11() {\n        return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                return _context11.abrupt(\"return\", this.appMetadataManager.removeAllAppMetadata());\n\n              case 1:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n    }\n  }, {\n    key: \"getPermissions\",\n    value: function getPermissions() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee12() {\n        return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                return _context12.abrupt(\"return\", this.permissionManager.getPermissions());\n\n              case 1:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this);\n      }));\n    }\n  }, {\n    key: \"getPermission\",\n    value: function getPermission(accountIdentifier) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee13() {\n        return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                return _context13.abrupt(\"return\", this.permissionManager.getPermission(accountIdentifier));\n\n              case 1:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this);\n      }));\n    }\n  }, {\n    key: \"removePermission\",\n    value: function removePermission(accountIdentifier) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee14() {\n        return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                return _context14.abrupt(\"return\", this.permissionManager.removePermission(accountIdentifier));\n\n              case 1:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14, this);\n      }));\n    }\n  }, {\n    key: \"removeAllPermissions\",\n    value: function removeAllPermissions() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee15() {\n        return _regeneratorRuntime.wrap(function _callee15$(_context15) {\n          while (1) {\n            switch (_context15.prev = _context15.next) {\n              case 0:\n                return _context15.abrupt(\"return\", this.permissionManager.removeAllPermissions());\n\n              case 1:\n              case \"end\":\n                return _context15.stop();\n            }\n          }\n        }, _callee15, this);\n      }));\n    }\n    /**\n     * Add a new peer to the known peers\n     * @param peer The new peer to add\n     */\n\n  }, {\n    key: \"addPeer\",\n    value: function addPeer(peer) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee16() {\n        var extendedPeer;\n        return _regeneratorRuntime.wrap(function _callee16$(_context16) {\n          while (1) {\n            switch (_context16.prev = _context16.next) {\n              case 0:\n                _context16.t0 = Object;\n                _context16.t1 = Object.assign({}, peer);\n                _context16.next = 4;\n                return getSenderId(peer.publicKey);\n\n              case 4:\n                _context16.t2 = _context16.sent;\n                _context16.t3 = {\n                  senderId: _context16.t2\n                };\n                extendedPeer = _context16.t0.assign.call(_context16.t0, _context16.t1, _context16.t3);\n                _context16.next = 9;\n                return this.transport;\n\n              case 9:\n                return _context16.abrupt(\"return\", _context16.sent.addPeer(extendedPeer));\n\n              case 10:\n              case \"end\":\n                return _context16.stop();\n            }\n          }\n        }, _callee16, this);\n      }));\n    }\n  }, {\n    key: \"removePeer\",\n    value: function removePeer(peer) {\n      var sendDisconnectToPeer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee17() {\n        var removePeerResult;\n        return _regeneratorRuntime.wrap(function _callee17$(_context17) {\n          while (1) {\n            switch (_context17.prev = _context17.next) {\n              case 0:\n                _context17.next = 2;\n                return this.transport;\n\n              case 2:\n                removePeerResult = _context17.sent.removePeer(peer);\n                _context17.next = 5;\n                return this.removePermissionsForPeers([peer]);\n\n              case 5:\n                if (!sendDisconnectToPeer) {\n                  _context17.next = 8;\n                  break;\n                }\n\n                _context17.next = 8;\n                return this.sendDisconnectToPeer(peer);\n\n              case 8:\n                return _context17.abrupt(\"return\", removePeerResult);\n\n              case 9:\n              case \"end\":\n                return _context17.stop();\n            }\n          }\n        }, _callee17, this);\n      }));\n    }\n  }, {\n    key: \"removeAllPeers\",\n    value: function removeAllPeers() {\n      var sendDisconnectToPeers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee18() {\n        var _this6 = this;\n\n        var peers, removePeerResult, disconnectPromises;\n        return _regeneratorRuntime.wrap(function _callee18$(_context18) {\n          while (1) {\n            switch (_context18.prev = _context18.next) {\n              case 0:\n                _context18.next = 2;\n                return this.transport;\n\n              case 2:\n                _context18.next = 4;\n                return _context18.sent.getPeers();\n\n              case 4:\n                peers = _context18.sent;\n                _context18.next = 7;\n                return this.transport;\n\n              case 7:\n                removePeerResult = _context18.sent.removeAllPeers();\n                _context18.next = 10;\n                return this.removePermissionsForPeers(peers);\n\n              case 10:\n                if (!sendDisconnectToPeers) {\n                  _context18.next = 14;\n                  break;\n                }\n\n                disconnectPromises = peers.map(function (peer) {\n                  return _this6.sendDisconnectToPeer(peer);\n                });\n                _context18.next = 14;\n                return Promise.all(disconnectPromises);\n\n              case 14:\n                return _context18.abrupt(\"return\", removePeerResult);\n\n              case 15:\n              case \"end\":\n                return _context18.stop();\n            }\n          }\n        }, _callee18, this);\n      }));\n    }\n  }, {\n    key: \"removePermissionsForPeers\",\n    value: function removePermissionsForPeers(peersToRemove) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee19() {\n        var permissions, peerIdsToRemove, permissionsToRemove, permissionIdentifiersToRemove;\n        return _regeneratorRuntime.wrap(function _callee19$(_context19) {\n          while (1) {\n            switch (_context19.prev = _context19.next) {\n              case 0:\n                _context19.next = 2;\n                return this.permissionManager.getPermissions();\n\n              case 2:\n                permissions = _context19.sent;\n                peerIdsToRemove = peersToRemove.map(function (peer) {\n                  return peer.senderId;\n                }); // Remove all permissions with origin of the specified peer\n\n                permissionsToRemove = permissions.filter(function (permission) {\n                  return peerIdsToRemove.includes(permission.appMetadata.senderId);\n                });\n                permissionIdentifiersToRemove = permissionsToRemove.map(function (permissionInfo) {\n                  return permissionInfo.accountIdentifier;\n                });\n                _context19.next = 8;\n                return this.permissionManager.removePermissions(permissionIdentifiersToRemove);\n\n              case 8:\n              case \"end\":\n                return _context19.stop();\n            }\n          }\n        }, _callee19, this);\n      }));\n    }\n    /**\n     * Send an acknowledge message back to the sender\n     *\n     * @param message The message that was received\n     */\n\n  }, {\n    key: \"sendAcknowledgeResponse\",\n    value: function sendAcknowledgeResponse(request, connectionContext) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee21() {\n        var _this7 = this;\n\n        var acknowledgeResponse;\n        return _regeneratorRuntime.wrap(function _callee21$(_context21) {\n          while (1) {\n            switch (_context21.prev = _context21.next) {\n              case 0:\n                // Acknowledge the message\n                acknowledgeResponse = {\n                  id: request.id,\n                  type: BeaconMessageType.Acknowledge\n                };\n                _context21.t0 = OutgoingResponseInterceptor;\n                _context21.t1 = getSenderId;\n                _context21.next = 5;\n                return this.beaconId;\n\n              case 5:\n                _context21.t2 = _context21.sent;\n                _context21.next = 8;\n                return (0, _context21.t1)(_context21.t2);\n\n              case 8:\n                _context21.t3 = _context21.sent;\n                _context21.t4 = request;\n                _context21.t5 = acknowledgeResponse;\n                _context21.next = 13;\n                return this.getOwnAppMetadata();\n\n              case 13:\n                _context21.t6 = _context21.sent;\n                _context21.t7 = this.permissionManager;\n                _context21.t8 = this.appMetadataManager;\n\n                _context21.t9 = function interceptorCallback(response) {\n                  return __awaiter(_this7, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee20() {\n                    return _regeneratorRuntime.wrap(function _callee20$(_context20) {\n                      while (1) {\n                        switch (_context20.prev = _context20.next) {\n                          case 0:\n                            _context20.next = 2;\n                            return this.respondToMessage(response, connectionContext);\n\n                          case 2:\n                          case \"end\":\n                            return _context20.stop();\n                        }\n                      }\n                    }, _callee20, this);\n                  }));\n                };\n\n                _context21.t10 = {\n                  senderId: _context21.t3,\n                  request: _context21.t4,\n                  message: _context21.t5,\n                  ownAppMetadata: _context21.t6,\n                  permissionManager: _context21.t7,\n                  appMetadataManager: _context21.t8,\n                  interceptorCallback: _context21.t9\n                };\n                _context21.next = 20;\n                return _context21.t0.intercept.call(_context21.t0, _context21.t10);\n\n              case 20:\n              case \"end\":\n                return _context21.stop();\n            }\n          }\n        }, _callee21, this);\n      }));\n    }\n    /**\n     * An internal method to send a BeaconMessage to the DApp\n     *\n     * @param response Send a message back to the DApp\n     */\n\n  }, {\n    key: \"respondToMessage\",\n    value: function respondToMessage(response, connectionContext) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee22() {\n        var serializedMessage, peerInfos, peer;\n        return _regeneratorRuntime.wrap(function _callee22$(_context22) {\n          while (1) {\n            switch (_context22.prev = _context22.next) {\n              case 0:\n                _context22.next = 2;\n                return new Serializer().serialize(response);\n\n              case 2:\n                serializedMessage = _context22.sent;\n\n                if (!connectionContext) {\n                  _context22.next = 14;\n                  break;\n                }\n\n                _context22.next = 6;\n                return this.getPeers();\n\n              case 6:\n                peerInfos = _context22.sent;\n                peer = peerInfos.find(function (peerInfo) {\n                  return peerInfo.publicKey === connectionContext.id;\n                });\n                _context22.next = 10;\n                return this.transport;\n\n              case 10:\n                _context22.next = 12;\n                return _context22.sent.send(serializedMessage, peer);\n\n              case 12:\n                _context22.next = 18;\n                break;\n\n              case 14:\n                _context22.next = 16;\n                return this.transport;\n\n              case 16:\n                _context22.next = 18;\n                return _context22.sent.send(serializedMessage);\n\n              case 18:\n              case \"end\":\n                return _context22.stop();\n            }\n          }\n        }, _callee22, this);\n      }));\n    }\n  }]);\n\n  return WalletClient;\n}(Client);","map":{"version":3,"sources":["../../../../src/clients/wallet-client/WalletClient.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Serializer, Client, LocalStorage, TransportStatus, WalletP2PTransport } from '../..';\nimport { PermissionManager } from '../../managers/PermissionManager';\nimport { AppMetadataManager } from '../../managers/AppMetadataManager';\nimport { IncomingRequestInterceptor } from '../../interceptors/IncomingRequestInterceptor';\nimport { OutgoingResponseInterceptor } from '../../interceptors/OutgoingResponseInterceptor';\nimport { BeaconMessageType } from '../../types/beacon/BeaconMessageType';\nimport { getSenderId } from '../../utils/get-sender-id';\nimport { ExposedPromise } from '../../utils/exposed-promise';\nimport { Logger } from '../../utils/Logger';\nconst logger = new Logger('WalletClient');\n/**\n * @publicapi\n *\n * The WalletClient has to be used in the wallet. It handles all the logic related to connecting to beacon-compatible\n * dapps and handling/responding to requests.\n *\n * @category Wallet\n */\nexport class WalletClient extends Client {\n    constructor(config) {\n        super(Object.assign({ storage: new LocalStorage() }, config));\n        /**\n         * Returns whether or not the transport is connected\n         */\n        this._isConnected = new ExposedPromise();\n        /**\n         * This array stores pending requests, meaning requests we received and have not yet handled / sent a response.\n         */\n        this.pendingRequests = [];\n        this.permissionManager = new PermissionManager(new LocalStorage());\n        this.appMetadataManager = new AppMetadataManager(new LocalStorage());\n    }\n    get isConnected() {\n        return this._isConnected.promise;\n    }\n    init() {\n        const _super = Object.create(null, {\n            init: { get: () => super.init }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            const keyPair = yield this.keyPair; // We wait for keypair here so the P2P Transport creation is not delayed and causing issues\n            const p2pTransport = new WalletP2PTransport(this.name, keyPair, this.storage, this.matrixNodes, this.iconUrl, this.appUrl);\n            return _super.init.call(this, p2pTransport);\n        });\n    }\n    /**\n     * This method initiates a connection to the P2P network and registers a callback that will be called\n     * whenever a message is received.\n     *\n     * @param newMessageCallback The callback that will be invoked for every message the transport receives.\n     */\n    connect(newMessageCallback) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.handleResponse = (message, connectionContext) => __awaiter(this, void 0, void 0, function* () {\n                if (message.type === BeaconMessageType.Disconnect) {\n                    const transport = yield this.transport;\n                    const peers = yield transport.getPeers();\n                    const peer = peers.find((peerEl) => peerEl.senderId === message.senderId);\n                    if (peer) {\n                        yield this.removePeer(peer);\n                    }\n                    return;\n                }\n                if (!this.pendingRequests.some((request) => request[0].id === message.id)) {\n                    this.pendingRequests.push([message, connectionContext]);\n                    if (message.version !== '1') {\n                        yield this.sendAcknowledgeResponse(message, connectionContext);\n                    }\n                    yield IncomingRequestInterceptor.intercept({\n                        message,\n                        connectionInfo: connectionContext,\n                        appMetadataManager: this.appMetadataManager,\n                        interceptorCallback: newMessageCallback\n                    });\n                }\n            });\n            return this._connect();\n        });\n    }\n    /**\n     * The method will attempt to initiate a connection using the active transport.\n     */\n    _connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const transport = (yield this.transport);\n            if (transport.connectionStatus === TransportStatus.NOT_CONNECTED) {\n                yield transport.connect();\n                transport\n                    .addListener((message, connectionInfo) => __awaiter(this, void 0, void 0, function* () {\n                    if (typeof message === 'string') {\n                        const deserializedMessage = (yield new Serializer().deserialize(message));\n                        this.handleResponse(deserializedMessage, connectionInfo);\n                    }\n                }))\n                    .catch((error) => logger.log('_connect', error));\n                this._isConnected.resolve(true);\n            }\n            else {\n                // NO-OP\n            }\n        });\n    }\n    /**\n     * This method sends a response for a specific request back to the DApp\n     *\n     * @param message The BeaconResponseMessage that will be sent back to the DApp\n     */\n    respond(message) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const request = this.pendingRequests.find((pendingRequest) => pendingRequest[0].id === message.id);\n            if (!request) {\n                throw new Error('No matching request found!');\n            }\n            this.pendingRequests = this.pendingRequests.filter((pendingRequest) => pendingRequest[0].id !== message.id);\n            yield OutgoingResponseInterceptor.intercept({\n                senderId: yield getSenderId(yield this.beaconId),\n                request: request[0],\n                message,\n                ownAppMetadata: yield this.getOwnAppMetadata(),\n                permissionManager: this.permissionManager,\n                appMetadataManager: this.appMetadataManager,\n                interceptorCallback: (response) => __awaiter(this, void 0, void 0, function* () {\n                    yield this.respondToMessage(response, request[1]);\n                })\n            });\n        });\n    }\n    getAppMetadataList() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.appMetadataManager.getAppMetadataList();\n        });\n    }\n    getAppMetadata(senderId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.appMetadataManager.getAppMetadata(senderId);\n        });\n    }\n    removeAppMetadata(senderId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.appMetadataManager.removeAppMetadata(senderId);\n        });\n    }\n    removeAllAppMetadata() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.appMetadataManager.removeAllAppMetadata();\n        });\n    }\n    getPermissions() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.permissionManager.getPermissions();\n        });\n    }\n    getPermission(accountIdentifier) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.permissionManager.getPermission(accountIdentifier);\n        });\n    }\n    removePermission(accountIdentifier) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.permissionManager.removePermission(accountIdentifier);\n        });\n    }\n    removeAllPermissions() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.permissionManager.removeAllPermissions();\n        });\n    }\n    /**\n     * Add a new peer to the known peers\n     * @param peer The new peer to add\n     */\n    addPeer(peer) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const extendedPeer = Object.assign(Object.assign({}, peer), { senderId: yield getSenderId(peer.publicKey) });\n            return (yield this.transport).addPeer(extendedPeer);\n        });\n    }\n    removePeer(peer, sendDisconnectToPeer = false) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const removePeerResult = (yield this.transport).removePeer(peer);\n            yield this.removePermissionsForPeers([peer]);\n            if (sendDisconnectToPeer) {\n                yield this.sendDisconnectToPeer(peer);\n            }\n            return removePeerResult;\n        });\n    }\n    removeAllPeers(sendDisconnectToPeers = false) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const peers = yield (yield this.transport).getPeers();\n            const removePeerResult = (yield this.transport).removeAllPeers();\n            yield this.removePermissionsForPeers(peers);\n            if (sendDisconnectToPeers) {\n                const disconnectPromises = peers.map((peer) => this.sendDisconnectToPeer(peer));\n                yield Promise.all(disconnectPromises);\n            }\n            return removePeerResult;\n        });\n    }\n    removePermissionsForPeers(peersToRemove) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const permissions = yield this.permissionManager.getPermissions();\n            const peerIdsToRemove = peersToRemove.map((peer) => peer.senderId);\n            // Remove all permissions with origin of the specified peer\n            const permissionsToRemove = permissions.filter((permission) => peerIdsToRemove.includes(permission.appMetadata.senderId));\n            const permissionIdentifiersToRemove = permissionsToRemove.map((permissionInfo) => permissionInfo.accountIdentifier);\n            yield this.permissionManager.removePermissions(permissionIdentifiersToRemove);\n        });\n    }\n    /**\n     * Send an acknowledge message back to the sender\n     *\n     * @param message The message that was received\n     */\n    sendAcknowledgeResponse(request, connectionContext) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Acknowledge the message\n            const acknowledgeResponse = {\n                id: request.id,\n                type: BeaconMessageType.Acknowledge\n            };\n            yield OutgoingResponseInterceptor.intercept({\n                senderId: yield getSenderId(yield this.beaconId),\n                request,\n                message: acknowledgeResponse,\n                ownAppMetadata: yield this.getOwnAppMetadata(),\n                permissionManager: this.permissionManager,\n                appMetadataManager: this.appMetadataManager,\n                interceptorCallback: (response) => __awaiter(this, void 0, void 0, function* () {\n                    yield this.respondToMessage(response, connectionContext);\n                })\n            });\n        });\n    }\n    /**\n     * An internal method to send a BeaconMessage to the DApp\n     *\n     * @param response Send a message back to the DApp\n     */\n    respondToMessage(response, connectionContext) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const serializedMessage = yield new Serializer().serialize(response);\n            if (connectionContext) {\n                const peerInfos = yield this.getPeers();\n                const peer = peerInfos.find((peerInfo) => peerInfo.publicKey === connectionContext.id);\n                yield (yield this.transport).send(serializedMessage, peer);\n            }\n            else {\n                yield (yield this.transport).send(serializedMessage);\n            }\n        });\n    }\n}\n//# sourceMappingURL=WalletClient.js.map"]},"metadata":{},"sourceType":"module"}