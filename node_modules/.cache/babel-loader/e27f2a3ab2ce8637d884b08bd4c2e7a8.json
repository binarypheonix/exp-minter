{"ast":null,"code":"var _jsxFileName = \"/Users/frankenstein/projects/minter/src/components/Collections/Catalog/CollectionDisplay.tsx\";\nimport React, { useEffect } from 'react';\nimport { Box, Flex, Heading, Link, SimpleGrid, Spinner, Text } from '@chakra-ui/react';\nimport { MinterButton } from '../../common';\nimport { ChevronLeft, ExternalLink, Wind } from 'react-feather';\nimport { useDispatch, useSelector } from '../../../reducer';\nimport { getContractNftsQuery, getNftAssetContractQuery } from '../../../reducer/async/queries';\nimport CollectionsDropdown from './CollectionsDropdown';\nimport TokenCard from '../../common/TokenCard';\nexport default function CollectionDisplay({\n  address,\n  ownedOnly = true\n}) {\n  const collections = useSelector(s => s.collections);\n  const {\n    config,\n    tzPublicKey,\n    wallet\n  } = useSelector(s => s.system);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (address !== null) {\n      dispatch(getNftAssetContractQuery(address)).then(() => dispatch(getContractNftsQuery(address)));\n    }\n  }, [address, dispatch]);\n\n  if (address === null) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null);\n  }\n\n  const collection = collections.collections[address];\n\n  if (!collection) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null);\n  }\n\n  if (!collection.loaded) {\n    return /*#__PURE__*/React.createElement(Flex, {\n      flexDir: \"column\",\n      align: \"center\",\n      flex: \"1\",\n      pt: 20,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Spinner, {\n      size: \"xl\",\n      mb: 6,\n      color: \"gray.300\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Heading, {\n      size: \"lg\",\n      textAlign: \"center\",\n      color: \"gray.500\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, \"Loading...\"));\n  }\n\n  if (collection.tokens === null) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null);\n  }\n\n  const tokens = ownedOnly ? collection.tokens.filter(({\n    owner,\n    sale\n  }) => owner === tzPublicKey || (sale === null || sale === void 0 ? void 0 : sale.seller) === tzPublicKey) : collection.tokens;\n\n  if (tokens.length === 0) {\n    return /*#__PURE__*/React.createElement(Flex, {\n      w: \"100%\",\n      flex: \"1\",\n      flexDir: \"column\",\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Flex, {\n      px: 20,\n      py: 10,\n      bg: \"gray.200\",\n      textAlign: \"center\",\n      align: \"center\",\n      borderRadius: \"5px\",\n      flexDir: \"column\",\n      fontSize: \"xl\",\n      color: \"gray.400\",\n      mt: 28,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Wind, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Text, {\n      fontWeight: \"600\",\n      pt: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }, ownedOnly ? 'No owned tokens to display in this collection' : 'No tokens to display in this collection')));\n  }\n\n  return /*#__PURE__*/React.createElement(Flex, {\n    flexDir: \"column\",\n    h: \"100%\",\n    w: \"100%\",\n    flex: \"1\",\n    bg: \"brand.brightGray\",\n    borderLeftWidth: \"1px\",\n    borderLeftColor: \"brand.lightBlue\",\n    overflowY: \"scroll\",\n    justify: \"start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Flex, {\n    flexDir: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Flex, {\n    justifyContent: \"flex-start\",\n    width: \"4rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MinterButton, {\n    variant: \"primaryActionInverted\",\n    onClick: e => {\n      e.preventDefault();\n      window.history.back();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    color: \"currentcolor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ChevronLeft, {\n    size: 24,\n    strokeWidth: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(Flex, {\n    flexDir: \"column\",\n    px: {\n      base: 6,\n      md: 10\n    },\n    pt: 6,\n    overflow: \"hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, ownedOnly && wallet !== null ? /*#__PURE__*/React.createElement(Flex, {\n    display: {\n      base: 'flex',\n      md: 'none'\n    },\n    mb: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CollectionsDropdown, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 15\n    }\n  })) : null, /*#__PURE__*/React.createElement(Flex, {\n    w: \"100%\",\n    pb: 6,\n    justify: \"space-between\",\n    align: {\n      base: 'flex-start',\n      md: 'center'\n    },\n    flexDir: {\n      base: 'column',\n      md: 'row'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Flex, {\n    flexDir: \"column\",\n    width: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Flex, {\n    justify: \"space-between\",\n    width: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Heading, {\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }\n  }, collection.metadata.name || '')), /*#__PURE__*/React.createElement(Flex, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    fontFamily: \"mono\",\n    color: \"brand.lightGray\",\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\",\n    overflowWrap: \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 17\n    }\n  }, collection.address), /*#__PURE__*/React.createElement(Link, {\n    href: `${config.bcd.gui}/${config.network}/${collection.address}`,\n    color: \"brand.darkGray\",\n    isExternal: true,\n    ml: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ExternalLink, {\n    size: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 19\n    }\n  })))), /*#__PURE__*/React.createElement(MinterButton, {\n    display: {\n      base: 'none',\n      md: 'flex'\n    },\n    variant: \"primaryActionInverted\",\n    onClick: () => {\n      const selectedCollection = collections.selectedCollection;\n\n      if (selectedCollection !== null) {\n        dispatch(getContractNftsQuery(selectedCollection));\n      }\n    },\n    mt: {\n      base: 4,\n      md: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(SimpleGrid, {\n    columns: {\n      sm: 1,\n      md: 2,\n      lg: 3,\n      xl: 4\n    },\n    gap: 8,\n    px: {\n      base: 6,\n      md: 10\n    },\n    pb: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }\n  }, tokens.map(token => {\n    return /*#__PURE__*/React.createElement(TokenCard, Object.assign({\n      key: address + token.id,\n      address: address,\n      config: config\n    }, token, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 13\n      }\n    }));\n  })));\n}","map":{"version":3,"sources":["/Users/frankenstein/projects/minter/src/components/Collections/Catalog/CollectionDisplay.tsx"],"names":["React","useEffect","Box","Flex","Heading","Link","SimpleGrid","Spinner","Text","MinterButton","ChevronLeft","ExternalLink","Wind","useDispatch","useSelector","getContractNftsQuery","getNftAssetContractQuery","CollectionsDropdown","TokenCard","CollectionDisplay","address","ownedOnly","collections","s","config","tzPublicKey","wallet","system","dispatch","then","collection","loaded","tokens","filter","owner","sale","seller","length","e","preventDefault","window","history","back","base","md","metadata","name","bcd","gui","network","selectedCollection","sm","lg","xl","map","token","id"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport {\n  Box,\n  Flex,\n  Heading,\n  Link,\n  SimpleGrid,\n  Spinner,\n  Text\n} from '@chakra-ui/react';\nimport { MinterButton } from '../../common';\nimport { ChevronLeft, ExternalLink, Wind } from 'react-feather';\nimport { useDispatch, useSelector } from '../../../reducer';\nimport {\n  getContractNftsQuery,\n  getNftAssetContractQuery\n} from '../../../reducer/async/queries';\nimport CollectionsDropdown from './CollectionsDropdown';\nimport TokenCard from '../../common/TokenCard';\n\ninterface CollectionDisplayProps {\n  address: string | null;\n  ownedOnly?: boolean;\n}\n\nexport default function CollectionDisplay({\n  address,\n  ownedOnly = true\n}: CollectionDisplayProps) {\n  const collections = useSelector(s => s.collections);\n  const { config, tzPublicKey, wallet } = useSelector(s => s.system);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (address !== null) {\n      dispatch(getNftAssetContractQuery(address)).then(() =>\n        dispatch(getContractNftsQuery(address))\n      );\n    }\n  }, [address, dispatch]);\n\n  if (address === null) {\n    return <></>;\n  }\n\n  const collection = collections.collections[address];\n\n  if (!collection) {\n    return <></>;\n  }\n\n  if (!collection.loaded) {\n    return (\n      <Flex flexDir=\"column\" align=\"center\" flex=\"1\" pt={20}>\n        <Spinner size=\"xl\" mb={6} color=\"gray.300\" />\n        <Heading size=\"lg\" textAlign=\"center\" color=\"gray.500\">\n          Loading...\n        </Heading>\n      </Flex>\n    );\n  }\n\n  if (collection.tokens === null) {\n    return <></>;\n  }\n\n  const tokens = ownedOnly\n    ? collection.tokens.filter(\n        ({ owner, sale }) =>\n          owner === tzPublicKey || sale?.seller === tzPublicKey\n      )\n    : collection.tokens;\n\n  if (tokens.length === 0) {\n    return (\n      <Flex w=\"100%\" flex=\"1\" flexDir=\"column\" align=\"center\">\n        <Flex\n          px={20}\n          py={10}\n          bg=\"gray.200\"\n          textAlign=\"center\"\n          align=\"center\"\n          borderRadius=\"5px\"\n          flexDir=\"column\"\n          fontSize=\"xl\"\n          color=\"gray.400\"\n          mt={28}\n        >\n          <Wind />\n          <Text fontWeight=\"600\" pt={5}>\n            {ownedOnly\n              ? 'No owned tokens to display in this collection'\n              : 'No tokens to display in this collection'}\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n\n  return (\n    <Flex\n      flexDir=\"column\"\n      h=\"100%\"\n      w=\"100%\"\n      flex=\"1\"\n      bg=\"brand.brightGray\"\n      borderLeftWidth=\"1px\"\n      borderLeftColor=\"brand.lightBlue\"\n      overflowY=\"scroll\"\n      justify=\"start\"\n    >\n      <Flex flexDir=\"row\">\n        <Flex justifyContent=\"flex-start\" width=\"4rem\">\n          <MinterButton\n            variant=\"primaryActionInverted\"\n            onClick={e => {\n              e.preventDefault();\n              window.history.back();\n            }}\n          >\n            <Box color=\"currentcolor\">\n              <ChevronLeft size={24} strokeWidth=\"3\" />\n            </Box>\n          </MinterButton>\n        </Flex>\n\n        <Flex\n            flexDir=\"column\"\n            px={{ base: 6, md: 10 }}\n            pt={6}\n            overflow=\"hidden\"\n        >\n          {ownedOnly && wallet !== null ? (\n            <Flex display={{ base: 'flex', md: 'none' }} mb={4}>\n              <CollectionsDropdown />\n            </Flex>\n          ) : null}\n          <Flex\n            w=\"100%\"\n            pb={6}\n            justify=\"space-between\"\n            align={{\n              base: 'flex-start',\n              md: 'center'\n            }}\n            flexDir={{\n              base: 'column',\n              md: 'row'\n            }}\n          >\n            <Flex flexDir=\"column\" width=\"100%\">\n              <Flex justify=\"space-between\" width=\"100%\">\n                <Heading size=\"lg\">{collection.metadata.name || ''}</Heading>\n              </Flex>\n              <Flex align=\"center\">\n                <Text \n                  fontFamily=\"mono\" \n                  color=\"brand.lightGray\"\n                  overflow=\"hidden\"\n                  textOverflow=\"ellipsis\"\n                  overflowWrap=\"normal\"\n                >\n                  {collection.address}\n                </Text>\n                <Link\n                  href={`${config.bcd.gui}/${config.network}/${collection.address}`}\n                  color=\"brand.darkGray\"\n                  isExternal\n                  ml={2}\n                >\n                  <ExternalLink size={16} />\n                </Link>\n              </Flex>\n            </Flex>\n            <MinterButton\n              display={{ base: 'none', md: 'flex' }}\n              variant=\"primaryActionInverted\"\n              onClick={() => {\n                const selectedCollection = collections.selectedCollection;\n                if (selectedCollection !== null) {\n                  dispatch(getContractNftsQuery(selectedCollection));\n                }\n              }}\n              mt={{\n                base: 4,\n                md: 0\n              }}\n            ></MinterButton>\n          </Flex>\n        </Flex>\n      </Flex>\n      <SimpleGrid columns={{ sm: 1, md: 2, lg: 3, xl: 4 }} gap={8} px={{ base: 6, md: 10 }} pb={8}>\n        {tokens.map(token => {\n          return (\n            <TokenCard\n              key={address + token.id}\n              address={address}\n              config={config}\n              {...token}\n            />\n          );\n        })}\n      </SimpleGrid>\n    </Flex>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}