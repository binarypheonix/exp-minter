{"ast":null,"code":"import _regeneratorRuntime from\"/Users/frankenstein/projects/minter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/frankenstein/projects/minter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{createAsyncThunk}from'@reduxjs/toolkit';import{getNftAssetContract,getContractNfts,getMarketplaceNfts,getWalletNftAssetContracts,loadMarketplaceNft,getNftAssetContracts}from'../../lib/nfts/queries';import{ErrorKind}from'./errors';export var getNftAssetContractQuery=createAsyncThunk('query/getNftAssetContract',/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(address,api){var getState,rejectWithValue,_getState,system;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:getState=api.getState,rejectWithValue=api.rejectWithValue;_getState=getState(),system=_getState.system;_context.prev=2;_context.next=5;return getNftAssetContract(system,address);case 5:return _context.abrupt(\"return\",_context.sent);case 8:_context.prev=8;_context.t0=_context[\"catch\"](2);return _context.abrupt(\"return\",rejectWithValue({kind:ErrorKind.GetNftAssetContractFailed,message:\"Failed to retrieve asset contract: \".concat(address)}));case 11:case\"end\":return _context.stop();}}},_callee,null,[[2,8]]);}));return function(_x,_x2){return _ref.apply(this,arguments);};}());export var getContractNftsQuery=createAsyncThunk('query/getContractNfts',/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(address,_ref2){var getState,rejectWithValue,_getState2,system,collections,tokens,_collections$collecti,_collections$collecti2,_collections$collecti3;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:getState=_ref2.getState,rejectWithValue=_ref2.rejectWithValue;_getState2=getState(),system=_getState2.system,collections=_getState2.collections;_context2.prev=2;_context2.next=5;return getContractNfts(system,address);case 5:tokens=_context2.sent;return _context2.abrupt(\"return\",{address:address,tokens:tokens});case 9:_context2.prev=9;_context2.t0=_context2[\"catch\"](2);return _context2.abrupt(\"return\",rejectWithValue({kind:ErrorKind.GetContractNftsFailed,message:\"Failed to retrieve contract nfts from: \".concat((_collections$collecti=(_collections$collecti2=collections.collections[address])===null||_collections$collecti2===void 0?void 0:(_collections$collecti3=_collections$collecti2.metadata)===null||_collections$collecti3===void 0?void 0:_collections$collecti3.name)!==null&&_collections$collecti!==void 0?_collections$collecti:address)}));case 12:case\"end\":return _context2.stop();}}},_callee2,null,[[2,9]]);}));return function(_x3,_x4){return _ref3.apply(this,arguments);};}());export var getWalletAssetContractsQuery=createAsyncThunk('query/getWalletNftAssetContracts',/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(_,_ref4){var getState,rejectWithValue,_getState3,system;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:getState=_ref4.getState,rejectWithValue=_ref4.rejectWithValue;_getState3=getState(),system=_getState3.system;if(!(system.status!=='WalletConnected')){_context3.next=4;break;}return _context3.abrupt(\"return\",rejectWithValue({kind:ErrorKind.WalletNotConnected,message:\"Could not retrieve wallet's asset contracts: no wallet connected\"}));case 4:_context3.prev=4;_context3.next=7;return getWalletNftAssetContracts(system);case 7:return _context3.abrupt(\"return\",_context3.sent);case 10:_context3.prev=10;_context3.t0=_context3[\"catch\"](4);console.log(_context3.t0);return _context3.abrupt(\"return\",rejectWithValue({kind:ErrorKind.GetWalletNftAssetContractsFailed,message:\"Failed to retrieve wallet's asset contracts\"}));case 14:case\"end\":return _context3.stop();}}},_callee3,null,[[4,10]]);}));return function(_x5,_x6){return _ref5.apply(this,arguments);};}());export var getAssetContractsQuery=createAsyncThunk('query/getNftAssetContracts',/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(address,_ref6){var getState,rejectWithValue,_getState4,system;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:getState=_ref6.getState,rejectWithValue=_ref6.rejectWithValue;_getState4=getState(),system=_getState4.system;if(!(system.status!=='WalletConnected')){_context4.next=4;break;}return _context4.abrupt(\"return\",rejectWithValue({kind:ErrorKind.WalletNotConnected,message:\"Could not retrieve wallet's asset contracts: no wallet connected\"}));case 4:_context4.prev=4;_context4.next=7;return getNftAssetContracts(system,address);case 7:return _context4.abrupt(\"return\",_context4.sent);case 10:_context4.prev=10;_context4.t0=_context4[\"catch\"](4);console.log(_context4.t0);return _context4.abrupt(\"return\",rejectWithValue({kind:ErrorKind.GetNftAssetContractsFailed,message:\"Failed to retrieve asset contracts\"}));case 14:case\"end\":return _context4.stop();}}},_callee4,null,[[4,10]]);}));return function(_x7,_x8){return _ref7.apply(this,arguments);};}());export var getMarketplaceNftsQuery=createAsyncThunk('query/getMarketplaceNfts',/*#__PURE__*/function(){var _ref9=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(address,_ref8){var getState,rejectWithValue,_getState5,system,tokens,i;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:getState=_ref8.getState,rejectWithValue=_ref8.rejectWithValue;_getState5=getState(),system=_getState5.system;_context5.prev=2;_context5.next=5;return getMarketplaceNfts(system,address);case 5:tokens=_context5.sent;_context5.t0=_regeneratorRuntime.keys(tokens.slice(0,9));case 7:if((_context5.t1=_context5.t0()).done){_context5.next=14;break;}i=_context5.t1.value;_context5.next=11;return loadMarketplaceNft(system,tokens[i]);case 11:tokens[i]=_context5.sent;_context5.next=7;break;case 14:return _context5.abrupt(\"return\",{tokens:tokens});case 17:_context5.prev=17;_context5.t2=_context5[\"catch\"](2);return _context5.abrupt(\"return\",rejectWithValue({kind:ErrorKind.GetMarketplaceNftsFailed,message:\"Failed to retrieve marketplace nfts from: \".concat(address)}));case 20:case\"end\":return _context5.stop();}}},_callee5,null,[[2,17]]);}));return function(_x9,_x10){return _ref9.apply(this,arguments);};}());export var loadMoreMarketplaceNftsQuery=createAsyncThunk('query/loadMoreMarketplaceNftsQuery',/*#__PURE__*/function(){var _ref11=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(_,_ref10){var getState,rejectWithValue,_getState6,system,marketplace,_marketplace$marketpl,tokens,iStart,iEnd,tokensAfter;return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:getState=_ref10.getState,rejectWithValue=_ref10.rejectWithValue;_getState6=getState(),system=_getState6.system,marketplace=_getState6.marketplace;_context7.prev=2;tokens=(_marketplace$marketpl=marketplace.marketplace.tokens)!==null&&_marketplace$marketpl!==void 0?_marketplace$marketpl:[];// Load 8 more (at least 2 rows)\niStart=tokens.findIndex(function(x){return!x.loaded;});iEnd=iStart+8;// Need to rebuild the array\n_context7.next=8;return Promise.all(tokens.map(/*#__PURE__*/function(){var _ref12=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(x,i){return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:if(!(i>=iStart&&i<iEnd)){_context6.next=6;break;}_context6.next=3;return loadMarketplaceNft(system,x);case 3:_context6.t0=_context6.sent;_context6.next=7;break;case 6:_context6.t0=x;case 7:return _context6.abrupt(\"return\",_context6.t0);case 8:case\"end\":return _context6.stop();}}},_callee6);}));return function(_x13,_x14){return _ref12.apply(this,arguments);};}()));case 8:tokensAfter=_context7.sent;return _context7.abrupt(\"return\",{tokens:tokensAfter});case 12:_context7.prev=12;_context7.t0=_context7[\"catch\"](2);return _context7.abrupt(\"return\",rejectWithValue({kind:ErrorKind.GetMarketplaceNftsFailed,message:\"Failed to load marketplace nfts\"}));case 15:case\"end\":return _context7.stop();}}},_callee7,null,[[2,12]]);}));return function(_x11,_x12){return _ref11.apply(this,arguments);};}());","map":{"version":3,"sources":["/Users/frankenstein/projects/minter/src/reducer/async/queries.ts"],"names":["createAsyncThunk","getNftAssetContract","getContractNfts","getMarketplaceNfts","getWalletNftAssetContracts","loadMarketplaceNft","getNftAssetContracts","ErrorKind","getNftAssetContractQuery","address","api","getState","rejectWithValue","system","kind","GetNftAssetContractFailed","message","getContractNftsQuery","collections","tokens","GetContractNftsFailed","metadata","name","getWalletAssetContractsQuery","_","status","WalletNotConnected","console","log","GetWalletNftAssetContractsFailed","getAssetContractsQuery","GetNftAssetContractsFailed","getMarketplaceNftsQuery","slice","i","GetMarketplaceNftsFailed","loadMoreMarketplaceNftsQuery","marketplace","iStart","findIndex","x","loaded","iEnd","Promise","all","map","tokensAfter"],"mappings":"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","sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { State } from '../index';\nimport {\n  getNftAssetContract,\n  getContractNfts,\n  getMarketplaceNfts,\n  getWalletNftAssetContracts,\n  MarketplaceNftLoadingData,\n  loadMarketplaceNft,\n  getNftAssetContracts\n} from '../../lib/nfts/queries';\nimport { Nft, AssetContract } from '../../lib/nfts/decoders';\nimport { ErrorKind, RejectValue } from './errors';\n\ntype Opts = { state: State; rejectValue: RejectValue };\n\nexport const getNftAssetContractQuery = createAsyncThunk<\n  AssetContract,\n  string,\n  Opts\n>('query/getNftAssetContract', async (address, api) => {\n  const { getState, rejectWithValue } = api;\n  const { system } = getState();\n  try {\n    return await getNftAssetContract(system, address);\n  } catch (e) {\n    return rejectWithValue({\n      kind: ErrorKind.GetNftAssetContractFailed,\n      message: `Failed to retrieve asset contract: ${address}`\n    });\n  }\n});\n\nexport const getContractNftsQuery = createAsyncThunk<\n  { address: string; tokens: Nft[] },\n  string,\n  Opts\n>('query/getContractNfts', async (address, { getState, rejectWithValue }) => {\n  const { system, collections } = getState();\n  try {\n    const tokens = await getContractNfts(system, address);\n    return { address, tokens };\n  } catch (e) {\n    return rejectWithValue({\n      kind: ErrorKind.GetContractNftsFailed,\n      message: `Failed to retrieve contract nfts from: ${\n        collections.collections[address]?.metadata?.name ?? address\n      }`\n    });\n  }\n});\n\nexport const getWalletAssetContractsQuery = createAsyncThunk<\n  AssetContract[],\n  undefined,\n  Opts\n>(\n  'query/getWalletNftAssetContracts',\n  async (_, { getState, rejectWithValue }) => {\n    const { system } = getState();\n    if (system.status !== 'WalletConnected') {\n      return rejectWithValue({\n        kind: ErrorKind.WalletNotConnected,\n        message:\n          \"Could not retrieve wallet's asset contracts: no wallet connected\"\n      });\n    }\n    try {\n      return await getWalletNftAssetContracts(system);\n    } catch (e) {\n      console.log(e);\n      return rejectWithValue({\n        kind: ErrorKind.GetWalletNftAssetContractsFailed,\n        message: \"Failed to retrieve wallet's asset contracts\"\n      });\n    }\n  }\n);\n\nexport const getAssetContractsQuery = createAsyncThunk<\n  AssetContract[],\n  string,\n  Opts\n>(\n  'query/getNftAssetContracts',\n  async (address, { getState, rejectWithValue }) => {\n    const { system } = getState();\n    if (system.status !== 'WalletConnected') {\n      return rejectWithValue({\n        kind: ErrorKind.WalletNotConnected,\n        message:\n          \"Could not retrieve wallet's asset contracts: no wallet connected\"\n      });\n    }\n    try {\n      return await getNftAssetContracts(system, address);\n    } catch (e) {\n      console.log(e);\n      return rejectWithValue({\n        kind: ErrorKind.GetNftAssetContractsFailed,\n        message: \"Failed to retrieve asset contracts\"\n      });\n    }\n  }\n);\n\nexport const getMarketplaceNftsQuery = createAsyncThunk<\n  { tokens: MarketplaceNftLoadingData[] },\n  string,\n  Opts\n>(\n  'query/getMarketplaceNfts',\n  async (address, { getState, rejectWithValue }) => {\n    const { system } = getState();\n    try {\n      const tokens = await getMarketplaceNfts(system, address);\n\n      // Load 9 initially (1-feature + at least 2 rows)\n      for (const i in tokens.slice(0, 9)) {\n        tokens[i] = await loadMarketplaceNft(system, tokens[i]);\n      }\n\n      return { tokens };\n    } catch (e) {\n      return rejectWithValue({\n        kind: ErrorKind.GetMarketplaceNftsFailed,\n        message: `Failed to retrieve marketplace nfts from: ${address}`\n      });\n    }\n  }\n);\n\nexport const loadMoreMarketplaceNftsQuery = createAsyncThunk<\n  { tokens: MarketplaceNftLoadingData[] },\n  {},\n  Opts\n>(\n  'query/loadMoreMarketplaceNftsQuery',\n  async (_, { getState, rejectWithValue }) => {\n    const { system, marketplace } = getState();\n    try {\n      const tokens = marketplace.marketplace.tokens ?? [];\n\n      // Load 8 more (at least 2 rows)\n      const iStart = tokens.findIndex(x => !x.loaded);\n      const iEnd = iStart + 8;\n\n      // Need to rebuild the array\n      const tokensAfter = await Promise.all(\n        tokens.map(async (x, i) =>\n          i >= iStart && i < iEnd ? await loadMarketplaceNft(system, x) : x\n        )\n      );\n\n      return { tokens: tokensAfter };\n    } catch (e) {\n      return rejectWithValue({\n        kind: ErrorKind.GetMarketplaceNftsFailed,\n        message: `Failed to load marketplace nfts`\n      });\n    }\n  }\n);\n"]},"metadata":{},"sourceType":"module"}