{"ast":null,"code":"import _objectWithoutProperties from\"/Users/frankenstein/projects/minter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React from'react';import{Button,Link,MenuButton,MenuItem,useStyleConfig}from'@chakra-ui/react';// Common Minter Components - Button & Link referencing branded variants\nexport function MinterButton(props){var size=props.size,variant=props.variant,rest=_objectWithoutProperties(props,[\"size\",\"variant\"]);var styles=useStyleConfig('Button',{size:size,variant:variant});return/*#__PURE__*/React.createElement(Button,Object.assign({sx:styles},rest));}export function MinterLink(props){var size=props.size,variant=props.variant,rest=_objectWithoutProperties(props,[\"size\",\"variant\"]);var styles=useStyleConfig('Link',{size:size,variant:variant});return/*#__PURE__*/React.createElement(Link,Object.assign({sx:styles},rest));}export function MinterMenuButton(props){var variant=props.variant,rest=_objectWithoutProperties(props,[\"variant\"]);var styles=useStyleConfig('MenuButton',{variant:variant});return/*#__PURE__*/React.createElement(MenuButton,Object.assign({sx:styles},rest));}export function MinterMenuItem(props){var variant=props.variant,rest=_objectWithoutProperties(props,[\"variant\"]);var styles=useStyleConfig('MenuItem',{variant:variant});return/*#__PURE__*/React.createElement(MenuItem,Object.assign({sx:styles},rest));}","map":{"version":3,"sources":["/Users/frankenstein/projects/minter/src/components/common/index.tsx"],"names":["React","Button","Link","MenuButton","MenuItem","useStyleConfig","MinterButton","props","size","variant","rest","styles","MinterLink","MinterMenuButton","MinterMenuItem"],"mappings":"8KAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OACEC,MADF,CAGEC,IAHF,CAKEC,UALF,CAOEC,QAPF,CASEC,cATF,KAUO,kBAVP,CAYA;AAEA,MAAO,SAASC,CAAAA,YAAT,CACLC,KADK,CAEL,CACA,GAAQC,CAAAA,IAAR,CAAmCD,KAAnC,CAAQC,IAAR,CAAcC,OAAd,CAAmCF,KAAnC,CAAcE,OAAd,CAA0BC,IAA1B,0BAAmCH,KAAnC,qBACA,GAAMI,CAAAA,MAAM,CAAGN,cAAc,CAAC,QAAD,CAAW,CAAEG,IAAI,CAAJA,IAAF,CAAQC,OAAO,CAAPA,OAAR,CAAX,CAA7B,CACA,mBAAO,oBAAC,MAAD,gBAAQ,EAAE,CAAEE,MAAZ,EAAwBD,IAAxB,EAAP,CACD,CAED,MAAO,SAASE,CAAAA,UAAT,CACLL,KADK,CAEL,CACA,GAAQC,CAAAA,IAAR,CAAmCD,KAAnC,CAAQC,IAAR,CAAcC,OAAd,CAAmCF,KAAnC,CAAcE,OAAd,CAA0BC,IAA1B,0BAAmCH,KAAnC,qBACA,GAAMI,CAAAA,MAAM,CAAGN,cAAc,CAAC,MAAD,CAAS,CAAEG,IAAI,CAAJA,IAAF,CAAQC,OAAO,CAAPA,OAAR,CAAT,CAA7B,CACA,mBAAO,oBAAC,IAAD,gBAAM,EAAE,CAAEE,MAAV,EAAsBD,IAAtB,EAAP,CACD,CAED,MAAO,SAASG,CAAAA,gBAAT,CACLN,KADK,CAEL,CACA,GAAQE,CAAAA,OAAR,CAA6BF,KAA7B,CAAQE,OAAR,CAAoBC,IAApB,0BAA6BH,KAA7B,cACA,GAAMI,CAAAA,MAAM,CAAGN,cAAc,CAAC,YAAD,CAAe,CAAEI,OAAO,CAAPA,OAAF,CAAf,CAA7B,CACA,mBAAO,oBAAC,UAAD,gBAAY,EAAE,CAAEE,MAAhB,EAA4BD,IAA5B,EAAP,CACD,CAED,MAAO,SAASI,CAAAA,cAAT,CAAwBP,KAAxB,CAAqE,CAC1E,GAAQE,CAAAA,OAAR,CAA6BF,KAA7B,CAAQE,OAAR,CAAoBC,IAApB,0BAA6BH,KAA7B,cACA,GAAMI,CAAAA,MAAM,CAAGN,cAAc,CAAC,UAAD,CAAa,CAAEI,OAAO,CAAPA,OAAF,CAAb,CAA7B,CACA,mBAAO,oBAAC,QAAD,gBAAU,EAAE,CAAEE,MAAd,EAA0BD,IAA1B,EAAP,CACD","sourcesContent":["import React from 'react';\nimport {\n  Button,\n  ButtonProps,\n  Link,\n  LinkProps,\n  MenuButton,\n  MenuButtonProps,\n  MenuItem,\n  MenuItemProps,\n  useStyleConfig\n} from '@chakra-ui/react';\n\n// Common Minter Components - Button & Link referencing branded variants\n\nexport function MinterButton(\n  props: ButtonProps & { size?: string; variant?: string }\n) {\n  const { size, variant, ...rest } = props;\n  const styles = useStyleConfig('Button', { size, variant });\n  return <Button sx={styles} {...rest} />;\n}\n\nexport function MinterLink(\n  props: LinkProps & { size?: string; variant?: string }\n) {\n  const { size, variant, ...rest } = props;\n  const styles = useStyleConfig('Link', { size, variant });\n  return <Link sx={styles} {...rest} />;\n}\n\nexport function MinterMenuButton(\n  props: MenuButtonProps & { variant?: string }\n) {\n  const { variant, ...rest } = props;\n  const styles = useStyleConfig('MenuButton', { variant });\n  return <MenuButton sx={styles} {...rest} />;\n}\n\nexport function MinterMenuItem(props: MenuItemProps & { variant?: string }) {\n  const { variant, ...rest } = props;\n  const styles = useStyleConfig('MenuItem', { variant });\n  return <MenuItem sx={styles} {...rest} />;\n}\n"]},"metadata":{},"sourceType":"module"}