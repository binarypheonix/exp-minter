{"ast":null,"code":"import _slicedToArray from\"/Users/frankenstein/projects/minter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{Box,Text,FormControl,FormLabel,Input,ModalHeader,ModalFooter,ModalBody,ModalCloseButton,useDisclosure}from'@chakra-ui/react';import{Plus}from'react-feather';import{MinterButton}from'../../common';import{useDispatch}from'../../../reducer';import{createAssetContractAction}from'../../../reducer/async/actions';import FormModal from'./FormModal';function CreateCollectionModal(props){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),contractName=_useState2[0],setContractName=_useState2[1];var dispatch=useDispatch();var initialRef=React.useRef(null);return/*#__PURE__*/React.createElement(FormModal,{disclosure:props.disclosure,sync:props.sync,method:\"createAssetContract\",dispatchThunk:function dispatchThunk(){return dispatch(createAssetContractAction(contractName));},onComplete:function onComplete(){return setContractName('');},initialRef:initialRef,pendingMessage:\"Creating collection...\",completeMessage:\"Collection created\",body:function body(onSubmit){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(ModalHeader,null,\"New Collection\"),/*#__PURE__*/React.createElement(ModalCloseButton,null),/*#__PURE__*/React.createElement(ModalBody,null,/*#__PURE__*/React.createElement(FormControl,null,/*#__PURE__*/React.createElement(FormLabel,{fontFamily:\"mono\"},\"Collection Name\"),/*#__PURE__*/React.createElement(Input,{autoFocus:true,ref:initialRef,placeholder:\"Input your collection name\",value:contractName,onChange:function onChange(e){return setContractName(e.target.value);}}))),/*#__PURE__*/React.createElement(ModalFooter,null,/*#__PURE__*/React.createElement(MinterButton,{variant:\"primaryAction\",onClick:function onClick(){return onSubmit();}},\"Create Collection\")));}});}export function CreateCollectionButton(props){var disclosure=useDisclosure();return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(MinterButton,{variant:\"primaryActionInverted\",onClick:disclosure.onOpen},/*#__PURE__*/React.createElement(Box,{color:\"currentcolor\"},/*#__PURE__*/React.createElement(Plus,{size:16,strokeWidth:\"3\"})),/*#__PURE__*/React.createElement(Text,{ml:2},\"New Collection\")),/*#__PURE__*/React.createElement(CreateCollectionModal,{disclosure:disclosure,sync:props.sync}));}","map":{"version":3,"sources":["/Users/frankenstein/projects/minter/src/components/common/modals/CreateCollection.tsx"],"names":["React","useState","Box","Text","FormControl","FormLabel","Input","ModalHeader","ModalFooter","ModalBody","ModalCloseButton","useDisclosure","Plus","MinterButton","useDispatch","createAssetContractAction","FormModal","CreateCollectionModal","props","contractName","setContractName","dispatch","initialRef","useRef","disclosure","sync","onSubmit","e","target","value","CreateCollectionButton","onOpen"],"mappings":"0JAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OACEC,GADF,CAEEC,IAFF,CAGEC,WAHF,CAIEC,SAJF,CAKEC,KALF,CAMEC,WANF,CAOEC,WAPF,CAQEC,SARF,CASEC,gBATF,CAUEC,aAVF,KAWO,kBAXP,CAYA,OAASC,IAAT,KAAqB,eAArB,CACA,OAASC,YAAT,KAA6B,cAA7B,CACA,OAASC,WAAT,KAA4B,kBAA5B,CACA,OAASC,yBAAT,KAA0C,gCAA1C,CACA,MAAOC,CAAAA,SAAP,KAAgE,aAAhE,CAIA,QAASC,CAAAA,qBAAT,CAA+BC,KAA/B,CAAkE,CAChE,cAAwCjB,QAAQ,CAAC,EAAD,CAAhD,wCAAOkB,YAAP,eAAqBC,eAArB,eACA,GAAMC,CAAAA,QAAQ,CAAGP,WAAW,EAA5B,CACA,GAAMQ,CAAAA,UAAU,CAAGtB,KAAK,CAACuB,MAAN,CAAa,IAAb,CAAnB,CACA,mBACE,oBAAC,SAAD,EACE,UAAU,CAAEL,KAAK,CAACM,UADpB,CAEE,IAAI,CAAEN,KAAK,CAACO,IAFd,CAGE,MAAM,CAAC,qBAHT,CAIE,aAAa,CAAE,+BAAMJ,CAAAA,QAAQ,CAACN,yBAAyB,CAACI,YAAD,CAA1B,CAAd,EAJjB,CAKE,UAAU,CAAE,4BAAMC,CAAAA,eAAe,CAAC,EAAD,CAArB,EALd,CAME,UAAU,CAAEE,UANd,CAOE,cAAc,CAAC,wBAPjB,CAQE,eAAe,CAAC,oBARlB,CASE,IAAI,CAAE,cAAAI,QAAQ,qBACZ,qDACE,oBAAC,WAAD,uBADF,cAEE,oBAAC,gBAAD,MAFF,cAGE,oBAAC,SAAD,mBACE,oBAAC,WAAD,mBACE,oBAAC,SAAD,EAAW,UAAU,CAAC,MAAtB,oBADF,cAEE,oBAAC,KAAD,EACE,SAAS,CAAE,IADb,CAEE,GAAG,CAAEJ,UAFP,CAGE,WAAW,CAAC,4BAHd,CAIE,KAAK,CAAEH,YAJT,CAKE,QAAQ,CAAE,kBAAAQ,CAAC,QAAIP,CAAAA,eAAe,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAAnB,EALb,EAFF,CADF,CAHF,cAeE,oBAAC,WAAD,mBACE,oBAAC,YAAD,EAAc,OAAO,CAAC,eAAtB,CAAsC,OAAO,CAAE,yBAAMH,CAAAA,QAAQ,EAAd,EAA/C,sBADF,CAfF,CADY,EAThB,EADF,CAmCD,CAID,MAAO,SAASI,CAAAA,sBAAT,CAAgCZ,KAAhC,CAAoE,CACzE,GAAMM,CAAAA,UAAU,CAAGb,aAAa,EAAhC,CACA,mBACE,qDACE,oBAAC,YAAD,EAAc,OAAO,CAAC,uBAAtB,CAA8C,OAAO,CAAEa,UAAU,CAACO,MAAlE,eACE,oBAAC,GAAD,EAAK,KAAK,CAAC,cAAX,eACE,oBAAC,IAAD,EAAM,IAAI,CAAE,EAAZ,CAAgB,WAAW,CAAC,GAA5B,EADF,CADF,cAIE,oBAAC,IAAD,EAAM,EAAE,CAAE,CAAV,mBAJF,CADF,cAOE,oBAAC,qBAAD,EAAuB,UAAU,CAAEP,UAAnC,CAA+C,IAAI,CAAEN,KAAK,CAACO,IAA3D,EAPF,CADF,CAWD","sourcesContent":["import React, { useState } from 'react';\nimport {\n  Box,\n  Text,\n  FormControl,\n  FormLabel,\n  Input,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  useDisclosure\n} from '@chakra-ui/react';\nimport { Plus } from 'react-feather';\nimport { MinterButton } from '../../common';\nimport { useDispatch } from '../../../reducer';\nimport { createAssetContractAction } from '../../../reducer/async/actions';\nimport FormModal, { BaseModalProps, BaseModalButtonProps } from './FormModal';\n\ninterface CreateCollectionModalProps extends BaseModalProps {}\n\nfunction CreateCollectionModal(props: CreateCollectionModalProps) {\n  const [contractName, setContractName] = useState('');\n  const dispatch = useDispatch();\n  const initialRef = React.useRef(null);\n  return (\n    <FormModal\n      disclosure={props.disclosure}\n      sync={props.sync}\n      method=\"createAssetContract\"\n      dispatchThunk={() => dispatch(createAssetContractAction(contractName))}\n      onComplete={() => setContractName('')}\n      initialRef={initialRef}\n      pendingMessage=\"Creating collection...\"\n      completeMessage=\"Collection created\"\n      body={onSubmit => (\n        <>\n          <ModalHeader>New Collection</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody>\n            <FormControl>\n              <FormLabel fontFamily=\"mono\">Collection Name</FormLabel>\n              <Input\n                autoFocus={true}\n                ref={initialRef}\n                placeholder=\"Input your collection name\"\n                value={contractName}\n                onChange={e => setContractName(e.target.value)}\n              />\n            </FormControl>\n          </ModalBody>\n          <ModalFooter>\n            <MinterButton variant=\"primaryAction\" onClick={() => onSubmit()}>\n              Create Collection\n            </MinterButton>\n          </ModalFooter>\n        </>\n      )}\n    />\n  );\n}\n\ninterface CreateCollectionButtonProps extends BaseModalButtonProps {}\n\nexport function CreateCollectionButton(props: CreateCollectionButtonProps) {\n  const disclosure = useDisclosure();\n  return (\n    <>\n      <MinterButton variant=\"primaryActionInverted\" onClick={disclosure.onOpen}>\n        <Box color=\"currentcolor\">\n          <Plus size={16} strokeWidth=\"3\" />\n        </Box>\n        <Text ml={2}>New Collection</Text>\n      </MinterButton>\n      <CreateCollectionModal disclosure={disclosure} sync={props.sync} />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}