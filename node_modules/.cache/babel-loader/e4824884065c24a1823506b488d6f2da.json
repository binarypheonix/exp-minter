{"ast":null,"code":"import _regeneratorRuntime from\"/Users/frankenstein/projects/minter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/frankenstein/projects/minter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{createAsyncThunk}from'@reduxjs/toolkit';import{Minter}from'../../lib/system';import{ErrorKind}from'./errors';export var connectWallet=createAsyncThunk('wallet/connect',/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(_arg,_ref){var getState,rejectWithValue,_getState,system,eventHandlers;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:getState=_ref.getState,rejectWithValue=_ref.rejectWithValue;_getState=getState(),system=_getState.system;if(!(system.status==='ToolkitConnected')){_context.next=13;break;}// TODO: Implement custom UI behavior by overriding Beacon events\n// NOTE: These event handlers will be passed to the Beacon DAppClient *once*\n// as the client is cached after its first instantiation\n// eslint-disable-next-line\neventHandlers={PERMISSION_REQUEST_SENT:{handler:function handler(data){console.log(data);}},PERMISSION_REQUEST_SUCCESS:{handler:function handler(data){console.log(data);}},PERMISSION_REQUEST_ERROR:{handler:function handler(data){console.log(data);}},OPERATION_REQUEST_SENT:{handler:function handler(data){console.log(data);}},OPERATION_REQUEST_SUCCESS:{handler:function handler(data){console.log(data);}},OPERATION_REQUEST_ERROR:{handler:function handler(data){console.log(data);}},ACKNOWLEDGE_RECEIVED:{handler:function handler(data){console.log(data);}}};_context.prev=4;_context.next=7;return Minter.connectWallet(system/*eventHandlers*/);case 7:return _context.abrupt(\"return\",_context.sent);case 10:_context.prev=10;_context.t0=_context[\"catch\"](4);return _context.abrupt(\"return\",rejectWithValue({kind:ErrorKind.WalletPermissionRequestDenied,message:'Wallet permission request denied'}));case 13:return _context.abrupt(\"return\",rejectWithValue({kind:ErrorKind.WalletNotConnected,message:'Wallet already connected'}));case 14:case\"end\":return _context.stop();}}},_callee,null,[[4,10]]);}));return function(_x,_x2){return _ref2.apply(this,arguments);};}());export var reconnectWallet=createAsyncThunk('wallet/reconnect',/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_arg,_ref3){var getState,rejectWithValue,_getState2,system;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:getState=_ref3.getState,rejectWithValue=_ref3.rejectWithValue;_getState2=getState(),system=_getState2.system;if(!(system.status==='ToolkitConnected')){_context2.next=6;break;}_context2.next=5;return Minter.reconnectWallet(system);case 5:return _context2.abrupt(\"return\",_context2.sent);case 6:return _context2.abrupt(\"return\",rejectWithValue({kind:ErrorKind.WalletNotConnected,message:'Wallet already connected'}));case 7:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x3,_x4){return _ref4.apply(this,arguments);};}());export var disconnectWallet=createAsyncThunk('wallet/disconnect',/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(_arg,_ref5){var getState,rejectWithValue,_getState3,system;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:getState=_ref5.getState,rejectWithValue=_ref5.rejectWithValue;_getState3=getState(),system=_getState3.system;if(!(system.status==='WalletConnected')){_context3.next=6;break;}_context3.next=5;return Minter.disconnectWallet(system);case 5:return _context3.abrupt(\"return\",_context3.sent);case 6:return _context3.abrupt(\"return\",rejectWithValue({kind:ErrorKind.WalletNotConnected,message:'No wallet to disconnect from '}));case 7:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x5,_x6){return _ref6.apply(this,arguments);};}());","map":{"version":3,"sources":["/Users/frankenstein/projects/minter/src/reducer/async/wallet.ts"],"names":["createAsyncThunk","Minter","ErrorKind","connectWallet","_arg","getState","rejectWithValue","system","status","eventHandlers","PERMISSION_REQUEST_SENT","handler","data","console","log","PERMISSION_REQUEST_SUCCESS","PERMISSION_REQUEST_ERROR","OPERATION_REQUEST_SENT","OPERATION_REQUEST_SUCCESS","OPERATION_REQUEST_ERROR","ACKNOWLEDGE_RECEIVED","kind","WalletPermissionRequestDenied","message","WalletNotConnected","reconnectWallet","disconnectWallet"],"mappings":"iTAAA,OAASA,gBAAT,KAAiC,kBAAjC,CAEA,OAASC,MAAT,KAA4D,kBAA5D,CACA,OAASC,SAAT,KAAuC,UAAvC,CAOA,MAAO,IAAMC,CAAAA,aAAa,CAAGH,gBAAgB,CAK3C,gBAL2C,2FAM3C,iBAAOI,IAAP,mLAAeC,QAAf,MAAeA,QAAf,CAAyBC,eAAzB,MAAyBA,eAAzB,WACqBD,QAAQ,EAD7B,CACUE,MADV,WACUA,MADV,MAEMA,MAAM,CAACC,MAAP,GAAkB,kBAFxB,2BAGI;AACA;AACA;AACA;AACMC,aAPV,CAOsE,CAChEC,uBAAuB,CAAE,CACvBC,OADuB,kBACfC,IADe,CACT,CACZC,OAAO,CAACC,GAAR,CAAYF,IAAZ,EACD,CAHsB,CADuC,CAMhEG,0BAA0B,CAAE,CAC1BJ,OAD0B,kBAClBC,IADkB,CACZ,CACZC,OAAO,CAACC,GAAR,CAAYF,IAAZ,EACD,CAHyB,CANoC,CAWhEI,wBAAwB,CAAE,CACxBL,OADwB,kBAChBC,IADgB,CACV,CACZC,OAAO,CAACC,GAAR,CAAYF,IAAZ,EACD,CAHuB,CAXsC,CAgBhEK,sBAAsB,CAAE,CACtBN,OADsB,kBACdC,IADc,CACR,CACZC,OAAO,CAACC,GAAR,CAAYF,IAAZ,EACD,CAHqB,CAhBwC,CAqBhEM,yBAAyB,CAAE,CACzBP,OADyB,kBACjBC,IADiB,CACX,CACZC,OAAO,CAACC,GAAR,CAAYF,IAAZ,EACD,CAHwB,CArBqC,CA0BhEO,uBAAuB,CAAE,CACvBR,OADuB,kBACfC,IADe,CACT,CACZC,OAAO,CAACC,GAAR,CAAYF,IAAZ,EACD,CAHsB,CA1BuC,CA+BhEQ,oBAAoB,CAAE,CACpBT,OADoB,kBACZC,IADY,CACN,CACZC,OAAO,CAACC,GAAR,CAAYF,IAAZ,EACD,CAHmB,CA/B0C,CAPtE,uCA6CmBX,CAAAA,MAAM,CAACE,aAAP,CAAqBI,MAAO,iBAA5B,CA7CnB,iJA+CaD,eAAe,CAAC,CACrBe,IAAI,CAAEnB,SAAS,CAACoB,6BADK,CAErBC,OAAO,CAAE,kCAFY,CAAD,CA/C5B,0CAqDSjB,eAAe,CAAC,CACrBe,IAAI,CAAEnB,SAAS,CAACsB,kBADK,CAErBD,OAAO,CAAE,0BAFY,CAAD,CArDxB,uEAN2C,oEAAtC,CAkEP,MAAO,IAAME,CAAAA,eAAe,CAAGzB,gBAAgB,CAI7C,kBAJ6C,2FAIzB,kBAAOI,IAAP,2KAAeC,QAAf,OAAeA,QAAf,CAAyBC,eAAzB,OAAyBA,eAAzB,YACDD,QAAQ,EADP,CACZE,MADY,YACZA,MADY,MAEhBA,MAAM,CAACC,MAAP,GAAkB,kBAFF,kDAGLP,CAAAA,MAAM,CAACwB,eAAP,CAAuBlB,MAAvB,CAHK,iGAKbD,eAAe,CAAC,CACrBe,IAAI,CAAEnB,SAAS,CAACsB,kBADK,CAErBD,OAAO,CAAE,0BAFY,CAAD,CALF,0DAJyB,qEAAxC,CAeP,MAAO,IAAMG,CAAAA,gBAAgB,CAAG1B,gBAAgB,CAI9C,mBAJ8C,2FAIzB,kBAAOI,IAAP,2KAAeC,QAAf,OAAeA,QAAf,CAAyBC,eAAzB,OAAyBA,eAAzB,YACFD,QAAQ,EADN,CACbE,MADa,YACbA,MADa,MAEjBA,MAAM,CAACC,MAAP,GAAkB,iBAFD,kDAGNP,CAAAA,MAAM,CAACyB,gBAAP,CAAwBnB,MAAxB,CAHM,iGAKdD,eAAe,CAAC,CACrBe,IAAI,CAAEnB,SAAS,CAACsB,kBADK,CAErBD,OAAO,CAAE,+BAFY,CAAD,CALD,0DAJyB,qEAAzC","sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { State } from '..';\nimport { Minter, SystemWithToolkit, SystemWithWallet } from '../../lib/system';\nimport { ErrorKind, RejectValue } from './errors';\n\ntype Options = {\n  state: State;\n  rejectValue: RejectValue;\n};\n\nexport const connectWallet = createAsyncThunk<\n  SystemWithWallet,\n  undefined,\n  Options\n>(\n  'wallet/connect',\n  async (_arg, { getState, rejectWithValue /* , dispatch */ }) => {\n    const { system } = getState();\n    if (system.status === 'ToolkitConnected') {\n      // TODO: Implement custom UI behavior by overriding Beacon events\n      // NOTE: These event handlers will be passed to the Beacon DAppClient *once*\n      // as the client is cached after its first instantiation\n      // eslint-disable-next-line\n      const eventHandlers: Parameters<typeof Minter.connectWallet>[1] = {\n        PERMISSION_REQUEST_SENT: {\n          handler(data) {\n            console.log(data);\n          }\n        },\n        PERMISSION_REQUEST_SUCCESS: {\n          handler(data) {\n            console.log(data);\n          }\n        },\n        PERMISSION_REQUEST_ERROR: {\n          handler(data) {\n            console.log(data);\n          }\n        },\n        OPERATION_REQUEST_SENT: {\n          handler(data) {\n            console.log(data);\n          }\n        },\n        OPERATION_REQUEST_SUCCESS: {\n          handler(data) {\n            console.log(data);\n          }\n        },\n        OPERATION_REQUEST_ERROR: {\n          handler(data) {\n            console.log(data);\n          }\n        },\n        ACKNOWLEDGE_RECEIVED: {\n          handler(data) {\n            console.log(data);\n          }\n        }\n      };\n      try {\n        return await Minter.connectWallet(system /*eventHandlers*/);\n      } catch (e) {\n        return rejectWithValue({\n          kind: ErrorKind.WalletPermissionRequestDenied,\n          message: 'Wallet permission request denied'\n        });\n      }\n    }\n    return rejectWithValue({\n      kind: ErrorKind.WalletNotConnected,\n      message: 'Wallet already connected'\n    });\n  }\n);\n\nexport const reconnectWallet = createAsyncThunk<\n  SystemWithWallet | SystemWithToolkit,\n  undefined,\n  Options\n>('wallet/reconnect', async (_arg, { getState, rejectWithValue }) => {\n  const { system } = getState();\n  if (system.status === 'ToolkitConnected') {\n    return await Minter.reconnectWallet(system);\n  }\n  return rejectWithValue({\n    kind: ErrorKind.WalletNotConnected,\n    message: 'Wallet already connected'\n  });\n});\n\nexport const disconnectWallet = createAsyncThunk<\n  SystemWithToolkit,\n  undefined,\n  Options\n>('wallet/disconnect', async (_arg, { getState, rejectWithValue }) => {\n  const { system } = getState();\n  if (system.status === 'WalletConnected') {\n    return await Minter.disconnectWallet(system);\n  }\n  return rejectWithValue({\n    kind: ErrorKind.WalletNotConnected,\n    message: 'No wallet to disconnect from '\n  });\n});\n"]},"metadata":{},"sourceType":"module"}