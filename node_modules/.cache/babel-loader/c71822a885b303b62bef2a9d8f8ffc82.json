{"ast":null,"code":"import _regeneratorRuntime from\"/Users/frankenstein/projects/minter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _toConsumableArray from\"/Users/frankenstein/projects/minter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"/Users/frankenstein/projects/minter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/frankenstein/projects/minter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _asyncToGenerator from\"/Users/frankenstein/projects/minter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from'axios';function _getBigMapKeys2(_x,_x2){return _getBigMapKeys.apply(this,arguments);}export{_getBigMapKeys2 as getBigMapKeys};function _getBigMapKeys(){_getBigMapKeys=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(config,id){var response,result,offset,uri;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:result=[];offset=0;uri=\"\".concat(config.bcd.api,\"/v1/bigmap/\").concat(config.network,\"/\").concat(id,\"/keys\");case 3:_context.next=5;return axios.get(uri,{params:{offset:offset}});case 5:response=_context.sent;result.push.apply(result,_toConsumableArray(response.data));offset+=10;case 8:if(response.data.length===10){_context.next=3;break;}case 9:return _context.abrupt(\"return\",result);case 10:case\"end\":return _context.stop();}}},_callee);}));return _getBigMapKeys.apply(this,arguments);}function _getContract2(_x3,_x4){return _getContract.apply(this,arguments);}export{_getContract2 as getContract};function _getContract(){_getContract=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(config,address){var uri,response;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:uri=\"\".concat(config.bcd.api,\"/v1/contract/\").concat(config.network,\"/\").concat(address);_context2.next=3;return axios.get(uri);case 3:response=_context2.sent;return _context2.abrupt(\"return\",response.data);case 5:case\"end\":return _context2.stop();}}},_callee2);}));return _getContract.apply(this,arguments);}function _getContractStorage2(_x5,_x6){return _getContractStorage.apply(this,arguments);}export{_getContractStorage2 as getContractStorage};function _getContractStorage(){_getContractStorage=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(config,address){var uri,response;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:uri=\"\".concat(config.bcd.api,\"/v1/contract/\").concat(config.network,\"/\").concat(address,\"/storage\");_context3.next=3;return axios.get(uri);case 3:response=_context3.sent;return _context3.abrupt(\"return\",response.data);case 5:case\"end\":return _context3.stop();}}},_callee3);}));return _getContractStorage.apply(this,arguments);}function _getWalletContracts2(_x7,_x8){return _getWalletContracts.apply(this,arguments);}export{_getWalletContracts2 as getWalletContracts};function _getWalletContracts(){_getWalletContracts=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(config,address){var uri,response;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:uri=\"\".concat(config.bcd.api,\"/v1/search?q=\").concat(address,\"&i=contract&n=\").concat(config.network,\"&g=0&s=0\");_context4.next=3;return axios.get(uri);case 3:response=_context4.sent;return _context4.abrupt(\"return\",response.data);case 5:case\"end\":return _context4.stop();}}},_callee4);}));return _getWalletContracts.apply(this,arguments);}export var BetterCallDev=/*#__PURE__*/function(){function BetterCallDev(config){_classCallCheck(this,BetterCallDev);this.config=void 0;this.config=config;}_createClass(BetterCallDev,[{key:\"getBigMapKeys\",value:function getBigMapKeys(id){return _getBigMapKeys2(this.config,id);}},{key:\"getContract\",value:function getContract(address){return _getContract2(this.config,address);}},{key:\"getContractStorage\",value:function getContractStorage(address){return _getContractStorage2(this.config,address);}},{key:\"getWalletContracts\",value:function getWalletContracts(address){return _getWalletContracts2(this.config,address);}}]);return BetterCallDev;}();","map":{"version":3,"sources":["/Users/frankenstein/projects/minter/src/lib/service/bcd.ts"],"names":["axios","getBigMapKeys","config","id","result","offset","uri","bcd","api","network","get","params","response","push","data","length","getContract","address","getContractStorage","getWalletContracts","BetterCallDev"],"mappings":"qwBAAA,MAAOA,CAAAA,KAAP,KAAqC,OAArC,C,QAGsBC,CAAAA,e,gMAAf,iBAA6BC,MAA7B,CAA6CC,EAA7C,iJAEDC,MAFC,CAEQ,EAFR,CAGDC,MAHC,CAGQ,CAHR,CAICC,GAJD,WAIUJ,MAAM,CAACK,GAAP,CAAWC,GAJrB,uBAIsCN,MAAM,CAACO,OAJ7C,aAIwDN,EAJxD,uCAMcH,CAAAA,KAAK,CAACU,GAAN,CAAUJ,GAAV,CAAe,CAC9BK,MAAM,CAAE,CACNN,MAAM,CAANA,MADM,CADsB,CAAf,CANd,QAMHO,QANG,eAWHR,MAAM,CAACS,IAAP,OAAAT,MAAM,oBAASQ,QAAQ,CAACE,IAAlB,EAAN,CACAT,MAAM,EAAI,EAAV,CAZG,UAaIO,QAAQ,CAACE,IAAT,CAAcC,MAAd,GAAyB,EAb7B,gEAcEX,MAdF,yD,wDAiBeY,CAAAA,a,uLAAf,kBAA2Bd,MAA3B,CAA2Ce,OAA3C,uIACCX,GADD,WACUJ,MAAM,CAACK,GAAP,CAAWC,GADrB,yBACwCN,MAAM,CAACO,OAD/C,aAC0DQ,OAD1D,yBAEkBjB,CAAAA,KAAK,CAACU,GAAN,CAAUJ,GAAV,CAFlB,QAECM,QAFD,iDAGEA,QAAQ,CAACE,IAHX,0D,sDAMeI,CAAAA,oB,0NAAf,kBAAkChB,MAAlC,CAAkDe,OAAlD,uIACCX,GADD,WACUJ,MAAM,CAACK,GAAP,CAAWC,GADrB,yBACwCN,MAAM,CAACO,OAD/C,aAC0DQ,OAD1D,oCAEkBjB,CAAAA,KAAK,CAACU,GAAN,CAAUJ,GAAV,CAFlB,QAECM,QAFD,iDAGEA,QAAQ,CAACE,IAHX,0D,6DAMeK,CAAAA,oB,0NAAf,kBAAkCjB,MAAlC,CAAkDe,OAAlD,uIACCX,GADD,WACUJ,MAAM,CAACK,GAAP,CAAWC,GADrB,yBACwCS,OADxC,0BACgEf,MAAM,CAACO,OADvE,oCAEkBT,CAAAA,KAAK,CAACU,GAAN,CAAUJ,GAAV,CAFlB,QAECM,QAFD,iDAGEA,QAAQ,CAACE,IAHX,0D,qDAMP,UAAaM,CAAAA,aAAb,yBAGE,uBAAYlB,MAAZ,CAA4B,0CAF5BA,MAE4B,QAC1B,KAAKA,MAAL,CAAcA,MAAd,CACD,CALH,uDAOE,uBAAcC,EAAd,CAA0B,CACxB,MAAOF,CAAAA,eAAa,CAAC,KAAKC,MAAN,CAAcC,EAAd,CAApB,CACD,CATH,2BAWE,qBAAYc,OAAZ,CAA6B,CAC3B,MAAOD,CAAAA,aAAW,CAAC,KAAKd,MAAN,CAAce,OAAd,CAAlB,CACD,CAbH,kCAeE,4BAAmBA,OAAnB,CAAoC,CAClC,MAAOC,CAAAA,oBAAkB,CAAC,KAAKhB,MAAN,CAAce,OAAd,CAAzB,CACD,CAjBH,kCAmBE,4BAAmBA,OAAnB,CAAoC,CAClC,MAAOE,CAAAA,oBAAkB,CAAC,KAAKjB,MAAN,CAAce,OAAd,CAAzB,CACD,CArBH","sourcesContent":["import axios, { AxiosResponse } from 'axios';\nimport { Config } from '../system';\n\nexport async function getBigMapKeys(config: Config, id: number) {\n  let response: AxiosResponse;\n  let result = [];\n  let offset = 0;\n  const uri = `${config.bcd.api}/v1/bigmap/${config.network}/${id}/keys`;\n  do {\n    response = await axios.get(uri, {\n      params: {\n        offset\n      }\n    });\n    result.push(...response.data);\n    offset += 10;\n  } while (response.data.length === 10);\n  return result;\n}\n\nexport async function getContract(config: Config, address: string) {\n  const uri = `${config.bcd.api}/v1/contract/${config.network}/${address}`;\n  const response = await axios.get(uri);\n  return response.data;\n}\n\nexport async function getContractStorage(config: Config, address: string) {\n  const uri = `${config.bcd.api}/v1/contract/${config.network}/${address}/storage`;\n  const response = await axios.get(uri);\n  return response.data;\n}\n\nexport async function getWalletContracts(config: Config, address: string) {\n  const uri = `${config.bcd.api}/v1/search?q=${address}&i=contract&n=${config.network}&g=0&s=0`;\n  const response = await axios.get(uri);\n  return response.data;\n}\n\nexport class BetterCallDev {\n  config: Config;\n\n  constructor(config: Config) {\n    this.config = config;\n  }\n\n  getBigMapKeys(id: number) {\n    return getBigMapKeys(this.config, id);\n  }\n\n  getContract(address: string) {\n    return getContract(this.config, address);\n  }\n\n  getContractStorage(address: string) {\n    return getContractStorage(this.config, address);\n  }\n\n  getWalletContracts(address: string) {\n    return getWalletContracts(this.config, address);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}