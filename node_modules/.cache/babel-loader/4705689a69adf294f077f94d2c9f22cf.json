{"ast":null,"code":"import _regeneratorRuntime from \"/Users/frankenstein/projects/minter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _classCallCheck from \"/Users/frankenstein/projects/minter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/frankenstein/projects/minter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nexport var MatrixUserService = /*#__PURE__*/function () {\n  function MatrixUserService(httpClient) {\n    _classCallCheck(this, MatrixUserService);\n\n    this.httpClient = httpClient;\n  }\n  /**\n   * Log in to the matrix node with username and password\n   *\n   * @param user\n   * @param password\n   * @param deviceId\n   */\n\n\n  _createClass(MatrixUserService, [{\n    key: \"login\",\n    value: function login(user, password, deviceId) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", this.httpClient.post('/login', {\n                  type: 'm.login.password',\n                  identifier: {\n                    type: 'm.id.user',\n                    user: user\n                  },\n                  password: password,\n                  device_id: deviceId\n                }));\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n    }\n  }]);\n\n  return MatrixUserService;\n}();","map":{"version":3,"sources":["../../../../src/matrix-client/services/MatrixUserService.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,WAAa,iBAAb;AACE,6BAA6B,UAA7B,EAAyD;AAAA;;AAA5B,SAAA,UAAA,GAAA,UAAA;AAAgC;AAE7D;;;;;;AAMG;;;AATL;AAAA;AAAA,WAUe,eACX,IADW,EAEX,QAFW,EAGX,QAHW,EAGK;;;;;;iDAET,KAAK,UAAL,CAAgB,IAAhB,CAA0C,QAA1C,EAAoD;AACzD,kBAAA,IAAI,EAAE,kBADmD;AAEzD,kBAAA,UAAU,EAAE;AACV,oBAAA,IAAI,EAAE,WADI;AAEV,oBAAA,IAAI,EAAJ;AAFU,mBAF6C;AAMzD,kBAAA,QAAQ,EAAR,QANyD;AAOzD,kBAAA,SAAS,EAAE;AAP8C,iBAApD,C;;;;;;;;;AASR;AAxBH;;AAAA;AAAA","sourceRoot":"","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nexport class MatrixUserService {\n    constructor(httpClient) {\n        this.httpClient = httpClient;\n    }\n    /**\n     * Log in to the matrix node with username and password\n     *\n     * @param user\n     * @param password\n     * @param deviceId\n     */\n    login(user, password, deviceId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.httpClient.post('/login', {\n                type: 'm.login.password',\n                identifier: {\n                    type: 'm.id.user',\n                    user\n                },\n                password,\n                device_id: deviceId\n            });\n        });\n    }\n}\n//# sourceMappingURL=MatrixUserService.js.map"]},"metadata":{},"sourceType":"module"}