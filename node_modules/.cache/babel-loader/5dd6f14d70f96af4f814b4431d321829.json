{"ast":null,"code":"var _jsxFileName = \"/Users/frankenstein/projects/minter/src/components/common/modals/BuyToken.tsx\";\nimport React from 'react';\nimport { Box, Button, ModalHeader, ModalFooter, ModalBody, ModalCloseButton, Text, useDisclosure } from '@chakra-ui/react';\nimport { MinterButton } from '../../common';\nimport { useDispatch, useSelector } from '../../../reducer';\nimport { buyTokenAction } from '../../../reducer/async/actions';\nimport FormModal from './FormModal';\nimport tz from \"../assets/tezos-sym.svg\";\nexport function BuyTokenModal(props) {\n  const dispatch = useDispatch();\n  const initialRef = React.useRef(null);\n  return /*#__PURE__*/React.createElement(FormModal, {\n    disclosure: props.disclosure,\n    sync: props.sync,\n    method: \"buyToken\",\n    dispatchThunk: () => {\n      var _props$token$sale, _props$token$sale2, _props$token$sale3, _props$token$sale4, _props$token$sale5, _props$token$sale6;\n\n      return dispatch(buyTokenAction({\n        contract: ((_props$token$sale = props.token.sale) === null || _props$token$sale === void 0 ? void 0 : _props$token$sale.saleToken.address) || '',\n        tokenId: ((_props$token$sale2 = props.token.sale) === null || _props$token$sale2 === void 0 ? void 0 : _props$token$sale2.saleToken.tokenId) || 0,\n        tokenSeller: ((_props$token$sale3 = props.token.sale) === null || _props$token$sale3 === void 0 ? void 0 : _props$token$sale3.seller) || '',\n        salePrice: ((_props$token$sale4 = props.token.sale) === null || _props$token$sale4 === void 0 ? void 0 : _props$token$sale4.price) || 0,\n        saleId: ((_props$token$sale5 = props.token.sale) === null || _props$token$sale5 === void 0 ? void 0 : _props$token$sale5.saleId) || 0,\n        saleType: ((_props$token$sale6 = props.token.sale) === null || _props$token$sale6 === void 0 ? void 0 : _props$token$sale6.type) || ''\n      }));\n    },\n    initialRef: initialRef,\n    pendingMessage: \"Purchasing token...\",\n    completeMessage: \"Token purchased\",\n    body: onSubmit => {\n      var _props$token$sale7;\n\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ModalHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }\n      }, \"Checkout\"), /*#__PURE__*/React.createElement(ModalCloseButton, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(ModalBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }\n      }, \"You are about to purchase\", /*#__PURE__*/React.createElement(Box, {\n        as: \"span\",\n        fontWeight: \"bold\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }\n      }, ' ', props.token.title, \" (\", /*#__PURE__*/React.createElement(\"img\", {\n        src: tz,\n        alt: \"\",\n        width: 10,\n        height: \"auto\",\n        style: {\n          display: 'inline-block'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 38\n        }\n      }), \" \", (_props$token$sale7 = props.token.sale) === null || _props$token$sale7 === void 0 ? void 0 : _props$token$sale7.price, \")\"))), /*#__PURE__*/React.createElement(ModalFooter, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"primaryAction\",\n        onClick: () => onSubmit(),\n        isFullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }\n      }, \"Buy now\")));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  });\n}\nexport function BuyTokenButton(props) {\n  const disclosure = useDisclosure();\n  const {\n    status\n  } = useSelector(s => s.status.buyToken);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MinterButton, {\n    variant: \"primaryAction\",\n    onClick: disclosure.onOpen,\n    disabled: status === 'in_transit',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, \"Buy now\"), /*#__PURE__*/React.createElement(BuyTokenModal, Object.assign({}, props, {\n    disclosure: disclosure,\n    sync: props.sync,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/frankenstein/projects/minter/src/components/common/modals/BuyToken.tsx"],"names":["React","Box","Button","ModalHeader","ModalFooter","ModalBody","ModalCloseButton","Text","useDisclosure","MinterButton","useDispatch","useSelector","buyTokenAction","FormModal","BuyTokenModal","props","dispatch","initialRef","useRef","disclosure","sync","contract","token","sale","saleToken","address","tokenId","tokenSeller","seller","salePrice","price","saleId","saleType","type","onSubmit","title","tz","display","BuyTokenButton","status","s","buyToken","onOpen"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  Box,\n  Button,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Text,\n  useDisclosure\n} from '@chakra-ui/react';\nimport { MinterButton } from '../../common';\nimport { useDispatch, useSelector } from '../../../reducer';\nimport { buyTokenAction } from '../../../reducer/async/actions';\nimport { Nft } from '../../../lib/nfts/decoders';\nimport FormModal, { BaseModalProps, BaseModalButtonProps } from './FormModal';\nimport tz from '../assets/tezos-sym.svg'\n\ninterface BuyTokenModalProps extends BaseModalProps {\n  token: Nft;\n}\n\nexport function BuyTokenModal(props: BuyTokenModalProps) {\n  const dispatch = useDispatch();\n  const initialRef = React.useRef(null);\n  return (\n    <FormModal\n      disclosure={props.disclosure}\n      sync={props.sync}\n      method=\"buyToken\"\n      dispatchThunk={() =>\n        dispatch(\n          buyTokenAction({\n            contract: props.token.sale?.saleToken.address || '',\n            tokenId: props.token.sale?.saleToken.tokenId || 0,\n            tokenSeller: props.token.sale?.seller || '',\n            salePrice: props.token.sale?.price || 0,\n            saleId: props.token.sale?.saleId || 0,\n            saleType: props.token.sale?.type || ''\n          })\n        )\n      }\n      initialRef={initialRef}\n      pendingMessage=\"Purchasing token...\"\n      completeMessage=\"Token purchased\"\n      body={onSubmit => (\n        <>\n          <ModalHeader>Checkout</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody>\n            <Text>\n              You are about to purchase\n              <Box as=\"span\" fontWeight=\"bold\">\n                {' '}\n                {props.token.title} (<img src={tz} alt=\"\" width={10} height=\"auto\" style={{display: 'inline-block'}}/> {props.token.sale?.price})\n              </Box>\n            </Text>\n          </ModalBody>\n          <ModalFooter>\n            <Button\n              variant=\"primaryAction\"\n              onClick={() => onSubmit()}\n              isFullWidth={true}\n            >\n              Buy now\n            </Button>\n          </ModalFooter>\n        </>\n      )}\n    />\n  );\n}\n\ninterface BuyTokenButtonProps extends BaseModalButtonProps {\n  token: Nft;\n}\n\nexport function BuyTokenButton(props: BuyTokenButtonProps) {\n  const disclosure = useDisclosure();\n  const { status } = useSelector(s => s.status.buyToken)\n\n  return (\n    <>\n      <MinterButton variant=\"primaryAction\" onClick={disclosure.onOpen} disabled={status === 'in_transit'}>\n        Buy now\n      </MinterButton>\n\n      <BuyTokenModal {...props} disclosure={disclosure} sync={props.sync} />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}