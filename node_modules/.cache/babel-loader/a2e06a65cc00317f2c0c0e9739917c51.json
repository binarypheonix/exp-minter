{"ast":null,"code":"var _jsxFileName = \"/Users/frankenstein/projects/minter/src/components/Collections/Catalog/CollectionsDropdown.tsx\";\nimport React from 'react';\nimport { Box, Button, Flex, Menu, MenuButton, MenuList, MenuOptionGroup, MenuItemOption, Text } from '@chakra-ui/react';\nimport { useSelector, useDispatch } from '../../../reducer';\nimport { selectCollection } from '../../../reducer/slices/collections';\nimport { ChevronDown } from 'react-feather';\nexport default function CollectionsDropdown() {\n  const state = useSelector(s => s.collections);\n  const dispatch = useDispatch();\n  return /*#__PURE__*/React.createElement(Flex, {\n    width: \"100%\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Menu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MenuButton, {\n    as: Button,\n    border: \"1px solid\",\n    borderColor: \"brand.gray\",\n    flex: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Flex, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    mr: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ChevronDown, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 15\n    }\n  })), state.selectedCollection ? state.collections[state.selectedCollection].metadata.name : '-')), /*#__PURE__*/React.createElement(MenuList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MenuOptionGroup, {\n    type: \"radio\",\n    defaultValue: state.selectedCollection || '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    ml: 4,\n    my: 2,\n    fontWeight: \"600\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, \"Featured\"), /*#__PURE__*/React.createElement(MenuItemOption, {\n    key: state.globalCollection,\n    selected: state.globalCollection === state.selectedCollection,\n    value: state.globalCollection,\n    onSelect: () => dispatch(selectCollection(state.globalCollection)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, state.collections[state.globalCollection].metadata.name), /*#__PURE__*/React.createElement(Text, {\n    ml: 4,\n    my: 2,\n    fontWeight: \"600\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \"Your Collections\"), Object.keys(state.collections).filter(address => address !== state.globalCollection).map((address, idx) => /*#__PURE__*/React.createElement(MenuItemOption, {\n    key: address + idx,\n    value: address,\n    selected: address === state.selectedCollection,\n    onClick: () => dispatch(selectCollection(address)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, state.collections[address].metadata.name))))));\n}","map":{"version":3,"sources":["/Users/frankenstein/projects/minter/src/components/Collections/Catalog/CollectionsDropdown.tsx"],"names":["React","Box","Button","Flex","Menu","MenuButton","MenuList","MenuOptionGroup","MenuItemOption","Text","useSelector","useDispatch","selectCollection","ChevronDown","CollectionsDropdown","state","s","collections","dispatch","selectedCollection","metadata","name","globalCollection","Object","keys","filter","address","map","idx"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  Box,\n  Button,\n  Flex,\n  Menu,\n  MenuButton,\n  MenuList,\n  MenuOptionGroup,\n  MenuItemOption,\n  Text\n} from '@chakra-ui/react';\nimport { useSelector, useDispatch } from '../../../reducer';\nimport { selectCollection } from '../../../reducer/slices/collections';\nimport { ChevronDown } from 'react-feather';\n\nexport default function CollectionsDropdown() {\n  const state = useSelector(s => s.collections);\n  const dispatch = useDispatch();\n\n  return (\n    <Flex width=\"100%\" align=\"center\">\n      <Menu>\n        <MenuButton\n          as={Button}\n          border=\"1px solid\"\n          borderColor=\"brand.gray\"\n          flex=\"1\"\n        >\n          <Flex align=\"center\">\n            <Box mr={3}>\n              <ChevronDown />\n            </Box>\n            {state.selectedCollection\n              ? state.collections[state.selectedCollection].metadata.name\n              : '-'}\n          </Flex>\n        </MenuButton>\n        <MenuList>\n          <MenuOptionGroup\n            type=\"radio\"\n            defaultValue={state.selectedCollection || ''}\n          >\n            <Text ml={4} my={2} fontWeight=\"600\">\n              Featured\n            </Text>\n            <MenuItemOption\n              key={state.globalCollection}\n              selected={state.globalCollection === state.selectedCollection}\n              value={state.globalCollection}\n              onSelect={() =>\n                dispatch(selectCollection(state.globalCollection))\n              }\n            >\n              {state.collections[state.globalCollection].metadata.name}\n            </MenuItemOption>\n            <Text ml={4} my={2} fontWeight=\"600\">\n              Your Collections\n            </Text>\n            {Object.keys(state.collections)\n              .filter(address => address !== state.globalCollection)\n              .map((address, idx) => (\n                <MenuItemOption\n                  key={address + idx}\n                  value={address}\n                  selected={address === state.selectedCollection}\n                  onClick={() => dispatch(selectCollection(address))}\n                >\n                  {state.collections[address].metadata.name}\n                </MenuItemOption>\n              ))}\n          </MenuOptionGroup>\n        </MenuList>\n      </Menu>\n    </Flex>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}