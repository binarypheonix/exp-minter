{"ast":null,"code":"import _regeneratorRuntime from\"/Users/frankenstein/projects/minter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/frankenstein/projects/minter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";export var setConfirmationPollingInterval=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(tzToolkit){var constants,confirmationPollingIntervalSecond;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return tzToolkit.rpc.getConstants();case 2:constants=_context.sent;// Polling interval has to be smaller than the time between block\n// or TezosToolkit throws an exception. Here we pick 1/5 of the time\n// between blocks.\nconfirmationPollingIntervalSecond=Number(constants.time_between_blocks[0])/5;tzToolkit.setProvider({config:{confirmationPollingIntervalSecond:confirmationPollingIntervalSecond}});case 5:case\"end\":return _context.stop();}}},_callee);}));return function setConfirmationPollingInterval(_x){return _ref.apply(this,arguments);};}();","map":{"version":3,"sources":["/Users/frankenstein/projects/minter/src/lib/util/tezosToolkit.ts"],"names":["setConfirmationPollingInterval","tzToolkit","rpc","getConstants","constants","confirmationPollingIntervalSecond","Number","time_between_blocks","setProvider","config"],"mappings":"iTAEA,MAAO,IAAMA,CAAAA,8BAA8B,0FAAG,iBAC5CC,SAD4C,wLAGpBA,CAAAA,SAAS,CAACC,GAAV,CAAcC,YAAd,EAHoB,QAGtCC,SAHsC,eAK5C;AACA;AACA;AACMC,iCARsC,CAS1CC,MAAM,CAACF,SAAS,CAACG,mBAAV,CAA8B,CAA9B,CAAD,CAAN,CAA2C,CATD,CAU5CN,SAAS,CAACO,WAAV,CAAsB,CAAEC,MAAM,CAAE,CAAEJ,iCAAiC,CAAjCA,iCAAF,CAAV,CAAtB,EAV4C,sDAAH,kBAA9BL,CAAAA,8BAA8B,4CAApC","sourcesContent":["import { TezosToolkit } from '@taquito/taquito';\n\nexport const setConfirmationPollingInterval = async (\n  tzToolkit: TezosToolkit\n) => {\n  const constants = await tzToolkit.rpc.getConstants();\n\n  // Polling interval has to be smaller than the time between block\n  // or TezosToolkit throws an exception. Here we pick 1/5 of the time\n  // between blocks.\n  const confirmationPollingIntervalSecond =\n    Number(constants.time_between_blocks[0]) / 5;\n  tzToolkit.setProvider({ config: { confirmationPollingIntervalSecond } });\n};\n"]},"metadata":{},"sourceType":"module"}