{"ast":null,"code":"import Joi from'joi';export var fileUploadSchema=Joi.object({selectedFile:Joi.required().invalid(null)});export var assetDetailsSchema=fileUploadSchema.append({fields:Joi.object({name:Joi.string().min(1).required(),description:Joi.string().allow(null).allow('')}),metadataRows:Joi.array().items(Joi.object({name:Joi.string().min(1).required(),value:Joi.string().min(1).required()}))});export var collectionSelectSchema=assetDetailsSchema.append({collectionAddress:Joi.string().required()});function isValid(schema,object){return!schema.validate(object,{allowUnknown:true}).error;}export function validateCreateNftStep(state){switch(state.step){case'file_upload':return isValid(fileUploadSchema,state);case'asset_details':return isValid(collectionSelectSchema,state);case'collection_select':return isValid(collectionSelectSchema,state);case'confirm':return isValid(collectionSelectSchema,state);default:return false;}}export function validateCreateNftForm(state){return isValid(collectionSelectSchema,state);}","map":{"version":3,"sources":["/Users/frankenstein/projects/minter/src/reducer/validators/createNft.ts"],"names":["Joi","fileUploadSchema","object","selectedFile","required","invalid","assetDetailsSchema","append","fields","name","string","min","description","allow","metadataRows","array","items","value","collectionSelectSchema","collectionAddress","isValid","schema","validate","allowUnknown","error","validateCreateNftStep","state","step","validateCreateNftForm"],"mappings":"AAAA,MAAOA,CAAAA,GAAP,KAAgB,KAAhB,CAGA,MAAO,IAAMC,CAAAA,gBAAgB,CAAGD,GAAG,CAACE,MAAJ,CAAW,CACzCC,YAAY,CAAEH,GAAG,CAACI,QAAJ,GAAeC,OAAf,CAAuB,IAAvB,CAD2B,CAAX,CAAzB,CAIP,MAAO,IAAMC,CAAAA,kBAAkB,CAAGL,gBAAgB,CAACM,MAAjB,CAAwB,CACxDC,MAAM,CAAER,GAAG,CAACE,MAAJ,CAAW,CACjBO,IAAI,CAAET,GAAG,CAACU,MAAJ,GAAaC,GAAb,CAAiB,CAAjB,EAAoBP,QAApB,EADW,CAEjBQ,WAAW,CAAEZ,GAAG,CAACU,MAAJ,GAAaG,KAAb,CAAmB,IAAnB,EAAyBA,KAAzB,CAA+B,EAA/B,CAFI,CAAX,CADgD,CAKxDC,YAAY,CAAEd,GAAG,CAACe,KAAJ,GAAYC,KAAZ,CACZhB,GAAG,CAACE,MAAJ,CAAW,CACTO,IAAI,CAAET,GAAG,CAACU,MAAJ,GAAaC,GAAb,CAAiB,CAAjB,EAAoBP,QAApB,EADG,CAETa,KAAK,CAAEjB,GAAG,CAACU,MAAJ,GAAaC,GAAb,CAAiB,CAAjB,EAAoBP,QAApB,EAFE,CAAX,CADY,CAL0C,CAAxB,CAA3B,CAaP,MAAO,IAAMc,CAAAA,sBAAsB,CAAGZ,kBAAkB,CAACC,MAAnB,CAA0B,CAC9DY,iBAAiB,CAAEnB,GAAG,CAACU,MAAJ,GAAaN,QAAb,EAD2C,CAA1B,CAA/B,CAIP,QAASgB,CAAAA,OAAT,CAAiBC,MAAjB,CAA2CnB,MAA3C,CAAwD,CACtD,MAAO,CAACmB,MAAM,CAACC,QAAP,CAAgBpB,MAAhB,CAAwB,CAAEqB,YAAY,CAAE,IAAhB,CAAxB,EAAgDC,KAAxD,CACD,CAED,MAAO,SAASC,CAAAA,qBAAT,CAA+BC,KAA/B,CAA0D,CAC/D,OAAQA,KAAK,CAACC,IAAd,EACE,IAAK,aAAL,CACE,MAAOP,CAAAA,OAAO,CAACnB,gBAAD,CAAmByB,KAAnB,CAAd,CACF,IAAK,eAAL,CACE,MAAON,CAAAA,OAAO,CAACF,sBAAD,CAAyBQ,KAAzB,CAAd,CACF,IAAK,mBAAL,CACE,MAAON,CAAAA,OAAO,CAACF,sBAAD,CAAyBQ,KAAzB,CAAd,CACF,IAAK,SAAL,CACE,MAAON,CAAAA,OAAO,CAACF,sBAAD,CAAyBQ,KAAzB,CAAd,CACF,QACE,MAAO,MAAP,CAVJ,CAYD,CAED,MAAO,SAASE,CAAAA,qBAAT,CAA+BF,KAA/B,CAA0D,CAC/D,MAAON,CAAAA,OAAO,CAACF,sBAAD,CAAyBQ,KAAzB,CAAd,CACD","sourcesContent":["import Joi from 'joi';\nimport { State } from '..';\n\nexport const fileUploadSchema = Joi.object({\n  selectedFile: Joi.required().invalid(null)\n});\n\nexport const assetDetailsSchema = fileUploadSchema.append({\n  fields: Joi.object({\n    name: Joi.string().min(1).required(),\n    description: Joi.string().allow(null).allow('')\n  }),\n  metadataRows: Joi.array().items(\n    Joi.object({\n      name: Joi.string().min(1).required(),\n      value: Joi.string().min(1).required()\n    })\n  )\n});\n\nexport const collectionSelectSchema = assetDetailsSchema.append({\n  collectionAddress: Joi.string().required()\n});\n\nfunction isValid(schema: Joi.ObjectSchema, object: any) {\n  return !schema.validate(object, { allowUnknown: true }).error;\n}\n\nexport function validateCreateNftStep(state: State['createNft']) {\n  switch (state.step) {\n    case 'file_upload':\n      return isValid(fileUploadSchema, state);\n    case 'asset_details':\n      return isValid(collectionSelectSchema, state);\n    case 'collection_select':\n      return isValid(collectionSelectSchema, state);\n    case 'confirm':\n      return isValid(collectionSelectSchema, state);\n    default:\n      return false;\n  }\n}\n\nexport function validateCreateNftForm(state: State['createNft']) {\n  return isValid(collectionSelectSchema, state);\n}\n"]},"metadata":{},"sourceType":"module"}