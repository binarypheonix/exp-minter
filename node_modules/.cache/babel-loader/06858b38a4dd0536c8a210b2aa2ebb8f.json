{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.elem = exports.rotate = exports.intersperse = exports.prependAll = exports.unzip = exports.zip = exports.zipWith = exports.sort = exports.lefts = exports.rights = exports.reverse = exports.modifyAt = exports.deleteAt = exports.updateAt = exports.insertAt = exports.copy = exports.findLastIndex = exports.findLastMap = exports.findLast = exports.findFirstMap = exports.findFirst = exports.findIndex = exports.dropLeftWhile = exports.dropRight = exports.dropLeft = exports.spanLeft = exports.takeLeftWhile = exports.takeRight = exports.takeLeft = exports.init = exports.tail = exports.last = exports.head = exports.lookup = exports.isOutOfBound = exports.size = exports.isNonEmpty = exports.isEmpty = exports.scanRight = exports.scanLeft = exports.chainWithIndex = exports.foldRight = exports.matchRight = exports.foldLeft = exports.matchLeft = exports.replicate = exports.range = exports.makeBy = exports.append = exports.prepend = void 0;\nexports.flap = exports.Functor = exports.getOrd = exports.getEq = exports.getMonoid = exports.getSemigroup = exports.getShow = exports.URI = exports.unfold = exports.wilt = exports.wither = exports.traverseWithIndex = exports.sequence = exports.traverse = exports.reduceRightWithIndex = exports.reduceRight = exports.reduceWithIndex = exports.reduce = exports.foldMapWithIndex = exports.foldMap = exports.duplicate = exports.extend = exports.filterWithIndex = exports.alt = exports.altW = exports.partitionMapWithIndex = exports.partitionMap = exports.partitionWithIndex = exports.partition = exports.filter = exports.separate = exports.compact = exports.filterMap = exports.filterMapWithIndex = exports.mapWithIndex = exports.flatten = exports.chain = exports.ap = exports.map = exports.zero = exports.of = exports.difference = exports.intersection = exports.union = exports.comprehension = exports.chunksOf = exports.splitAt = exports.chop = exports.sortBy = exports.uniq = void 0;\nexports.array = exports.prependToAll = exports.snoc = exports.cons = exports.empty = exports.apS = exports.bind = exports.bindTo = exports.Do = exports.some = exports.every = exports.unsafeDeleteAt = exports.unsafeUpdateAt = exports.unsafeInsertAt = exports.Witherable = exports.TraversableWithIndex = exports.Traversable = exports.FoldableWithIndex = exports.Foldable = exports.FilterableWithIndex = exports.Filterable = exports.Compactable = exports.Extend = exports.Alternative = exports.Alt = exports.Unfoldable = exports.Monad = exports.chainFirst = exports.Chain = exports.Applicative = exports.apSecond = exports.apFirst = exports.Apply = exports.FunctorWithIndex = exports.Pointed = void 0;\n\nvar Apply_1 = require(\"./Apply\");\n\nvar Chain_1 = require(\"./Chain\");\n\nvar function_1 = require(\"./function\");\n\nvar Functor_1 = require(\"./Functor\");\n\nvar NEA = __importStar(require(\"./NonEmptyArray\"));\n\nvar O = __importStar(require(\"./Option\"));\n\nvar RA = __importStar(require(\"./ReadonlyArray\"));\n\nvar Separated_1 = require(\"./Separated\"); // -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n\n/**\n * Prepend an element to the front of a `Array`, creating a new `NonEmptyArray`.\n *\n * @example\n * import { prepend } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([2, 3, 4], prepend(1)), [1, 2, 3, 4])\n *\n * @category constructors\n * @since 2.10.0\n */\n\n\nexports.prepend = NEA.prepend;\n/**\n * Append an element to the end of a `Array`, creating a new `NonEmptyArray`.\n *\n * @example\n * import { append } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([1, 2, 3], append(4)), [1, 2, 3, 4])\n *\n * @category constructors\n * @since 2.10.0\n */\n\nexports.append = NEA.append;\n/**\n * Return a `Array` of length `n` with element `i` initialized with `f(i)`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { makeBy } from 'fp-ts/Array'\n *\n * const double = (n: number): number => n * 2\n * assert.deepStrictEqual(makeBy(5, double), [0, 2, 4, 6, 8])\n *\n * @category constructors\n * @since 2.0.0\n */\n\nvar makeBy = function makeBy(n, f) {\n  return n <= 0 ? [] : NEA.makeBy(n, f);\n};\n\nexports.makeBy = makeBy;\n/**\n * Create an `Array` containing a range of integers, including both endpoints.\n *\n * @example\n * import { range } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(range(1, 5), [1, 2, 3, 4, 5])\n *\n * @category constructors\n * @since 2.0.0\n */\n\nvar range = function range(start, end) {\n  return start <= end ? exports.makeBy(end - start + 1, function (i) {\n    return start + i;\n  }) : [start];\n};\n\nexports.range = range;\n/**\n * Create a `Array` containing a value repeated the specified number of times.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { replicate } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(replicate(3, 'a'), ['a', 'a', 'a'])\n *\n * @category constructors\n * @since 2.0.0\n */\n\nvar replicate = function replicate(n, a) {\n  return exports.makeBy(n, function () {\n    return a;\n  });\n};\n\nexports.replicate = replicate; // -------------------------------------------------------------------------------------\n// destructors\n// -------------------------------------------------------------------------------------\n\n/**\n * Break an array into its first element and remaining elements\n *\n * @example\n * import { matchLeft } from 'fp-ts/Array'\n *\n * const len: <A>(as: Array<A>) => number = matchLeft(() => 0, (_, tail) => 1 + len(tail))\n * assert.strictEqual(len([1, 2, 3]), 3)\n *\n * @category destructors\n * @since 2.10.0\n */\n\nvar matchLeft = function matchLeft(onEmpty, onNonEmpty) {\n  return function (as) {\n    return exports.isNonEmpty(as) ? onNonEmpty(NEA.head(as), NEA.tail(as)) : onEmpty();\n  };\n};\n\nexports.matchLeft = matchLeft;\n/**\n * Alias of [`matchLeft`](#matchleft).\n *\n * @category destructors\n * @since 2.0.0\n */\n\nexports.foldLeft = exports.matchLeft;\n/**\n * Break an array into its initial elements and the last element\n *\n * @category destructors\n * @since 2.10.0\n */\n\nvar matchRight = function matchRight(onEmpty, onNonEmpty) {\n  return function (as) {\n    return exports.isNonEmpty(as) ? onNonEmpty(NEA.init(as), NEA.last(as)) : onEmpty();\n  };\n};\n\nexports.matchRight = matchRight;\n/**\n * Alias of [`matchRight`](#matchright).\n *\n * @category destructors\n * @since 2.0.0\n */\n\nexports.foldRight = exports.matchRight; // -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n\n/**\n * @category combinators\n * @since 2.7.0\n */\n\nvar chainWithIndex = function chainWithIndex(f) {\n  return function (as) {\n    var out = [];\n\n    for (var i = 0; i < as.length; i++) {\n      out.push.apply(out, f(i, as[i]));\n    }\n\n    return out;\n  };\n};\n\nexports.chainWithIndex = chainWithIndex;\n/**\n * Same as `reduce` but it carries over the intermediate steps\n *\n * @example\n * import { scanLeft } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(scanLeft(10, (b, a: number) => b - a)([1, 2, 3]), [10, 9, 7, 4])\n *\n * @category combinators\n * @since 2.0.0\n */\n\nvar scanLeft = function scanLeft(b, f) {\n  return function (as) {\n    var len = as.length;\n    var out = new Array(len + 1);\n    out[0] = b;\n\n    for (var i = 0; i < len; i++) {\n      out[i + 1] = f(out[i], as[i]);\n    }\n\n    return out;\n  };\n};\n\nexports.scanLeft = scanLeft;\n/**\n * Fold an array from the right, keeping all intermediate results instead of only the final result\n *\n * @example\n * import { scanRight } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(scanRight(10, (a: number, b) => b - a)([1, 2, 3]), [4, 5, 7, 10])\n *\n * @category combinators\n * @since 2.0.0\n */\n\nvar scanRight = function scanRight(b, f) {\n  return function (as) {\n    var len = as.length;\n    var out = new Array(len + 1);\n    out[len] = b;\n\n    for (var i = len - 1; i >= 0; i--) {\n      out[i] = f(as[i], out[i + 1]);\n    }\n\n    return out;\n  };\n};\n\nexports.scanRight = scanRight;\n/**\n * Test whether an array is empty\n *\n * @example\n * import { isEmpty } from 'fp-ts/Array'\n *\n * assert.strictEqual(isEmpty([]), true)\n *\n * @since 2.0.0\n */\n\nexports.isEmpty = RA.isEmpty;\n/**\n * Test whether an array is non empty narrowing down the type to `NonEmptyArray<A>`\n *\n * @category guards\n * @since 2.0.0\n */\n\nexports.isNonEmpty = NEA.isNonEmpty;\n/**\n * Calculate the number of elements in a `Array`.\n *\n * @since 2.10.0\n */\n\nvar size = function size(as) {\n  return as.length;\n};\n\nexports.size = size;\n/**\n * Test whether an array contains a particular index\n *\n * @since 2.0.0\n */\n\nexports.isOutOfBound = NEA.isOutOfBound; // TODO: remove non-curried overloading in v3\n\n/**\n * This function provides a safe way to read a value at a particular index from an array\n *\n * @example\n * import { lookup } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([1, 2, 3], lookup(1)), some(2))\n * assert.deepStrictEqual(pipe([1, 2, 3], lookup(3)), none)\n *\n * @since 2.0.0\n */\n\nexports.lookup = RA.lookup;\n/**\n * Get the first element in an array, or `None` if the array is empty\n *\n * @example\n * import { head } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(head([1, 2, 3]), some(1))\n * assert.deepStrictEqual(head([]), none)\n *\n * @category destructors\n * @since 2.0.0\n */\n\nexports.head = RA.head;\n/**\n * Get the last element in an array, or `None` if the array is empty\n *\n * @example\n * import { last } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(last([1, 2, 3]), some(3))\n * assert.deepStrictEqual(last([]), none)\n *\n * @category destructors\n * @since 2.0.0\n */\n\nexports.last = RA.last;\n/**\n * Get all but the first element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { tail } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(tail([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(tail([]), none)\n *\n * @category destructors\n * @since 2.0.0\n */\n\nvar tail = function tail(as) {\n  return exports.isNonEmpty(as) ? O.some(NEA.tail(as)) : O.none;\n};\n\nexports.tail = tail;\n/**\n * Get all but the last element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { init } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(init([1, 2, 3]), some([1, 2]))\n * assert.deepStrictEqual(init([]), none)\n *\n * @category destructors\n * @since 2.0.0\n */\n\nvar init = function init(as) {\n  return exports.isNonEmpty(as) ? O.some(NEA.init(as)) : O.none;\n};\n\nexports.init = init;\n/**\n * Keep only a max number of elements from the start of an `Array`, creating a new `Array`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { takeLeft } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(takeLeft(2)([1, 2, 3]), [1, 2])\n *\n * @category combinators\n * @since 2.0.0\n */\n\nvar takeLeft = function takeLeft(n) {\n  return function (as) {\n    return exports.isOutOfBound(n, as) ? exports.copy(as) : as.slice(0, n);\n  };\n};\n\nexports.takeLeft = takeLeft;\n/**\n * Keep only a max number of elements from the end of an `Array`, creating a new `Array`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { takeRight } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(takeRight(2)([1, 2, 3, 4, 5]), [4, 5])\n *\n * @category combinators\n * @since 2.0.0\n */\n\nvar takeRight = function takeRight(n) {\n  return function (as) {\n    return exports.isOutOfBound(n, as) ? exports.copy(as) : n === 0 ? [] : as.slice(-n);\n  };\n};\n\nexports.takeRight = takeRight;\n\nfunction takeLeftWhile(predicate) {\n  return function (as) {\n    var out = [];\n\n    for (var _i = 0, as_1 = as; _i < as_1.length; _i++) {\n      var a = as_1[_i];\n\n      if (!predicate(a)) {\n        break;\n      }\n\n      out.push(a);\n    }\n\n    return out;\n  };\n}\n\nexports.takeLeftWhile = takeLeftWhile;\n\nvar spanLeftIndex = function spanLeftIndex(as, predicate) {\n  var l = as.length;\n  var i = 0;\n\n  for (; i < l; i++) {\n    if (!predicate(as[i])) {\n      break;\n    }\n  }\n\n  return i;\n};\n\nfunction spanLeft(predicate) {\n  return function (as) {\n    var _a = exports.splitAt(spanLeftIndex(as, predicate))(as),\n        init = _a[0],\n        rest = _a[1];\n\n    return {\n      init: init,\n      rest: rest\n    };\n  };\n}\n\nexports.spanLeft = spanLeft;\n/**\n * Drop a max number of elements from the start of an `Array`, creating a new `Array`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { dropLeft } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(dropLeft(2)([1, 2, 3]), [3])\n *\n * @category combinators\n * @since 2.0.0\n */\n\nvar dropLeft = function dropLeft(n) {\n  return function (as) {\n    return n <= 0 || exports.isEmpty(as) ? exports.copy(as) : n >= as.length ? [] : as.slice(n, as.length);\n  };\n};\n\nexports.dropLeft = dropLeft;\n/**\n * Drop a max number of elements from the end of an `Array`, creating a new `Array`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { dropRight } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(dropRight(2)([1, 2, 3, 4, 5]), [1, 2, 3])\n *\n * @category combinators\n * @since 2.0.0\n */\n\nvar dropRight = function dropRight(n) {\n  return function (as) {\n    return n <= 0 || exports.isEmpty(as) ? exports.copy(as) : n >= as.length ? [] : as.slice(0, as.length - n);\n  };\n};\n\nexports.dropRight = dropRight;\n/**\n * Remove the longest initial subarray for which all element satisfy the specified predicate, creating a new array\n *\n * @example\n * import { dropLeftWhile } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(dropLeftWhile((n: number) => n % 2 === 1)([1, 3, 2, 4, 5]), [2, 4, 5])\n *\n * @category combinators\n * @since 2.0.0\n */\n\nvar dropLeftWhile = function dropLeftWhile(predicate) {\n  return function (as) {\n    return as.slice(spanLeftIndex(as, predicate));\n  };\n};\n\nexports.dropLeftWhile = dropLeftWhile;\n/**\n * Find the first index for which a predicate holds\n *\n * @example\n * import { findIndex } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([1, 2, 3]), some(1))\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([]), none)\n *\n * @since 2.0.0\n */\n\nexports.findIndex = RA.findIndex;\n\nfunction findFirst(predicate) {\n  return RA.findFirst(predicate);\n}\n\nexports.findFirst = findFirst;\n/**\n * Find the first element returned by an option based selector function\n *\n * @example\n * import { findFirstMap } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   readonly name: string\n *   readonly age?: number\n * }\n *\n * const persons: Array<Person> = [{ name: 'John' }, { name: 'Mary', age: 45 }, { name: 'Joey', age: 28 }]\n *\n * // returns the name of the first person that has an age\n * assert.deepStrictEqual(findFirstMap((p: Person) => (p.age === undefined ? none : some(p.name)))(persons), some('Mary'))\n *\n * @category destructors\n * @since 2.0.0\n */\n\nexports.findFirstMap = RA.findFirstMap;\n\nfunction findLast(predicate) {\n  return RA.findLast(predicate);\n}\n\nexports.findLast = findLast;\n/**\n * Find the last element returned by an option based selector function\n *\n * @example\n * import { findLastMap } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   readonly name: string\n *   readonly age?: number\n * }\n *\n * const persons: Array<Person> = [{ name: 'John' }, { name: 'Mary', age: 45 }, { name: 'Joey', age: 28 }]\n *\n * // returns the name of the last person that has an age\n * assert.deepStrictEqual(findLastMap((p: Person) => (p.age === undefined ? none : some(p.name)))(persons), some('Joey'))\n *\n * @category destructors\n * @since 2.0.0\n */\n\nexports.findLastMap = RA.findLastMap;\n/**\n * Returns the index of the last element of the list which matches the predicate\n *\n * @example\n * import { findLastIndex } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface X {\n *   readonly a: number\n *   readonly b: number\n * }\n * const xs: Array<X> = [{ a: 1, b: 0 }, { a: 1, b: 1 }]\n * assert.deepStrictEqual(findLastIndex((x: { readonly a: number }) => x.a === 1)(xs), some(1))\n * assert.deepStrictEqual(findLastIndex((x: { readonly a: number }) => x.a === 4)(xs), none)\n *\n *\n * @since 2.0.0\n */\n\nexports.findLastIndex = RA.findLastIndex;\n/**\n * @category combinators\n * @since 2.0.0\n */\n\nvar copy = function copy(as) {\n  return as.slice();\n};\n\nexports.copy = copy;\n/**\n * Insert an element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { insertAt } from 'fp-ts/Array'\n * import { some } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(insertAt(2, 5)([1, 2, 3, 4]), some([1, 2, 5, 3, 4]))\n *\n * @since 2.0.0\n */\n\nvar insertAt = function insertAt(i, a) {\n  return function (as) {\n    return i < 0 || i > as.length ? O.none : O.some(exports.unsafeInsertAt(i, a, as));\n  };\n};\n\nexports.insertAt = insertAt;\n/**\n * Change the element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { updateAt } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(updateAt(1, 1)([1, 2, 3]), some([1, 1, 3]))\n * assert.deepStrictEqual(updateAt(1, 1)([]), none)\n *\n * @since 2.0.0\n */\n\nvar updateAt = function updateAt(i, a) {\n  return exports.modifyAt(i, function () {\n    return a;\n  });\n};\n\nexports.updateAt = updateAt;\n/**\n * Delete the element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { deleteAt } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(deleteAt(0)([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(deleteAt(1)([]), none)\n *\n * @since 2.0.0\n */\n\nvar deleteAt = function deleteAt(i) {\n  return function (as) {\n    return exports.isOutOfBound(i, as) ? O.none : O.some(exports.unsafeDeleteAt(i, as));\n  };\n};\n\nexports.deleteAt = deleteAt;\n/**\n * Apply a function to the element at the specified index, creating a new array, or returning `None` if the index is out\n * of bounds\n *\n * @example\n * import { modifyAt } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * const double = (x: number): number => x * 2\n * assert.deepStrictEqual(modifyAt(1, double)([1, 2, 3]), some([1, 4, 3]))\n * assert.deepStrictEqual(modifyAt(1, double)([]), none)\n *\n * @since 2.0.0\n */\n\nvar modifyAt = function modifyAt(i, f) {\n  return function (as) {\n    return exports.isOutOfBound(i, as) ? O.none : O.some(exports.unsafeUpdateAt(i, f(as[i]), as));\n  };\n};\n\nexports.modifyAt = modifyAt;\n/**\n * Reverse an array, creating a new array\n *\n * @example\n * import { reverse } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(reverse([1, 2, 3]), [3, 2, 1])\n *\n * @category combinators\n * @since 2.0.0\n */\n\nvar reverse = function reverse(as) {\n  return exports.isEmpty(as) ? [] : as.slice().reverse();\n};\n\nexports.reverse = reverse;\n/**\n * Extracts from an array of `Either` all the `Right` elements. All the `Right` elements are extracted in order\n *\n * @example\n * import { rights } from 'fp-ts/Array'\n * import { right, left } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(rights([right(1), left('foo'), right(2)]), [1, 2])\n *\n * @category combinators\n * @since 2.0.0\n */\n\nvar rights = function rights(as) {\n  var r = [];\n\n  for (var i = 0; i < as.length; i++) {\n    var a = as[i];\n\n    if (a._tag === 'Right') {\n      r.push(a.right);\n    }\n  }\n\n  return r;\n};\n\nexports.rights = rights;\n/**\n * Extracts from an array of `Either` all the `Left` elements. All the `Left` elements are extracted in order\n *\n * @example\n * import { lefts } from 'fp-ts/Array'\n * import { left, right } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(lefts([right(1), left('foo'), right(2)]), ['foo'])\n *\n * @category combinators\n * @since 2.0.0\n */\n\nvar lefts = function lefts(as) {\n  var r = [];\n\n  for (var i = 0; i < as.length; i++) {\n    var a = as[i];\n\n    if (a._tag === 'Left') {\n      r.push(a.left);\n    }\n  }\n\n  return r;\n};\n\nexports.lefts = lefts;\n/**\n * Sort the elements of an array in increasing order, creating a new array\n *\n * @example\n * import { sort } from 'fp-ts/Array'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(sort(N.Ord)([3, 2, 1]), [1, 2, 3])\n *\n * @category combinators\n * @since 2.0.0\n */\n\nvar sort = function sort(O) {\n  return function (as) {\n    return as.length <= 1 ? exports.copy(as) : as.slice().sort(O.compare);\n  };\n};\n\nexports.sort = sort;\n/**\n * Apply a function to pairs of elements at the same index in two arrays, collecting the results in a new array. If one\n * input array is short, excess elements of the longer array are discarded.\n *\n * @example\n * import { zipWith } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(zipWith([1, 2, 3], ['a', 'b', 'c', 'd'], (n, s) => s + n), ['a1', 'b2', 'c3'])\n *\n * @category combinators\n * @since 2.0.0\n */\n\nvar zipWith = function zipWith(fa, fb, f) {\n  var fc = [];\n  var len = Math.min(fa.length, fb.length);\n\n  for (var i = 0; i < len; i++) {\n    fc[i] = f(fa[i], fb[i]);\n  }\n\n  return fc;\n};\n\nexports.zipWith = zipWith;\n\nfunction zip(as, bs) {\n  if (bs === undefined) {\n    return function (bs) {\n      return zip(bs, as);\n    };\n  }\n\n  return exports.zipWith(as, bs, function (a, b) {\n    return [a, b];\n  });\n}\n\nexports.zip = zip;\n/**\n * The function is reverse of `zip`. Takes an array of pairs and return two corresponding arrays\n *\n * @example\n * import { unzip } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(unzip([[1, 'a'], [2, 'b'], [3, 'c']]), [[1, 2, 3], ['a', 'b', 'c']])\n *\n * @since 2.0.0\n */\n\nvar unzip = function unzip(as) {\n  var fa = [];\n  var fb = [];\n\n  for (var i = 0; i < as.length; i++) {\n    fa[i] = as[i][0];\n    fb[i] = as[i][1];\n  }\n\n  return [fa, fb];\n};\n\nexports.unzip = unzip;\n/**\n * Prepend an element to every member of an array\n *\n * @example\n * import { prependAll } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(prependAll(9)([1, 2, 3, 4]), [9, 1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.10.0\n */\n\nvar prependAll = function prependAll(middle) {\n  var f = NEA.prependAll(middle);\n  return function (as) {\n    return exports.isNonEmpty(as) ? f(as) : [];\n  };\n};\n\nexports.prependAll = prependAll;\n/**\n * Places an element in between members of an array\n *\n * @example\n * import { intersperse } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(intersperse(9)([1, 2, 3, 4]), [1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.9.0\n */\n\nvar intersperse = function intersperse(middle) {\n  var f = NEA.intersperse(middle);\n  return function (as) {\n    return exports.isNonEmpty(as) ? f(as) : exports.copy(as);\n  };\n};\n\nexports.intersperse = intersperse;\n/**\n * Rotate a `Array` by `n` steps.\n *\n * @example\n * import { rotate } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(rotate(2)([1, 2, 3, 4, 5]), [4, 5, 1, 2, 3])\n *\n * @category combinators\n * @since 2.0.0\n */\n\nvar rotate = function rotate(n) {\n  var f = NEA.rotate(n);\n  return function (as) {\n    return exports.isNonEmpty(as) ? f(as) : exports.copy(as);\n  };\n};\n\nexports.rotate = rotate; // TODO: remove non-curried overloading in v3\n\n/**\n * Test if a value is a member of an array. Takes a `Eq<A>` as a single\n * argument which returns the function to use to search for a value of type `A` in\n * an array of type `Array<A>`.\n *\n * @example\n * import { elem } from 'fp-ts/Array'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(pipe([1, 2, 3], elem(N.Eq)(2)), true)\n * assert.strictEqual(pipe([1, 2, 3], elem(N.Eq)(0)), false)\n *\n * @since 2.0.0\n */\n\nexports.elem = RA.elem;\n/**\n * Remove duplicates from an array, keeping the first occurrence of an element.\n *\n * @example\n * import { uniq } from 'fp-ts/Array'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(uniq(N.Eq)([1, 2, 1]), [1, 2])\n *\n * @category combinators\n * @since 2.0.0\n */\n\nvar uniq = function uniq(E) {\n  var f = NEA.uniq(E);\n  return function (as) {\n    return exports.isNonEmpty(as) ? f(as) : exports.copy(as);\n  };\n};\n\nexports.uniq = uniq;\n/**\n * Sort the elements of an array in increasing order, where elements are compared using first `ords[0]`, then `ords[1]`,\n * etc...\n *\n * @example\n * import { sortBy } from 'fp-ts/Array'\n * import { contramap } from 'fp-ts/Ord'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * interface Person {\n *   readonly name: string\n *   readonly age: number\n * }\n * const byName = pipe(S.Ord, contramap((p: Person) => p.name))\n * const byAge = pipe(N.Ord, contramap((p: Person) => p.age))\n *\n * const sortByNameByAge = sortBy([byName, byAge])\n *\n * const persons = [{ name: 'a', age: 1 }, { name: 'b', age: 3 }, { name: 'c', age: 2 }, { name: 'b', age: 2 }]\n * assert.deepStrictEqual(sortByNameByAge(persons), [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 2 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 }\n * ])\n *\n * @category combinators\n * @since 2.0.0\n */\n\nvar sortBy = function sortBy(ords) {\n  var f = NEA.sortBy(ords);\n  return function (as) {\n    return exports.isNonEmpty(as) ? f(as) : exports.copy(as);\n  };\n};\n\nexports.sortBy = sortBy;\n/**\n * A useful recursion pattern for processing an array to produce a new array, often used for \"chopping\" up the input\n * array. Typically chop is called with some function that will consume an initial prefix of the array and produce a\n * value and the rest of the array.\n *\n * @example\n * import { Eq } from 'fp-ts/Eq'\n * import * as A from 'fp-ts/Array'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * const group = <A>(S: Eq<A>): ((as: Array<A>) => Array<Array<A>>) => {\n *   return A.chop(as => {\n *     const { init, rest } = pipe(as, A.spanLeft((a: A) => S.equals(a, as[0])))\n *     return [init, rest]\n *   })\n * }\n * assert.deepStrictEqual(group(N.Eq)([1, 1, 2, 3, 3, 4]), [[1, 1], [2], [3, 3], [4]])\n *\n * @category combinators\n * @since 2.0.0\n */\n\nvar chop = function chop(f) {\n  var g = NEA.chop(f);\n  return function (as) {\n    return exports.isNonEmpty(as) ? g(as) : [];\n  };\n};\n\nexports.chop = chop;\n/**\n * Splits an `Array` into two pieces, the first piece has max `n` elements.\n *\n * @example\n * import { splitAt } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(splitAt(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4, 5]])\n *\n * @category combinators\n * @since 2.0.0\n */\n\nvar splitAt = function splitAt(n) {\n  return function (as) {\n    return n >= 1 && exports.isNonEmpty(as) ? NEA.splitAt(n)(as) : exports.isEmpty(as) ? [exports.copy(as), []] : [[], exports.copy(as)];\n  };\n};\n\nexports.splitAt = splitAt;\n/**\n * Splits an array into length-`n` pieces. The last piece will be shorter if `n` does not evenly divide the length of\n * the array. Note that `chunksOf(n)([])` is `[]`, not `[[]]`. This is intentional, and is consistent with a recursive\n * definition of `chunksOf`; it satisfies the property that\n *\n * ```ts\n * chunksOf(n)(xs).concat(chunksOf(n)(ys)) == chunksOf(n)(xs.concat(ys)))\n * ```\n *\n * whenever `n` evenly divides the length of `xs`.\n *\n * @example\n * import { chunksOf } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(chunksOf(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4], [5]])\n *\n * @category combinators\n * @since 2.0.0\n */\n\nvar chunksOf = function chunksOf(n) {\n  var f = NEA.chunksOf(n);\n  return function (as) {\n    return exports.isNonEmpty(as) ? f(as) : [];\n  };\n};\n\nexports.chunksOf = chunksOf;\n\nfunction comprehension(input, f, g) {\n  if (g === void 0) {\n    g = function g() {\n      return true;\n    };\n  }\n\n  var go = function go(scope, input) {\n    return exports.isNonEmpty(input) ? function_1.pipe(NEA.head(input), exports.chain(function (x) {\n      return go(function_1.pipe(scope, exports.append(x)), NEA.tail(input));\n    })) : g.apply(void 0, scope) ? [f.apply(void 0, scope)] : [];\n  };\n\n  return go([], input);\n}\n\nexports.comprehension = comprehension;\n\nfunction union(E) {\n  var unionE = NEA.union(E);\n  return function (first, second) {\n    if (second === undefined) {\n      var unionE_1 = union(E);\n      return function (ys) {\n        return unionE_1(ys, first);\n      };\n    }\n\n    return exports.isNonEmpty(first) && exports.isNonEmpty(second) ? unionE(first, second) : exports.isNonEmpty(first) ? exports.copy(first) : exports.copy(second);\n  };\n}\n\nexports.union = union;\n\nfunction intersection(E) {\n  var elemE = exports.elem(E);\n  return function (xs, ys) {\n    if (ys === undefined) {\n      var intersectionE_1 = intersection(E);\n      return function (ys) {\n        return intersectionE_1(ys, xs);\n      };\n    }\n\n    return xs.filter(function (a) {\n      return elemE(a, ys);\n    });\n  };\n}\n\nexports.intersection = intersection;\n\nfunction difference(E) {\n  var elemE = exports.elem(E);\n  return function (xs, ys) {\n    if (ys === undefined) {\n      var differenceE_1 = difference(E);\n      return function (ys) {\n        return differenceE_1(ys, xs);\n      };\n    }\n\n    return xs.filter(function (a) {\n      return !elemE(a, ys);\n    });\n  };\n}\n\nexports.difference = difference; // -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\n\nvar _map = function _map(fa, f) {\n  return function_1.pipe(fa, exports.map(f));\n};\n/* istanbul ignore next */\n\n\nvar _mapWithIndex = function _mapWithIndex(fa, f) {\n  return function_1.pipe(fa, exports.mapWithIndex(f));\n};\n\nvar _ap = function _ap(fab, fa) {\n  return function_1.pipe(fab, exports.ap(fa));\n};\n\nvar _chain = function _chain(ma, f) {\n  return function_1.pipe(ma, exports.chain(f));\n};\n/* istanbul ignore next */\n\n\nvar _filter = function _filter(fa, predicate) {\n  return function_1.pipe(fa, exports.filter(predicate));\n};\n/* istanbul ignore next */\n\n\nvar _filterMap = function _filterMap(fa, f) {\n  return function_1.pipe(fa, exports.filterMap(f));\n};\n/* istanbul ignore next */\n\n\nvar _partition = function _partition(fa, predicate) {\n  return function_1.pipe(fa, exports.partition(predicate));\n};\n/* istanbul ignore next */\n\n\nvar _partitionMap = function _partitionMap(fa, f) {\n  return function_1.pipe(fa, exports.partitionMap(f));\n};\n/* istanbul ignore next */\n\n\nvar _partitionWithIndex = function _partitionWithIndex(fa, predicateWithIndex) {\n  return function_1.pipe(fa, exports.partitionWithIndex(predicateWithIndex));\n};\n/* istanbul ignore next */\n\n\nvar _partitionMapWithIndex = function _partitionMapWithIndex(fa, f) {\n  return function_1.pipe(fa, exports.partitionMapWithIndex(f));\n};\n/* istanbul ignore next */\n\n\nvar _alt = function _alt(fa, that) {\n  return function_1.pipe(fa, exports.alt(that));\n};\n\nvar _reduce = function _reduce(fa, b, f) {\n  return function_1.pipe(fa, exports.reduce(b, f));\n};\n/* istanbul ignore next */\n\n\nvar _foldMap = function _foldMap(M) {\n  var foldMapM = exports.foldMap(M);\n  return function (fa, f) {\n    return function_1.pipe(fa, foldMapM(f));\n  };\n};\n/* istanbul ignore next */\n\n\nvar _reduceRight = function _reduceRight(fa, b, f) {\n  return function_1.pipe(fa, exports.reduceRight(b, f));\n};\n/* istanbul ignore next */\n\n\nvar _reduceWithIndex = function _reduceWithIndex(fa, b, f) {\n  return function_1.pipe(fa, exports.reduceWithIndex(b, f));\n};\n/* istanbul ignore next */\n\n\nvar _foldMapWithIndex = function _foldMapWithIndex(M) {\n  var foldMapWithIndexM = exports.foldMapWithIndex(M);\n  return function (fa, f) {\n    return function_1.pipe(fa, foldMapWithIndexM(f));\n  };\n};\n/* istanbul ignore next */\n\n\nvar _reduceRightWithIndex = function _reduceRightWithIndex(fa, b, f) {\n  return function_1.pipe(fa, exports.reduceRightWithIndex(b, f));\n};\n/* istanbul ignore next */\n\n\nvar _filterMapWithIndex = function _filterMapWithIndex(fa, f) {\n  return function_1.pipe(fa, exports.filterMapWithIndex(f));\n};\n/* istanbul ignore next */\n\n\nvar _filterWithIndex = function _filterWithIndex(fa, predicateWithIndex) {\n  return function_1.pipe(fa, exports.filterWithIndex(predicateWithIndex));\n};\n/* istanbul ignore next */\n\n\nvar _extend = function _extend(fa, f) {\n  return function_1.pipe(fa, exports.extend(f));\n};\n/* istanbul ignore next */\n\n\nvar _traverse = function _traverse(F) {\n  var traverseF = exports.traverse(F);\n  return function (ta, f) {\n    return function_1.pipe(ta, traverseF(f));\n  };\n};\n/* istanbul ignore next */\n\n\nvar _traverseWithIndex = function _traverseWithIndex(F) {\n  var traverseWithIndexF = exports.traverseWithIndex(F);\n  return function (ta, f) {\n    return function_1.pipe(ta, traverseWithIndexF(f));\n  };\n};\n/* istanbul ignore next */\n\n\nvar _wither = function _wither(F) {\n  var witherF = exports.wither(F);\n  return function (fa, f) {\n    return function_1.pipe(fa, witherF(f));\n  };\n};\n/* istanbul ignore next */\n\n\nvar _wilt = function _wilt(F) {\n  var wiltF = exports.wilt(F);\n  return function (fa, f) {\n    return function_1.pipe(fa, wiltF(f));\n  };\n}; // -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n\n/**\n * @category Pointed\n * @since 2.0.0\n */\n\n\nexports.of = NEA.of;\n/**\n * @category Alternative\n * @since 2.7.0\n */\n\nvar zero = function zero() {\n  return [];\n};\n\nexports.zero = zero;\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.0.0\n */\n\nvar map = function map(f) {\n  return function (fa) {\n    return fa.map(function (a) {\n      return f(a);\n    });\n  };\n};\n\nexports.map = map;\n/**\n * Apply a function to an argument under a type constructor.\n *\n * @category Apply\n * @since 2.0.0\n */\n\nvar ap = function ap(fa) {\n  return exports.chain(function (f) {\n    return function_1.pipe(fa, exports.map(f));\n  });\n};\n\nexports.ap = ap;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category Monad\n * @since 2.0.0\n */\n\nvar chain = function chain(f) {\n  return function (ma) {\n    return function_1.pipe(ma, exports.chainWithIndex(function (_, a) {\n      return f(a);\n    }));\n  };\n};\n\nexports.chain = chain;\n/**\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexports.flatten = /*#__PURE__*/exports.chain(function_1.identity);\n/**\n * @category FunctorWithIndex\n * @since 2.0.0\n */\n\nvar mapWithIndex = function mapWithIndex(f) {\n  return function (fa) {\n    return fa.map(function (a, i) {\n      return f(i, a);\n    });\n  };\n};\n\nexports.mapWithIndex = mapWithIndex;\n/**\n * @category FilterableWithIndex\n * @since 2.0.0\n */\n\nvar filterMapWithIndex = function filterMapWithIndex(f) {\n  return function (fa) {\n    var out = [];\n\n    for (var i = 0; i < fa.length; i++) {\n      var optionB = f(i, fa[i]);\n\n      if (O.isSome(optionB)) {\n        out.push(optionB.value);\n      }\n    }\n\n    return out;\n  };\n};\n\nexports.filterMapWithIndex = filterMapWithIndex;\n/**\n * @category Filterable\n * @since 2.0.0\n */\n\nvar filterMap = function filterMap(f) {\n  return exports.filterMapWithIndex(function (_, a) {\n    return f(a);\n  });\n};\n\nexports.filterMap = filterMap;\n/**\n * @category Compactable\n * @since 2.0.0\n */\n\nexports.compact = /*#__PURE__*/exports.filterMap(function_1.identity);\n/**\n * @category Compactable\n * @since 2.0.0\n */\n\nvar separate = function separate(fa) {\n  var left = [];\n  var right = [];\n\n  for (var _i = 0, fa_1 = fa; _i < fa_1.length; _i++) {\n    var e = fa_1[_i];\n\n    if (e._tag === 'Left') {\n      left.push(e.left);\n    } else {\n      right.push(e.right);\n    }\n  }\n\n  return Separated_1.separated(left, right);\n};\n\nexports.separate = separate;\n/**\n * @category Filterable\n * @since 2.0.0\n */\n\nvar filter = function filter(predicate) {\n  return function (fa) {\n    return fa.filter(predicate);\n  };\n};\n\nexports.filter = filter;\n/**\n * @category Filterable\n * @since 2.0.0\n */\n\nvar partition = function partition(predicate) {\n  return exports.partitionWithIndex(function (_, a) {\n    return predicate(a);\n  });\n};\n\nexports.partition = partition;\n/**\n * @category FilterableWithIndex\n * @since 2.0.0\n */\n\nvar partitionWithIndex = function partitionWithIndex(predicateWithIndex) {\n  return function (fa) {\n    var left = [];\n    var right = [];\n\n    for (var i = 0; i < fa.length; i++) {\n      var a = fa[i];\n\n      if (predicateWithIndex(i, a)) {\n        right.push(a);\n      } else {\n        left.push(a);\n      }\n    }\n\n    return Separated_1.separated(left, right);\n  };\n};\n\nexports.partitionWithIndex = partitionWithIndex;\n/**\n * @category Filterable\n * @since 2.0.0\n */\n\nvar partitionMap = function partitionMap(f) {\n  return exports.partitionMapWithIndex(function (_, a) {\n    return f(a);\n  });\n};\n\nexports.partitionMap = partitionMap;\n/**\n * @category FilterableWithIndex\n * @since 2.0.0\n */\n\nvar partitionMapWithIndex = function partitionMapWithIndex(f) {\n  return function (fa) {\n    var left = [];\n    var right = [];\n\n    for (var i = 0; i < fa.length; i++) {\n      var e = f(i, fa[i]);\n\n      if (e._tag === 'Left') {\n        left.push(e.left);\n      } else {\n        right.push(e.right);\n      }\n    }\n\n    return Separated_1.separated(left, right);\n  };\n};\n\nexports.partitionMapWithIndex = partitionMapWithIndex;\n/**\n * Less strict version of [`alt`](#alt).\n *\n * @category Alt\n * @since 2.9.0\n */\n\nvar altW = function altW(that) {\n  return function (fa) {\n    return fa.concat(that());\n  };\n};\n\nexports.altW = altW;\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * @category Alt\n * @since 2.0.0\n */\n\nexports.alt = exports.altW;\n/**\n * @category FilterableWithIndex\n * @since 2.0.0\n */\n\nvar filterWithIndex = function filterWithIndex(predicateWithIndex) {\n  return function (fa) {\n    return fa.filter(function (a, i) {\n      return predicateWithIndex(i, a);\n    });\n  };\n};\n\nexports.filterWithIndex = filterWithIndex;\n/**\n * @category Extend\n * @since 2.0.0\n */\n\nvar extend = function extend(f) {\n  return function (wa) {\n    return wa.map(function (_, i) {\n      return f(wa.slice(i));\n    });\n  };\n};\n\nexports.extend = extend;\n/**\n * Derivable from `Extend`.\n *\n * @category combinators\n * @since 2.0.0\n */\n\nexports.duplicate = /*#__PURE__*/exports.extend(function_1.identity);\n/**\n * @category Foldable\n * @since 2.0.0\n */\n\nexports.foldMap = RA.foldMap;\n/**\n * @category FoldableWithIndex\n * @since 2.0.0\n */\n\nexports.foldMapWithIndex = RA.foldMapWithIndex;\n/**\n * @category Foldable\n * @since 2.0.0\n */\n\nexports.reduce = RA.reduce;\n/**\n * @category FoldableWithIndex\n * @since 2.0.0\n */\n\nexports.reduceWithIndex = RA.reduceWithIndex;\n/**\n * @category Foldable\n * @since 2.0.0\n */\n\nexports.reduceRight = RA.reduceRight;\n/**\n * @category FoldableWithIndex\n * @since 2.0.0\n */\n\nexports.reduceRightWithIndex = RA.reduceRightWithIndex;\n/**\n * @category Traversable\n * @since 2.6.3\n */\n\nvar traverse = function traverse(F) {\n  var traverseWithIndexF = exports.traverseWithIndex(F);\n  return function (f) {\n    return traverseWithIndexF(function (_, a) {\n      return f(a);\n    });\n  };\n};\n\nexports.traverse = traverse;\n/**\n * @category Traversable\n * @since 2.6.3\n */\n\nvar sequence = function sequence(F) {\n  return function (ta) {\n    return _reduce(ta, F.of(exports.zero()), function (fas, fa) {\n      return F.ap(F.map(fas, function (as) {\n        return function (a) {\n          return function_1.pipe(as, exports.append(a));\n        };\n      }), fa);\n    });\n  };\n};\n\nexports.sequence = sequence;\n/**\n * @category TraversableWithIndex\n * @since 2.6.3\n */\n\nvar traverseWithIndex = function traverseWithIndex(F) {\n  return function (f) {\n    return exports.reduceWithIndex(F.of(exports.zero()), function (i, fbs, a) {\n      return F.ap(F.map(fbs, function (bs) {\n        return function (b) {\n          return function_1.pipe(bs, exports.append(b));\n        };\n      }), f(i, a));\n    });\n  };\n};\n\nexports.traverseWithIndex = traverseWithIndex;\n/**\n * @category Witherable\n * @since 2.6.5\n */\n\nvar wither = function wither(F) {\n  var traverseF = exports.traverse(F);\n  return function (f) {\n    return function (fa) {\n      return F.map(function_1.pipe(fa, traverseF(f)), exports.compact);\n    };\n  };\n};\n\nexports.wither = wither;\n/**\n * @category Witherable\n * @since 2.6.5\n */\n\nvar wilt = function wilt(F) {\n  var traverseF = exports.traverse(F);\n  return function (f) {\n    return function (fa) {\n      return F.map(function_1.pipe(fa, traverseF(f)), exports.separate);\n    };\n  };\n};\n\nexports.wilt = wilt;\n/**\n * @category Unfoldable\n * @since 2.6.6\n */\n\nvar unfold = function unfold(b, f) {\n  var out = [];\n  var bb = b;\n\n  while (true) {\n    var mt = f(bb);\n\n    if (O.isSome(mt)) {\n      var _a = mt.value,\n          a = _a[0],\n          b_1 = _a[1];\n      out.push(a);\n      bb = b_1;\n    } else {\n      break;\n    }\n  }\n\n  return out;\n};\n\nexports.unfold = unfold; // -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n\n/**\n * @category instances\n * @since 2.0.0\n */\n\nexports.URI = 'Array';\n/**\n * @category instances\n * @since 2.0.0\n */\n\nexports.getShow = RA.getShow;\n/**\n * @category instances\n * @since 2.10.0\n */\n\nvar getSemigroup = function getSemigroup() {\n  return {\n    concat: function concat(first, second) {\n      return first.concat(second);\n    }\n  };\n};\n\nexports.getSemigroup = getSemigroup;\n/**\n * Returns a `Monoid` for `Array<A>`\n *\n * @example\n * import { getMonoid } from 'fp-ts/Array'\n *\n * const M = getMonoid<number>()\n * assert.deepStrictEqual(M.concat([1, 2], [3, 4]), [1, 2, 3, 4])\n *\n * @category instances\n * @since 2.0.0\n */\n\nvar getMonoid = function getMonoid() {\n  return {\n    concat: exports.getSemigroup().concat,\n    empty: []\n  };\n};\n\nexports.getMonoid = getMonoid;\n/**\n * Derives an `Eq` over the `Array` of a given element type from the `Eq` of that type. The derived `Eq` defines two\n * arrays as equal if all elements of both arrays are compared equal pairwise with the given `E`. In case of arrays of\n * different lengths, the result is non equality.\n *\n * @example\n * import * as S from 'fp-ts/string'\n * import { getEq } from 'fp-ts/Array'\n *\n * const E = getEq(S.Eq)\n * assert.strictEqual(E.equals(['a', 'b'], ['a', 'b']), true)\n * assert.strictEqual(E.equals(['a'], []), false)\n *\n * @category instances\n * @since 2.0.0\n */\n\nexports.getEq = RA.getEq;\n/**\n * Derives an `Ord` over the `Array` of a given element type from the `Ord` of that type. The ordering between two such\n * arrays is equal to: the first non equal comparison of each arrays elements taken pairwise in increasing order, in\n * case of equality over all the pairwise elements; the longest array is considered the greatest, if both arrays have\n * the same length, the result is equality.\n *\n * @example\n * import { getOrd } from 'fp-ts/Array'\n * import * as S from 'fp-ts/string'\n *\n * const O = getOrd(S.Ord)\n * assert.strictEqual(O.compare(['b'], ['a']), 1)\n * assert.strictEqual(O.compare(['a'], ['a']), 0)\n * assert.strictEqual(O.compare(['a'], ['b']), -1)\n *\n * @category instances\n * @since 2.0.0\n */\n\nexports.getOrd = RA.getOrd;\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Functor = {\n  URI: exports.URI,\n  map: _map\n};\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\n\nexports.flap =\n/*#_PURE_*/\nFunctor_1.flap(exports.Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\n\nexports.Pointed = {\n  URI: exports.URI,\n  of: exports.of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.FunctorWithIndex = {\n  URI: exports.URI,\n  map: _map,\n  mapWithIndex: _mapWithIndex\n};\n/**\n * @category instances\n * @since 2.10.0\n */\n\nexports.Apply = {\n  URI: exports.URI,\n  map: _map,\n  ap: _ap\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexports.apFirst = /*#__PURE__*/Apply_1.apFirst(exports.Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexports.apSecond = /*#__PURE__*/Apply_1.apSecond(exports.Apply);\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Applicative = {\n  URI: exports.URI,\n  map: _map,\n  ap: _ap,\n  of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\n\nexports.Chain = {\n  URI: exports.URI,\n  map: _map,\n  ap: _ap,\n  chain: _chain\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.0.0\n */\n\nexports.chainFirst = /*#__PURE__*/Chain_1.chainFirst(exports.Chain);\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Monad = {\n  URI: exports.URI,\n  map: _map,\n  ap: _ap,\n  of: exports.of,\n  chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Unfoldable = {\n  URI: exports.URI,\n  unfold: exports.unfold\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Alt = {\n  URI: exports.URI,\n  map: _map,\n  alt: _alt\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Alternative = {\n  URI: exports.URI,\n  map: _map,\n  ap: _ap,\n  of: exports.of,\n  alt: _alt,\n  zero: exports.zero\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Extend = {\n  URI: exports.URI,\n  map: _map,\n  extend: _extend\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Compactable = {\n  URI: exports.URI,\n  compact: exports.compact,\n  separate: exports.separate\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Filterable = {\n  URI: exports.URI,\n  map: _map,\n  compact: exports.compact,\n  separate: exports.separate,\n  filter: _filter,\n  filterMap: _filterMap,\n  partition: _partition,\n  partitionMap: _partitionMap\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.FilterableWithIndex = {\n  URI: exports.URI,\n  map: _map,\n  mapWithIndex: _mapWithIndex,\n  compact: exports.compact,\n  separate: exports.separate,\n  filter: _filter,\n  filterMap: _filterMap,\n  partition: _partition,\n  partitionMap: _partitionMap,\n  partitionMapWithIndex: _partitionMapWithIndex,\n  partitionWithIndex: _partitionWithIndex,\n  filterMapWithIndex: _filterMapWithIndex,\n  filterWithIndex: _filterWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Foldable = {\n  URI: exports.URI,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.FoldableWithIndex = {\n  URI: exports.URI,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight,\n  reduceWithIndex: _reduceWithIndex,\n  foldMapWithIndex: _foldMapWithIndex,\n  reduceRightWithIndex: _reduceRightWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Traversable = {\n  URI: exports.URI,\n  map: _map,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight,\n  traverse: _traverse,\n  sequence: exports.sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.TraversableWithIndex = {\n  URI: exports.URI,\n  map: _map,\n  mapWithIndex: _mapWithIndex,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight,\n  reduceWithIndex: _reduceWithIndex,\n  foldMapWithIndex: _foldMapWithIndex,\n  reduceRightWithIndex: _reduceRightWithIndex,\n  traverse: _traverse,\n  sequence: exports.sequence,\n  traverseWithIndex: _traverseWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Witherable = {\n  URI: exports.URI,\n  map: _map,\n  compact: exports.compact,\n  separate: exports.separate,\n  filter: _filter,\n  filterMap: _filterMap,\n  partition: _partition,\n  partitionMap: _partitionMap,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight,\n  traverse: _traverse,\n  sequence: exports.sequence,\n  wither: _wither,\n  wilt: _wilt\n}; // -------------------------------------------------------------------------------------\n// unsafe\n// -------------------------------------------------------------------------------------\n\n/**\n * @category unsafe\n * @since 2.0.0\n */\n\nexports.unsafeInsertAt = NEA.unsafeInsertAt;\n/**\n * @category unsafe\n * @since 2.0.0\n */\n\nvar unsafeUpdateAt = function unsafeUpdateAt(i, a, as) {\n  return exports.isNonEmpty(as) ? NEA.unsafeUpdateAt(i, a, as) : [];\n};\n\nexports.unsafeUpdateAt = unsafeUpdateAt;\n/**\n * @category unsafe\n * @since 2.0.0\n */\n\nvar unsafeDeleteAt = function unsafeDeleteAt(i, as) {\n  var xs = as.slice();\n  xs.splice(i, 1);\n  return xs;\n};\n\nexports.unsafeDeleteAt = unsafeDeleteAt; // -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n\n/**\n * @since 2.9.0\n */\n\nexports.every = RA.every;\n/**\n * @since 2.9.0\n */\n\nvar some = function some(predicate) {\n  return function (as) {\n    return as.some(predicate);\n  };\n};\n\nexports.some = some; // -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n\n/**\n * @since 2.9.0\n */\n\nexports.Do = /*#__PURE__*/exports.of({});\n/**\n * @since 2.8.0\n */\n\nexports.bindTo = /*#__PURE__*/Functor_1.bindTo(exports.Functor);\n/**\n * @since 2.8.0\n */\n\nexports.bind = /*#__PURE__*/Chain_1.bind(exports.Chain); // -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n\n/**\n * @since 2.8.0\n */\n\nexports.apS = /*#__PURE__*/Apply_1.apS(exports.Apply); // -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n\n/**\n * Use a new `[]` instead.\n *\n * @since 2.0.0\n * @deprecated\n */\n\nexports.empty = [];\n/**\n * Use `prepend` instead.\n *\n * @category constructors\n * @since 2.0.0\n * @deprecated\n */\n// tslint:disable-next-line: deprecation\n\nexports.cons = NEA.cons;\n/**\n * Use `append` instead.\n *\n * @category constructors\n * @since 2.0.0\n * @deprecated\n */\n// tslint:disable-next-line: deprecation\n\nexports.snoc = NEA.snoc;\n/**\n * Use `prependAll` instead\n *\n * @category combinators\n * @since 2.9.0\n * @deprecated\n */\n\nexports.prependToAll = exports.prependAll;\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\n\nexports.array = {\n  URI: exports.URI,\n  compact: exports.compact,\n  separate: exports.separate,\n  map: _map,\n  ap: _ap,\n  of: exports.of,\n  chain: _chain,\n  filter: _filter,\n  filterMap: _filterMap,\n  partition: _partition,\n  partitionMap: _partitionMap,\n  mapWithIndex: _mapWithIndex,\n  partitionMapWithIndex: _partitionMapWithIndex,\n  partitionWithIndex: _partitionWithIndex,\n  filterMapWithIndex: _filterMapWithIndex,\n  filterWithIndex: _filterWithIndex,\n  alt: _alt,\n  zero: exports.zero,\n  unfold: exports.unfold,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight,\n  traverse: _traverse,\n  sequence: exports.sequence,\n  reduceWithIndex: _reduceWithIndex,\n  foldMapWithIndex: _foldMapWithIndex,\n  reduceRightWithIndex: _reduceRightWithIndex,\n  traverseWithIndex: _traverseWithIndex,\n  extend: _extend,\n  wither: _wither,\n  wilt: _wilt\n};","map":{"version":3,"sources":["/Users/frankenstein/projects/minter/node_modules/fp-ts/lib/Array.js"],"names":["__createBinding","Object","create","o","m","k","k2","undefined","defineProperty","enumerable","get","__setModuleDefault","v","value","__importStar","mod","__esModule","result","prototype","hasOwnProperty","call","exports","elem","rotate","intersperse","prependAll","unzip","zip","zipWith","sort","lefts","rights","reverse","modifyAt","deleteAt","updateAt","insertAt","copy","findLastIndex","findLastMap","findLast","findFirstMap","findFirst","findIndex","dropLeftWhile","dropRight","dropLeft","spanLeft","takeLeftWhile","takeRight","takeLeft","init","tail","last","head","lookup","isOutOfBound","size","isNonEmpty","isEmpty","scanRight","scanLeft","chainWithIndex","foldRight","matchRight","foldLeft","matchLeft","replicate","range","makeBy","append","prepend","flap","Functor","getOrd","getEq","getMonoid","getSemigroup","getShow","URI","unfold","wilt","wither","traverseWithIndex","sequence","traverse","reduceRightWithIndex","reduceRight","reduceWithIndex","reduce","foldMapWithIndex","foldMap","duplicate","extend","filterWithIndex","alt","altW","partitionMapWithIndex","partitionMap","partitionWithIndex","partition","filter","separate","compact","filterMap","filterMapWithIndex","mapWithIndex","flatten","chain","ap","map","zero","of","difference","intersection","union","comprehension","chunksOf","splitAt","chop","sortBy","uniq","array","prependToAll","snoc","cons","empty","apS","bind","bindTo","Do","some","every","unsafeDeleteAt","unsafeUpdateAt","unsafeInsertAt","Witherable","TraversableWithIndex","Traversable","FoldableWithIndex","Foldable","FilterableWithIndex","Filterable","Compactable","Extend","Alternative","Alt","Unfoldable","Monad","chainFirst","Chain","Applicative","apSecond","apFirst","Apply","FunctorWithIndex","Pointed","Apply_1","require","Chain_1","function_1","Functor_1","NEA","O","RA","Separated_1","n","f","start","end","i","a","onEmpty","onNonEmpty","as","out","length","push","apply","b","len","Array","none","slice","predicate","_i","as_1","spanLeftIndex","l","_a","rest","r","_tag","right","left","compare","fa","fb","fc","Math","min","bs","middle","E","ords","g","input","go","scope","pipe","x","unionE","first","second","unionE_1","ys","elemE","xs","intersectionE_1","differenceE_1","_map","_mapWithIndex","_ap","fab","_chain","ma","_filter","_filterMap","_partition","_partitionMap","_partitionWithIndex","predicateWithIndex","_partitionMapWithIndex","_alt","that","_reduce","_foldMap","M","foldMapM","_reduceRight","_reduceWithIndex","_foldMapWithIndex","foldMapWithIndexM","_reduceRightWithIndex","_filterMapWithIndex","_filterWithIndex","_extend","_traverse","F","traverseF","ta","_traverseWithIndex","traverseWithIndexF","_wither","witherF","_wilt","wiltF","_","identity","optionB","isSome","fa_1","e","separated","concat","wa","fas","fbs","bb","mt","b_1","splice"],"mappings":"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AhB,CAAV;AACAL,IAAAA,GAAG,CAACK,GAAD,CAAH,GAAWD,CAAX;;AACA,SAAK,IAAIT,CAAC,GAAGU,GAAG,GAAG,CAAnB,EAAsBV,CAAC,IAAI,CAA3B,EAA8BA,CAAC,EAA/B,EAAmC;AAC/BK,MAAAA,GAAG,CAACL,CAAD,CAAH,GAASH,CAAC,CAACO,EAAE,CAACJ,CAAD,CAAH,EAAQK,GAAG,CAACL,CAAC,GAAG,CAAL,CAAX,CAAV;AACH;;AACD,WAAOK,GAAP;AACH,GARiC;AAQ9B,CARJ;;AASA1J,OAAO,CAACuC,SAAR,GAAoBA,SAApB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAvC,OAAO,CAACsC,OAAR,GAAkByG,EAAE,CAACzG,OAArB;AACA;AACA;AACA;AACA;AACA;AACA;;AACAtC,OAAO,CAACqC,UAAR,GAAqBwG,GAAG,CAACxG,UAAzB;AACA;AACA;AACA;AACA;AACA;;AACA,IAAID,IAAI,GAAG,SAAPA,IAAO,CAAUqH,EAAV,EAAc;AAAE,SAAOA,EAAE,CAACE,MAAV;AAAmB,CAA9C;;AACA3J,OAAO,CAACoC,IAAR,GAAeA,IAAf;AACA;AACA;AACA;AACA;AACA;;AACApC,OAAO,CAACmC,YAAR,GAAuB0G,GAAG,CAAC1G,YAA3B,C,CACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAnC,OAAO,CAACkC,MAAR,GAAiB6G,EAAE,CAAC7G,MAApB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAlC,OAAO,CAACiC,IAAR,GAAe8G,EAAE,CAAC9G,IAAlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAjC,OAAO,CAACgC,IAAR,GAAe+G,EAAE,CAAC/G,IAAlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAID,IAAI,GAAG,SAAPA,IAAO,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","sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.elem = exports.rotate = exports.intersperse = exports.prependAll = exports.unzip = exports.zip = exports.zipWith = exports.sort = exports.lefts = exports.rights = exports.reverse = exports.modifyAt = exports.deleteAt = exports.updateAt = exports.insertAt = exports.copy = exports.findLastIndex = exports.findLastMap = exports.findLast = exports.findFirstMap = exports.findFirst = exports.findIndex = exports.dropLeftWhile = exports.dropRight = exports.dropLeft = exports.spanLeft = exports.takeLeftWhile = exports.takeRight = exports.takeLeft = exports.init = exports.tail = exports.last = exports.head = exports.lookup = exports.isOutOfBound = exports.size = exports.isNonEmpty = exports.isEmpty = exports.scanRight = exports.scanLeft = exports.chainWithIndex = exports.foldRight = exports.matchRight = exports.foldLeft = exports.matchLeft = exports.replicate = exports.range = exports.makeBy = exports.append = exports.prepend = void 0;\nexports.flap = exports.Functor = exports.getOrd = exports.getEq = exports.getMonoid = exports.getSemigroup = exports.getShow = exports.URI = exports.unfold = exports.wilt = exports.wither = exports.traverseWithIndex = exports.sequence = exports.traverse = exports.reduceRightWithIndex = exports.reduceRight = exports.reduceWithIndex = exports.reduce = exports.foldMapWithIndex = exports.foldMap = exports.duplicate = exports.extend = exports.filterWithIndex = exports.alt = exports.altW = exports.partitionMapWithIndex = exports.partitionMap = exports.partitionWithIndex = exports.partition = exports.filter = exports.separate = exports.compact = exports.filterMap = exports.filterMapWithIndex = exports.mapWithIndex = exports.flatten = exports.chain = exports.ap = exports.map = exports.zero = exports.of = exports.difference = exports.intersection = exports.union = exports.comprehension = exports.chunksOf = exports.splitAt = exports.chop = exports.sortBy = exports.uniq = void 0;\nexports.array = exports.prependToAll = exports.snoc = exports.cons = exports.empty = exports.apS = exports.bind = exports.bindTo = exports.Do = exports.some = exports.every = exports.unsafeDeleteAt = exports.unsafeUpdateAt = exports.unsafeInsertAt = exports.Witherable = exports.TraversableWithIndex = exports.Traversable = exports.FoldableWithIndex = exports.Foldable = exports.FilterableWithIndex = exports.Filterable = exports.Compactable = exports.Extend = exports.Alternative = exports.Alt = exports.Unfoldable = exports.Monad = exports.chainFirst = exports.Chain = exports.Applicative = exports.apSecond = exports.apFirst = exports.Apply = exports.FunctorWithIndex = exports.Pointed = void 0;\nvar Apply_1 = require(\"./Apply\");\nvar Chain_1 = require(\"./Chain\");\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nvar NEA = __importStar(require(\"./NonEmptyArray\"));\nvar O = __importStar(require(\"./Option\"));\nvar RA = __importStar(require(\"./ReadonlyArray\"));\nvar Separated_1 = require(\"./Separated\");\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * Prepend an element to the front of a `Array`, creating a new `NonEmptyArray`.\n *\n * @example\n * import { prepend } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([2, 3, 4], prepend(1)), [1, 2, 3, 4])\n *\n * @category constructors\n * @since 2.10.0\n */\nexports.prepend = NEA.prepend;\n/**\n * Append an element to the end of a `Array`, creating a new `NonEmptyArray`.\n *\n * @example\n * import { append } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([1, 2, 3], append(4)), [1, 2, 3, 4])\n *\n * @category constructors\n * @since 2.10.0\n */\nexports.append = NEA.append;\n/**\n * Return a `Array` of length `n` with element `i` initialized with `f(i)`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { makeBy } from 'fp-ts/Array'\n *\n * const double = (n: number): number => n * 2\n * assert.deepStrictEqual(makeBy(5, double), [0, 2, 4, 6, 8])\n *\n * @category constructors\n * @since 2.0.0\n */\nvar makeBy = function (n, f) { return (n <= 0 ? [] : NEA.makeBy(n, f)); };\nexports.makeBy = makeBy;\n/**\n * Create an `Array` containing a range of integers, including both endpoints.\n *\n * @example\n * import { range } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(range(1, 5), [1, 2, 3, 4, 5])\n *\n * @category constructors\n * @since 2.0.0\n */\nvar range = function (start, end) {\n    return start <= end ? exports.makeBy(end - start + 1, function (i) { return start + i; }) : [start];\n};\nexports.range = range;\n/**\n * Create a `Array` containing a value repeated the specified number of times.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { replicate } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(replicate(3, 'a'), ['a', 'a', 'a'])\n *\n * @category constructors\n * @since 2.0.0\n */\nvar replicate = function (n, a) { return exports.makeBy(n, function () { return a; }); };\nexports.replicate = replicate;\n// -------------------------------------------------------------------------------------\n// destructors\n// -------------------------------------------------------------------------------------\n/**\n * Break an array into its first element and remaining elements\n *\n * @example\n * import { matchLeft } from 'fp-ts/Array'\n *\n * const len: <A>(as: Array<A>) => number = matchLeft(() => 0, (_, tail) => 1 + len(tail))\n * assert.strictEqual(len([1, 2, 3]), 3)\n *\n * @category destructors\n * @since 2.10.0\n */\nvar matchLeft = function (onEmpty, onNonEmpty) { return function (as) {\n    return exports.isNonEmpty(as) ? onNonEmpty(NEA.head(as), NEA.tail(as)) : onEmpty();\n}; };\nexports.matchLeft = matchLeft;\n/**\n * Alias of [`matchLeft`](#matchleft).\n *\n * @category destructors\n * @since 2.0.0\n */\nexports.foldLeft = exports.matchLeft;\n/**\n * Break an array into its initial elements and the last element\n *\n * @category destructors\n * @since 2.10.0\n */\nvar matchRight = function (onEmpty, onNonEmpty) { return function (as) {\n    return exports.isNonEmpty(as) ? onNonEmpty(NEA.init(as), NEA.last(as)) : onEmpty();\n}; };\nexports.matchRight = matchRight;\n/**\n * Alias of [`matchRight`](#matchright).\n *\n * @category destructors\n * @since 2.0.0\n */\nexports.foldRight = exports.matchRight;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * @category combinators\n * @since 2.7.0\n */\nvar chainWithIndex = function (f) { return function (as) {\n    var out = [];\n    for (var i = 0; i < as.length; i++) {\n        out.push.apply(out, f(i, as[i]));\n    }\n    return out;\n}; };\nexports.chainWithIndex = chainWithIndex;\n/**\n * Same as `reduce` but it carries over the intermediate steps\n *\n * @example\n * import { scanLeft } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(scanLeft(10, (b, a: number) => b - a)([1, 2, 3]), [10, 9, 7, 4])\n *\n * @category combinators\n * @since 2.0.0\n */\nvar scanLeft = function (b, f) { return function (as) {\n    var len = as.length;\n    var out = new Array(len + 1);\n    out[0] = b;\n    for (var i = 0; i < len; i++) {\n        out[i + 1] = f(out[i], as[i]);\n    }\n    return out;\n}; };\nexports.scanLeft = scanLeft;\n/**\n * Fold an array from the right, keeping all intermediate results instead of only the final result\n *\n * @example\n * import { scanRight } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(scanRight(10, (a: number, b) => b - a)([1, 2, 3]), [4, 5, 7, 10])\n *\n * @category combinators\n * @since 2.0.0\n */\nvar scanRight = function (b, f) { return function (as) {\n    var len = as.length;\n    var out = new Array(len + 1);\n    out[len] = b;\n    for (var i = len - 1; i >= 0; i--) {\n        out[i] = f(as[i], out[i + 1]);\n    }\n    return out;\n}; };\nexports.scanRight = scanRight;\n/**\n * Test whether an array is empty\n *\n * @example\n * import { isEmpty } from 'fp-ts/Array'\n *\n * assert.strictEqual(isEmpty([]), true)\n *\n * @since 2.0.0\n */\nexports.isEmpty = RA.isEmpty;\n/**\n * Test whether an array is non empty narrowing down the type to `NonEmptyArray<A>`\n *\n * @category guards\n * @since 2.0.0\n */\nexports.isNonEmpty = NEA.isNonEmpty;\n/**\n * Calculate the number of elements in a `Array`.\n *\n * @since 2.10.0\n */\nvar size = function (as) { return as.length; };\nexports.size = size;\n/**\n * Test whether an array contains a particular index\n *\n * @since 2.0.0\n */\nexports.isOutOfBound = NEA.isOutOfBound;\n// TODO: remove non-curried overloading in v3\n/**\n * This function provides a safe way to read a value at a particular index from an array\n *\n * @example\n * import { lookup } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([1, 2, 3], lookup(1)), some(2))\n * assert.deepStrictEqual(pipe([1, 2, 3], lookup(3)), none)\n *\n * @since 2.0.0\n */\nexports.lookup = RA.lookup;\n/**\n * Get the first element in an array, or `None` if the array is empty\n *\n * @example\n * import { head } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(head([1, 2, 3]), some(1))\n * assert.deepStrictEqual(head([]), none)\n *\n * @category destructors\n * @since 2.0.0\n */\nexports.head = RA.head;\n/**\n * Get the last element in an array, or `None` if the array is empty\n *\n * @example\n * import { last } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(last([1, 2, 3]), some(3))\n * assert.deepStrictEqual(last([]), none)\n *\n * @category destructors\n * @since 2.0.0\n */\nexports.last = RA.last;\n/**\n * Get all but the first element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { tail } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(tail([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(tail([]), none)\n *\n * @category destructors\n * @since 2.0.0\n */\nvar tail = function (as) { return (exports.isNonEmpty(as) ? O.some(NEA.tail(as)) : O.none); };\nexports.tail = tail;\n/**\n * Get all but the last element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { init } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(init([1, 2, 3]), some([1, 2]))\n * assert.deepStrictEqual(init([]), none)\n *\n * @category destructors\n * @since 2.0.0\n */\nvar init = function (as) { return (exports.isNonEmpty(as) ? O.some(NEA.init(as)) : O.none); };\nexports.init = init;\n/**\n * Keep only a max number of elements from the start of an `Array`, creating a new `Array`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { takeLeft } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(takeLeft(2)([1, 2, 3]), [1, 2])\n *\n * @category combinators\n * @since 2.0.0\n */\nvar takeLeft = function (n) { return function (as) { return (exports.isOutOfBound(n, as) ? exports.copy(as) : as.slice(0, n)); }; };\nexports.takeLeft = takeLeft;\n/**\n * Keep only a max number of elements from the end of an `Array`, creating a new `Array`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { takeRight } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(takeRight(2)([1, 2, 3, 4, 5]), [4, 5])\n *\n * @category combinators\n * @since 2.0.0\n */\nvar takeRight = function (n) { return function (as) {\n    return exports.isOutOfBound(n, as) ? exports.copy(as) : n === 0 ? [] : as.slice(-n);\n}; };\nexports.takeRight = takeRight;\nfunction takeLeftWhile(predicate) {\n    return function (as) {\n        var out = [];\n        for (var _i = 0, as_1 = as; _i < as_1.length; _i++) {\n            var a = as_1[_i];\n            if (!predicate(a)) {\n                break;\n            }\n            out.push(a);\n        }\n        return out;\n    };\n}\nexports.takeLeftWhile = takeLeftWhile;\nvar spanLeftIndex = function (as, predicate) {\n    var l = as.length;\n    var i = 0;\n    for (; i < l; i++) {\n        if (!predicate(as[i])) {\n            break;\n        }\n    }\n    return i;\n};\nfunction spanLeft(predicate) {\n    return function (as) {\n        var _a = exports.splitAt(spanLeftIndex(as, predicate))(as), init = _a[0], rest = _a[1];\n        return { init: init, rest: rest };\n    };\n}\nexports.spanLeft = spanLeft;\n/**\n * Drop a max number of elements from the start of an `Array`, creating a new `Array`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { dropLeft } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(dropLeft(2)([1, 2, 3]), [3])\n *\n * @category combinators\n * @since 2.0.0\n */\nvar dropLeft = function (n) { return function (as) {\n    return n <= 0 || exports.isEmpty(as) ? exports.copy(as) : n >= as.length ? [] : as.slice(n, as.length);\n}; };\nexports.dropLeft = dropLeft;\n/**\n * Drop a max number of elements from the end of an `Array`, creating a new `Array`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { dropRight } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(dropRight(2)([1, 2, 3, 4, 5]), [1, 2, 3])\n *\n * @category combinators\n * @since 2.0.0\n */\nvar dropRight = function (n) { return function (as) {\n    return n <= 0 || exports.isEmpty(as) ? exports.copy(as) : n >= as.length ? [] : as.slice(0, as.length - n);\n}; };\nexports.dropRight = dropRight;\n/**\n * Remove the longest initial subarray for which all element satisfy the specified predicate, creating a new array\n *\n * @example\n * import { dropLeftWhile } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(dropLeftWhile((n: number) => n % 2 === 1)([1, 3, 2, 4, 5]), [2, 4, 5])\n *\n * @category combinators\n * @since 2.0.0\n */\nvar dropLeftWhile = function (predicate) { return function (as) {\n    return as.slice(spanLeftIndex(as, predicate));\n}; };\nexports.dropLeftWhile = dropLeftWhile;\n/**\n * Find the first index for which a predicate holds\n *\n * @example\n * import { findIndex } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([1, 2, 3]), some(1))\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([]), none)\n *\n * @since 2.0.0\n */\nexports.findIndex = RA.findIndex;\nfunction findFirst(predicate) {\n    return RA.findFirst(predicate);\n}\nexports.findFirst = findFirst;\n/**\n * Find the first element returned by an option based selector function\n *\n * @example\n * import { findFirstMap } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   readonly name: string\n *   readonly age?: number\n * }\n *\n * const persons: Array<Person> = [{ name: 'John' }, { name: 'Mary', age: 45 }, { name: 'Joey', age: 28 }]\n *\n * // returns the name of the first person that has an age\n * assert.deepStrictEqual(findFirstMap((p: Person) => (p.age === undefined ? none : some(p.name)))(persons), some('Mary'))\n *\n * @category destructors\n * @since 2.0.0\n */\nexports.findFirstMap = RA.findFirstMap;\nfunction findLast(predicate) {\n    return RA.findLast(predicate);\n}\nexports.findLast = findLast;\n/**\n * Find the last element returned by an option based selector function\n *\n * @example\n * import { findLastMap } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   readonly name: string\n *   readonly age?: number\n * }\n *\n * const persons: Array<Person> = [{ name: 'John' }, { name: 'Mary', age: 45 }, { name: 'Joey', age: 28 }]\n *\n * // returns the name of the last person that has an age\n * assert.deepStrictEqual(findLastMap((p: Person) => (p.age === undefined ? none : some(p.name)))(persons), some('Joey'))\n *\n * @category destructors\n * @since 2.0.0\n */\nexports.findLastMap = RA.findLastMap;\n/**\n * Returns the index of the last element of the list which matches the predicate\n *\n * @example\n * import { findLastIndex } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface X {\n *   readonly a: number\n *   readonly b: number\n * }\n * const xs: Array<X> = [{ a: 1, b: 0 }, { a: 1, b: 1 }]\n * assert.deepStrictEqual(findLastIndex((x: { readonly a: number }) => x.a === 1)(xs), some(1))\n * assert.deepStrictEqual(findLastIndex((x: { readonly a: number }) => x.a === 4)(xs), none)\n *\n *\n * @since 2.0.0\n */\nexports.findLastIndex = RA.findLastIndex;\n/**\n * @category combinators\n * @since 2.0.0\n */\nvar copy = function (as) { return as.slice(); };\nexports.copy = copy;\n/**\n * Insert an element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { insertAt } from 'fp-ts/Array'\n * import { some } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(insertAt(2, 5)([1, 2, 3, 4]), some([1, 2, 5, 3, 4]))\n *\n * @since 2.0.0\n */\nvar insertAt = function (i, a) { return function (as) {\n    return i < 0 || i > as.length ? O.none : O.some(exports.unsafeInsertAt(i, a, as));\n}; };\nexports.insertAt = insertAt;\n/**\n * Change the element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { updateAt } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(updateAt(1, 1)([1, 2, 3]), some([1, 1, 3]))\n * assert.deepStrictEqual(updateAt(1, 1)([]), none)\n *\n * @since 2.0.0\n */\nvar updateAt = function (i, a) { return exports.modifyAt(i, function () { return a; }); };\nexports.updateAt = updateAt;\n/**\n * Delete the element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { deleteAt } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(deleteAt(0)([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(deleteAt(1)([]), none)\n *\n * @since 2.0.0\n */\nvar deleteAt = function (i) { return function (as) {\n    return exports.isOutOfBound(i, as) ? O.none : O.some(exports.unsafeDeleteAt(i, as));\n}; };\nexports.deleteAt = deleteAt;\n/**\n * Apply a function to the element at the specified index, creating a new array, or returning `None` if the index is out\n * of bounds\n *\n * @example\n * import { modifyAt } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * const double = (x: number): number => x * 2\n * assert.deepStrictEqual(modifyAt(1, double)([1, 2, 3]), some([1, 4, 3]))\n * assert.deepStrictEqual(modifyAt(1, double)([]), none)\n *\n * @since 2.0.0\n */\nvar modifyAt = function (i, f) { return function (as) {\n    return exports.isOutOfBound(i, as) ? O.none : O.some(exports.unsafeUpdateAt(i, f(as[i]), as));\n}; };\nexports.modifyAt = modifyAt;\n/**\n * Reverse an array, creating a new array\n *\n * @example\n * import { reverse } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(reverse([1, 2, 3]), [3, 2, 1])\n *\n * @category combinators\n * @since 2.0.0\n */\nvar reverse = function (as) { return (exports.isEmpty(as) ? [] : as.slice().reverse()); };\nexports.reverse = reverse;\n/**\n * Extracts from an array of `Either` all the `Right` elements. All the `Right` elements are extracted in order\n *\n * @example\n * import { rights } from 'fp-ts/Array'\n * import { right, left } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(rights([right(1), left('foo'), right(2)]), [1, 2])\n *\n * @category combinators\n * @since 2.0.0\n */\nvar rights = function (as) {\n    var r = [];\n    for (var i = 0; i < as.length; i++) {\n        var a = as[i];\n        if (a._tag === 'Right') {\n            r.push(a.right);\n        }\n    }\n    return r;\n};\nexports.rights = rights;\n/**\n * Extracts from an array of `Either` all the `Left` elements. All the `Left` elements are extracted in order\n *\n * @example\n * import { lefts } from 'fp-ts/Array'\n * import { left, right } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(lefts([right(1), left('foo'), right(2)]), ['foo'])\n *\n * @category combinators\n * @since 2.0.0\n */\nvar lefts = function (as) {\n    var r = [];\n    for (var i = 0; i < as.length; i++) {\n        var a = as[i];\n        if (a._tag === 'Left') {\n            r.push(a.left);\n        }\n    }\n    return r;\n};\nexports.lefts = lefts;\n/**\n * Sort the elements of an array in increasing order, creating a new array\n *\n * @example\n * import { sort } from 'fp-ts/Array'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(sort(N.Ord)([3, 2, 1]), [1, 2, 3])\n *\n * @category combinators\n * @since 2.0.0\n */\nvar sort = function (O) { return function (as) {\n    return as.length <= 1 ? exports.copy(as) : as.slice().sort(O.compare);\n}; };\nexports.sort = sort;\n/**\n * Apply a function to pairs of elements at the same index in two arrays, collecting the results in a new array. If one\n * input array is short, excess elements of the longer array are discarded.\n *\n * @example\n * import { zipWith } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(zipWith([1, 2, 3], ['a', 'b', 'c', 'd'], (n, s) => s + n), ['a1', 'b2', 'c3'])\n *\n * @category combinators\n * @since 2.0.0\n */\nvar zipWith = function (fa, fb, f) {\n    var fc = [];\n    var len = Math.min(fa.length, fb.length);\n    for (var i = 0; i < len; i++) {\n        fc[i] = f(fa[i], fb[i]);\n    }\n    return fc;\n};\nexports.zipWith = zipWith;\nfunction zip(as, bs) {\n    if (bs === undefined) {\n        return function (bs) { return zip(bs, as); };\n    }\n    return exports.zipWith(as, bs, function (a, b) { return [a, b]; });\n}\nexports.zip = zip;\n/**\n * The function is reverse of `zip`. Takes an array of pairs and return two corresponding arrays\n *\n * @example\n * import { unzip } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(unzip([[1, 'a'], [2, 'b'], [3, 'c']]), [[1, 2, 3], ['a', 'b', 'c']])\n *\n * @since 2.0.0\n */\nvar unzip = function (as) {\n    var fa = [];\n    var fb = [];\n    for (var i = 0; i < as.length; i++) {\n        fa[i] = as[i][0];\n        fb[i] = as[i][1];\n    }\n    return [fa, fb];\n};\nexports.unzip = unzip;\n/**\n * Prepend an element to every member of an array\n *\n * @example\n * import { prependAll } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(prependAll(9)([1, 2, 3, 4]), [9, 1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.10.0\n */\nvar prependAll = function (middle) {\n    var f = NEA.prependAll(middle);\n    return function (as) { return (exports.isNonEmpty(as) ? f(as) : []); };\n};\nexports.prependAll = prependAll;\n/**\n * Places an element in between members of an array\n *\n * @example\n * import { intersperse } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(intersperse(9)([1, 2, 3, 4]), [1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.9.0\n */\nvar intersperse = function (middle) {\n    var f = NEA.intersperse(middle);\n    return function (as) { return (exports.isNonEmpty(as) ? f(as) : exports.copy(as)); };\n};\nexports.intersperse = intersperse;\n/**\n * Rotate a `Array` by `n` steps.\n *\n * @example\n * import { rotate } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(rotate(2)([1, 2, 3, 4, 5]), [4, 5, 1, 2, 3])\n *\n * @category combinators\n * @since 2.0.0\n */\nvar rotate = function (n) {\n    var f = NEA.rotate(n);\n    return function (as) { return (exports.isNonEmpty(as) ? f(as) : exports.copy(as)); };\n};\nexports.rotate = rotate;\n// TODO: remove non-curried overloading in v3\n/**\n * Test if a value is a member of an array. Takes a `Eq<A>` as a single\n * argument which returns the function to use to search for a value of type `A` in\n * an array of type `Array<A>`.\n *\n * @example\n * import { elem } from 'fp-ts/Array'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(pipe([1, 2, 3], elem(N.Eq)(2)), true)\n * assert.strictEqual(pipe([1, 2, 3], elem(N.Eq)(0)), false)\n *\n * @since 2.0.0\n */\nexports.elem = RA.elem;\n/**\n * Remove duplicates from an array, keeping the first occurrence of an element.\n *\n * @example\n * import { uniq } from 'fp-ts/Array'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(uniq(N.Eq)([1, 2, 1]), [1, 2])\n *\n * @category combinators\n * @since 2.0.0\n */\nvar uniq = function (E) {\n    var f = NEA.uniq(E);\n    return function (as) { return (exports.isNonEmpty(as) ? f(as) : exports.copy(as)); };\n};\nexports.uniq = uniq;\n/**\n * Sort the elements of an array in increasing order, where elements are compared using first `ords[0]`, then `ords[1]`,\n * etc...\n *\n * @example\n * import { sortBy } from 'fp-ts/Array'\n * import { contramap } from 'fp-ts/Ord'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * interface Person {\n *   readonly name: string\n *   readonly age: number\n * }\n * const byName = pipe(S.Ord, contramap((p: Person) => p.name))\n * const byAge = pipe(N.Ord, contramap((p: Person) => p.age))\n *\n * const sortByNameByAge = sortBy([byName, byAge])\n *\n * const persons = [{ name: 'a', age: 1 }, { name: 'b', age: 3 }, { name: 'c', age: 2 }, { name: 'b', age: 2 }]\n * assert.deepStrictEqual(sortByNameByAge(persons), [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 2 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 }\n * ])\n *\n * @category combinators\n * @since 2.0.0\n */\nvar sortBy = function (ords) {\n    var f = NEA.sortBy(ords);\n    return function (as) { return (exports.isNonEmpty(as) ? f(as) : exports.copy(as)); };\n};\nexports.sortBy = sortBy;\n/**\n * A useful recursion pattern for processing an array to produce a new array, often used for \"chopping\" up the input\n * array. Typically chop is called with some function that will consume an initial prefix of the array and produce a\n * value and the rest of the array.\n *\n * @example\n * import { Eq } from 'fp-ts/Eq'\n * import * as A from 'fp-ts/Array'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * const group = <A>(S: Eq<A>): ((as: Array<A>) => Array<Array<A>>) => {\n *   return A.chop(as => {\n *     const { init, rest } = pipe(as, A.spanLeft((a: A) => S.equals(a, as[0])))\n *     return [init, rest]\n *   })\n * }\n * assert.deepStrictEqual(group(N.Eq)([1, 1, 2, 3, 3, 4]), [[1, 1], [2], [3, 3], [4]])\n *\n * @category combinators\n * @since 2.0.0\n */\nvar chop = function (f) {\n    var g = NEA.chop(f);\n    return function (as) { return (exports.isNonEmpty(as) ? g(as) : []); };\n};\nexports.chop = chop;\n/**\n * Splits an `Array` into two pieces, the first piece has max `n` elements.\n *\n * @example\n * import { splitAt } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(splitAt(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4, 5]])\n *\n * @category combinators\n * @since 2.0.0\n */\nvar splitAt = function (n) { return function (as) {\n    return n >= 1 && exports.isNonEmpty(as) ? NEA.splitAt(n)(as) : exports.isEmpty(as) ? [exports.copy(as), []] : [[], exports.copy(as)];\n}; };\nexports.splitAt = splitAt;\n/**\n * Splits an array into length-`n` pieces. The last piece will be shorter if `n` does not evenly divide the length of\n * the array. Note that `chunksOf(n)([])` is `[]`, not `[[]]`. This is intentional, and is consistent with a recursive\n * definition of `chunksOf`; it satisfies the property that\n *\n * ```ts\n * chunksOf(n)(xs).concat(chunksOf(n)(ys)) == chunksOf(n)(xs.concat(ys)))\n * ```\n *\n * whenever `n` evenly divides the length of `xs`.\n *\n * @example\n * import { chunksOf } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(chunksOf(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4], [5]])\n *\n * @category combinators\n * @since 2.0.0\n */\nvar chunksOf = function (n) {\n    var f = NEA.chunksOf(n);\n    return function (as) { return (exports.isNonEmpty(as) ? f(as) : []); };\n};\nexports.chunksOf = chunksOf;\nfunction comprehension(input, f, g) {\n    if (g === void 0) { g = function () { return true; }; }\n    var go = function (scope, input) {\n        return exports.isNonEmpty(input)\n            ? function_1.pipe(NEA.head(input), exports.chain(function (x) { return go(function_1.pipe(scope, exports.append(x)), NEA.tail(input)); }))\n            : g.apply(void 0, scope) ? [f.apply(void 0, scope)]\n                : [];\n    };\n    return go([], input);\n}\nexports.comprehension = comprehension;\nfunction union(E) {\n    var unionE = NEA.union(E);\n    return function (first, second) {\n        if (second === undefined) {\n            var unionE_1 = union(E);\n            return function (ys) { return unionE_1(ys, first); };\n        }\n        return exports.isNonEmpty(first) && exports.isNonEmpty(second)\n            ? unionE(first, second)\n            : exports.isNonEmpty(first)\n                ? exports.copy(first)\n                : exports.copy(second);\n    };\n}\nexports.union = union;\nfunction intersection(E) {\n    var elemE = exports.elem(E);\n    return function (xs, ys) {\n        if (ys === undefined) {\n            var intersectionE_1 = intersection(E);\n            return function (ys) { return intersectionE_1(ys, xs); };\n        }\n        return xs.filter(function (a) { return elemE(a, ys); });\n    };\n}\nexports.intersection = intersection;\nfunction difference(E) {\n    var elemE = exports.elem(E);\n    return function (xs, ys) {\n        if (ys === undefined) {\n            var differenceE_1 = difference(E);\n            return function (ys) { return differenceE_1(ys, xs); };\n        }\n        return xs.filter(function (a) { return !elemE(a, ys); });\n    };\n}\nexports.difference = difference;\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\nvar _map = function (fa, f) { return function_1.pipe(fa, exports.map(f)); };\n/* istanbul ignore next */\nvar _mapWithIndex = function (fa, f) { return function_1.pipe(fa, exports.mapWithIndex(f)); };\nvar _ap = function (fab, fa) { return function_1.pipe(fab, exports.ap(fa)); };\nvar _chain = function (ma, f) { return function_1.pipe(ma, exports.chain(f)); };\n/* istanbul ignore next */\nvar _filter = function (fa, predicate) { return function_1.pipe(fa, exports.filter(predicate)); };\n/* istanbul ignore next */\nvar _filterMap = function (fa, f) { return function_1.pipe(fa, exports.filterMap(f)); };\n/* istanbul ignore next */\nvar _partition = function (fa, predicate) {\n    return function_1.pipe(fa, exports.partition(predicate));\n};\n/* istanbul ignore next */\nvar _partitionMap = function (fa, f) { return function_1.pipe(fa, exports.partitionMap(f)); };\n/* istanbul ignore next */\nvar _partitionWithIndex = function (fa, predicateWithIndex) { return function_1.pipe(fa, exports.partitionWithIndex(predicateWithIndex)); };\n/* istanbul ignore next */\nvar _partitionMapWithIndex = function (fa, f) { return function_1.pipe(fa, exports.partitionMapWithIndex(f)); };\n/* istanbul ignore next */\nvar _alt = function (fa, that) { return function_1.pipe(fa, exports.alt(that)); };\nvar _reduce = function (fa, b, f) { return function_1.pipe(fa, exports.reduce(b, f)); };\n/* istanbul ignore next */\nvar _foldMap = function (M) {\n    var foldMapM = exports.foldMap(M);\n    return function (fa, f) { return function_1.pipe(fa, foldMapM(f)); };\n};\n/* istanbul ignore next */\nvar _reduceRight = function (fa, b, f) { return function_1.pipe(fa, exports.reduceRight(b, f)); };\n/* istanbul ignore next */\nvar _reduceWithIndex = function (fa, b, f) {\n    return function_1.pipe(fa, exports.reduceWithIndex(b, f));\n};\n/* istanbul ignore next */\nvar _foldMapWithIndex = function (M) {\n    var foldMapWithIndexM = exports.foldMapWithIndex(M);\n    return function (fa, f) { return function_1.pipe(fa, foldMapWithIndexM(f)); };\n};\n/* istanbul ignore next */\nvar _reduceRightWithIndex = function (fa, b, f) {\n    return function_1.pipe(fa, exports.reduceRightWithIndex(b, f));\n};\n/* istanbul ignore next */\nvar _filterMapWithIndex = function (fa, f) { return function_1.pipe(fa, exports.filterMapWithIndex(f)); };\n/* istanbul ignore next */\nvar _filterWithIndex = function (fa, predicateWithIndex) { return function_1.pipe(fa, exports.filterWithIndex(predicateWithIndex)); };\n/* istanbul ignore next */\nvar _extend = function (fa, f) { return function_1.pipe(fa, exports.extend(f)); };\n/* istanbul ignore next */\nvar _traverse = function (F) {\n    var traverseF = exports.traverse(F);\n    return function (ta, f) { return function_1.pipe(ta, traverseF(f)); };\n};\n/* istanbul ignore next */\nvar _traverseWithIndex = function (F) {\n    var traverseWithIndexF = exports.traverseWithIndex(F);\n    return function (ta, f) { return function_1.pipe(ta, traverseWithIndexF(f)); };\n};\n/* istanbul ignore next */\nvar _wither = function (F) {\n    var witherF = exports.wither(F);\n    return function (fa, f) { return function_1.pipe(fa, witherF(f)); };\n};\n/* istanbul ignore next */\nvar _wilt = function (F) {\n    var wiltF = exports.wilt(F);\n    return function (fa, f) { return function_1.pipe(fa, wiltF(f)); };\n};\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n/**\n * @category Pointed\n * @since 2.0.0\n */\nexports.of = NEA.of;\n/**\n * @category Alternative\n * @since 2.7.0\n */\nvar zero = function () { return []; };\nexports.zero = zero;\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.0.0\n */\nvar map = function (f) { return function (fa) { return fa.map(function (a) { return f(a); }); }; };\nexports.map = map;\n/**\n * Apply a function to an argument under a type constructor.\n *\n * @category Apply\n * @since 2.0.0\n */\nvar ap = function (fa) { return exports.chain(function (f) { return function_1.pipe(fa, exports.map(f)); }); };\nexports.ap = ap;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category Monad\n * @since 2.0.0\n */\nvar chain = function (f) { return function (ma) {\n    return function_1.pipe(ma, exports.chainWithIndex(function (_, a) { return f(a); }));\n}; };\nexports.chain = chain;\n/**\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.flatten = \n/*#__PURE__*/\nexports.chain(function_1.identity);\n/**\n * @category FunctorWithIndex\n * @since 2.0.0\n */\nvar mapWithIndex = function (f) { return function (fa) {\n    return fa.map(function (a, i) { return f(i, a); });\n}; };\nexports.mapWithIndex = mapWithIndex;\n/**\n * @category FilterableWithIndex\n * @since 2.0.0\n */\nvar filterMapWithIndex = function (f) { return function (fa) {\n    var out = [];\n    for (var i = 0; i < fa.length; i++) {\n        var optionB = f(i, fa[i]);\n        if (O.isSome(optionB)) {\n            out.push(optionB.value);\n        }\n    }\n    return out;\n}; };\nexports.filterMapWithIndex = filterMapWithIndex;\n/**\n * @category Filterable\n * @since 2.0.0\n */\nvar filterMap = function (f) {\n    return exports.filterMapWithIndex(function (_, a) { return f(a); });\n};\nexports.filterMap = filterMap;\n/**\n * @category Compactable\n * @since 2.0.0\n */\nexports.compact = \n/*#__PURE__*/\nexports.filterMap(function_1.identity);\n/**\n * @category Compactable\n * @since 2.0.0\n */\nvar separate = function (fa) {\n    var left = [];\n    var right = [];\n    for (var _i = 0, fa_1 = fa; _i < fa_1.length; _i++) {\n        var e = fa_1[_i];\n        if (e._tag === 'Left') {\n            left.push(e.left);\n        }\n        else {\n            right.push(e.right);\n        }\n    }\n    return Separated_1.separated(left, right);\n};\nexports.separate = separate;\n/**\n * @category Filterable\n * @since 2.0.0\n */\nvar filter = function (predicate) { return function (fa) { return fa.filter(predicate); }; };\nexports.filter = filter;\n/**\n * @category Filterable\n * @since 2.0.0\n */\nvar partition = function (predicate) {\n    return exports.partitionWithIndex(function (_, a) { return predicate(a); });\n};\nexports.partition = partition;\n/**\n * @category FilterableWithIndex\n * @since 2.0.0\n */\nvar partitionWithIndex = function (predicateWithIndex) { return function (fa) {\n    var left = [];\n    var right = [];\n    for (var i = 0; i < fa.length; i++) {\n        var a = fa[i];\n        if (predicateWithIndex(i, a)) {\n            right.push(a);\n        }\n        else {\n            left.push(a);\n        }\n    }\n    return Separated_1.separated(left, right);\n}; };\nexports.partitionWithIndex = partitionWithIndex;\n/**\n * @category Filterable\n * @since 2.0.0\n */\nvar partitionMap = function (f) { return exports.partitionMapWithIndex(function (_, a) { return f(a); }); };\nexports.partitionMap = partitionMap;\n/**\n * @category FilterableWithIndex\n * @since 2.0.0\n */\nvar partitionMapWithIndex = function (f) { return function (fa) {\n    var left = [];\n    var right = [];\n    for (var i = 0; i < fa.length; i++) {\n        var e = f(i, fa[i]);\n        if (e._tag === 'Left') {\n            left.push(e.left);\n        }\n        else {\n            right.push(e.right);\n        }\n    }\n    return Separated_1.separated(left, right);\n}; };\nexports.partitionMapWithIndex = partitionMapWithIndex;\n/**\n * Less strict version of [`alt`](#alt).\n *\n * @category Alt\n * @since 2.9.0\n */\nvar altW = function (that) { return function (fa) { return fa.concat(that()); }; };\nexports.altW = altW;\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * @category Alt\n * @since 2.0.0\n */\nexports.alt = exports.altW;\n/**\n * @category FilterableWithIndex\n * @since 2.0.0\n */\nvar filterWithIndex = function (predicateWithIndex) { return function (fa) {\n    return fa.filter(function (a, i) { return predicateWithIndex(i, a); });\n}; };\nexports.filterWithIndex = filterWithIndex;\n/**\n * @category Extend\n * @since 2.0.0\n */\nvar extend = function (f) { return function (wa) {\n    return wa.map(function (_, i) { return f(wa.slice(i)); });\n}; };\nexports.extend = extend;\n/**\n * Derivable from `Extend`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.duplicate = \n/*#__PURE__*/\nexports.extend(function_1.identity);\n/**\n * @category Foldable\n * @since 2.0.0\n */\nexports.foldMap = RA.foldMap;\n/**\n * @category FoldableWithIndex\n * @since 2.0.0\n */\nexports.foldMapWithIndex = RA.foldMapWithIndex;\n/**\n * @category Foldable\n * @since 2.0.0\n */\nexports.reduce = RA.reduce;\n/**\n * @category FoldableWithIndex\n * @since 2.0.0\n */\nexports.reduceWithIndex = RA.reduceWithIndex;\n/**\n * @category Foldable\n * @since 2.0.0\n */\nexports.reduceRight = RA.reduceRight;\n/**\n * @category FoldableWithIndex\n * @since 2.0.0\n */\nexports.reduceRightWithIndex = RA.reduceRightWithIndex;\n/**\n * @category Traversable\n * @since 2.6.3\n */\nvar traverse = function (F) {\n    var traverseWithIndexF = exports.traverseWithIndex(F);\n    return function (f) { return traverseWithIndexF(function (_, a) { return f(a); }); };\n};\nexports.traverse = traverse;\n/**\n * @category Traversable\n * @since 2.6.3\n */\nvar sequence = function (F) { return function (ta) {\n    return _reduce(ta, F.of(exports.zero()), function (fas, fa) {\n        return F.ap(F.map(fas, function (as) { return function (a) { return function_1.pipe(as, exports.append(a)); }; }), fa);\n    });\n}; };\nexports.sequence = sequence;\n/**\n * @category TraversableWithIndex\n * @since 2.6.3\n */\nvar traverseWithIndex = function (F) { return function (f) {\n    return exports.reduceWithIndex(F.of(exports.zero()), function (i, fbs, a) {\n        return F.ap(F.map(fbs, function (bs) { return function (b) { return function_1.pipe(bs, exports.append(b)); }; }), f(i, a));\n    });\n}; };\nexports.traverseWithIndex = traverseWithIndex;\n/**\n * @category Witherable\n * @since 2.6.5\n */\nvar wither = function (F) {\n    var traverseF = exports.traverse(F);\n    return function (f) { return function (fa) { return F.map(function_1.pipe(fa, traverseF(f)), exports.compact); }; };\n};\nexports.wither = wither;\n/**\n * @category Witherable\n * @since 2.6.5\n */\nvar wilt = function (F) {\n    var traverseF = exports.traverse(F);\n    return function (f) { return function (fa) { return F.map(function_1.pipe(fa, traverseF(f)), exports.separate); }; };\n};\nexports.wilt = wilt;\n/**\n * @category Unfoldable\n * @since 2.6.6\n */\nvar unfold = function (b, f) {\n    var out = [];\n    var bb = b;\n    while (true) {\n        var mt = f(bb);\n        if (O.isSome(mt)) {\n            var _a = mt.value, a = _a[0], b_1 = _a[1];\n            out.push(a);\n            bb = b_1;\n        }\n        else {\n            break;\n        }\n    }\n    return out;\n};\nexports.unfold = unfold;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.0.0\n */\nexports.URI = 'Array';\n/**\n * @category instances\n * @since 2.0.0\n */\nexports.getShow = RA.getShow;\n/**\n * @category instances\n * @since 2.10.0\n */\nvar getSemigroup = function () { return ({\n    concat: function (first, second) { return first.concat(second); }\n}); };\nexports.getSemigroup = getSemigroup;\n/**\n * Returns a `Monoid` for `Array<A>`\n *\n * @example\n * import { getMonoid } from 'fp-ts/Array'\n *\n * const M = getMonoid<number>()\n * assert.deepStrictEqual(M.concat([1, 2], [3, 4]), [1, 2, 3, 4])\n *\n * @category instances\n * @since 2.0.0\n */\nvar getMonoid = function () { return ({\n    concat: exports.getSemigroup().concat,\n    empty: []\n}); };\nexports.getMonoid = getMonoid;\n/**\n * Derives an `Eq` over the `Array` of a given element type from the `Eq` of that type. The derived `Eq` defines two\n * arrays as equal if all elements of both arrays are compared equal pairwise with the given `E`. In case of arrays of\n * different lengths, the result is non equality.\n *\n * @example\n * import * as S from 'fp-ts/string'\n * import { getEq } from 'fp-ts/Array'\n *\n * const E = getEq(S.Eq)\n * assert.strictEqual(E.equals(['a', 'b'], ['a', 'b']), true)\n * assert.strictEqual(E.equals(['a'], []), false)\n *\n * @category instances\n * @since 2.0.0\n */\nexports.getEq = RA.getEq;\n/**\n * Derives an `Ord` over the `Array` of a given element type from the `Ord` of that type. The ordering between two such\n * arrays is equal to: the first non equal comparison of each arrays elements taken pairwise in increasing order, in\n * case of equality over all the pairwise elements; the longest array is considered the greatest, if both arrays have\n * the same length, the result is equality.\n *\n * @example\n * import { getOrd } from 'fp-ts/Array'\n * import * as S from 'fp-ts/string'\n *\n * const O = getOrd(S.Ord)\n * assert.strictEqual(O.compare(['b'], ['a']), 1)\n * assert.strictEqual(O.compare(['a'], ['a']), 0)\n * assert.strictEqual(O.compare(['a'], ['b']), -1)\n *\n * @category instances\n * @since 2.0.0\n */\nexports.getOrd = RA.getOrd;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: _map\n};\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\nexports.flap = \n/*#_PURE_*/\nFunctor_1.flap(exports.Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Pointed = {\n    URI: exports.URI,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FunctorWithIndex = {\n    URI: exports.URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Apply = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.apFirst = \n/*#__PURE__*/\nApply_1.apFirst(exports.Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.apSecond = \n/*#__PURE__*/\nApply_1.apSecond(exports.Apply);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Applicative = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Chain = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.chainFirst = \n/*#__PURE__*/\nChain_1.chainFirst(exports.Chain);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Monad = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Unfoldable = {\n    URI: exports.URI,\n    unfold: exports.unfold\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Alt = {\n    URI: exports.URI,\n    map: _map,\n    alt: _alt\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Alternative = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    alt: _alt,\n    zero: exports.zero\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Extend = {\n    URI: exports.URI,\n    map: _map,\n    extend: _extend\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Compactable = {\n    URI: exports.URI,\n    compact: exports.compact,\n    separate: exports.separate\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Filterable = {\n    URI: exports.URI,\n    map: _map,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FilterableWithIndex = {\n    URI: exports.URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    partitionMapWithIndex: _partitionMapWithIndex,\n    partitionWithIndex: _partitionWithIndex,\n    filterMapWithIndex: _filterMapWithIndex,\n    filterWithIndex: _filterWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Foldable = {\n    URI: exports.URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FoldableWithIndex = {\n    URI: exports.URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Traversable = {\n    URI: exports.URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.TraversableWithIndex = {\n    URI: exports.URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    traverseWithIndex: _traverseWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Witherable = {\n    URI: exports.URI,\n    map: _map,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    wither: _wither,\n    wilt: _wilt\n};\n// -------------------------------------------------------------------------------------\n// unsafe\n// -------------------------------------------------------------------------------------\n/**\n * @category unsafe\n * @since 2.0.0\n */\nexports.unsafeInsertAt = NEA.unsafeInsertAt;\n/**\n * @category unsafe\n * @since 2.0.0\n */\nvar unsafeUpdateAt = function (i, a, as) {\n    return exports.isNonEmpty(as) ? NEA.unsafeUpdateAt(i, a, as) : [];\n};\nexports.unsafeUpdateAt = unsafeUpdateAt;\n/**\n * @category unsafe\n * @since 2.0.0\n */\nvar unsafeDeleteAt = function (i, as) {\n    var xs = as.slice();\n    xs.splice(i, 1);\n    return xs;\n};\nexports.unsafeDeleteAt = unsafeDeleteAt;\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.9.0\n */\nexports.every = RA.every;\n/**\n * @since 2.9.0\n */\nvar some = function (predicate) { return function (as) { return as.some(predicate); }; };\nexports.some = some;\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.9.0\n */\nexports.Do = \n/*#__PURE__*/\nexports.of({});\n/**\n * @since 2.8.0\n */\nexports.bindTo = \n/*#__PURE__*/\nFunctor_1.bindTo(exports.Functor);\n/**\n * @since 2.8.0\n */\nexports.bind = \n/*#__PURE__*/\nChain_1.bind(exports.Chain);\n// -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.8.0\n */\nexports.apS = \n/*#__PURE__*/\nApply_1.apS(exports.Apply);\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use a new `[]` instead.\n *\n * @since 2.0.0\n * @deprecated\n */\nexports.empty = [];\n/**\n * Use `prepend` instead.\n *\n * @category constructors\n * @since 2.0.0\n * @deprecated\n */\n// tslint:disable-next-line: deprecation\nexports.cons = NEA.cons;\n/**\n * Use `append` instead.\n *\n * @category constructors\n * @since 2.0.0\n * @deprecated\n */\n// tslint:disable-next-line: deprecation\nexports.snoc = NEA.snoc;\n/**\n * Use `prependAll` instead\n *\n * @category combinators\n * @since 2.9.0\n * @deprecated\n */\nexports.prependToAll = exports.prependAll;\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.array = {\n    URI: exports.URI,\n    compact: exports.compact,\n    separate: exports.separate,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: _chain,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    mapWithIndex: _mapWithIndex,\n    partitionMapWithIndex: _partitionMapWithIndex,\n    partitionWithIndex: _partitionWithIndex,\n    filterMapWithIndex: _filterMapWithIndex,\n    filterWithIndex: _filterWithIndex,\n    alt: _alt,\n    zero: exports.zero,\n    unfold: exports.unfold,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverseWithIndex: _traverseWithIndex,\n    extend: _extend,\n    wither: _wither,\n    wilt: _wilt\n};\n"]},"metadata":{},"sourceType":"script"}