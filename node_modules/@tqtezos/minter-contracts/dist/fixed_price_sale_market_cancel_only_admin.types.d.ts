import { address, BigMap, nat } from './type-aliases';
declare type Storage = {
    admin?: {
        admin: address;
        paused: boolean;
        pending_admin?: address;
    };
    sales: BigMap<nat, {
        seller: address;
        sale_data: {
            sale_price: nat;
            sale_token: {
                fa2_address: address;
                token_id: nat;
            };
            money_token: {
                fa2_address: address;
                token_id: nat;
            };
            amount: nat;
        };
    }>;
    next_sale_id: nat;
};
declare type Methods = {
    confirm_admin: () => Promise<void>;
    pause: (param: boolean) => Promise<void>;
    set_admin: (param: address) => Promise<void>;
    buy: (param: nat) => Promise<void>;
    cancel: (param: nat) => Promise<void>;
    sell: (sale_price: nat, sale_token: {
        fa2_address: address;
        token_id: nat;
    }, money_token: {
        fa2_address: address;
        token_id: nat;
    }, amount: nat) => Promise<void>;
};
export declare type FixedPriceSaleMarketCancelOnlyAdminContractType = {
    methods: Methods;
    storage: Storage;
    code: {
        __type: 'FixedPriceSaleMarketCancelOnlyAdminCode';
        protocol: string;
        code: object[];
    };
};
export {};
